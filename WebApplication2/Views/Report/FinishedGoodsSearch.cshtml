@model IEnumerable<WebApplication1.QueryViewModel.FinishedGoodsQuery2>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var position = 0;
    decimal bal = 0;
    decimal sum_cr = 0;
    decimal sum_dr = 0;
    var total = 0;
    int op = 0;
    var s_date = ViewBag.StartDate;
    string PINV = "PINV";
    string SINV = "SINV";
    var stockvalue = ViewBag.stockvalue as List<WebApplication1.QueryViewModel.stockvalue>;
}
<script type="text/javascript">
    function printDiv(divName) {
        var printContents = document.getElementById(divName).innerHTML;
        var originalContents = document.body.innerHTML;

        document.body.innerHTML = printContents;

        window.print();

        document.body.innerHTML = originalContents;
    }</script>
<div class="content">
    <div class="content-header">
        <div class="leftside-content-header">
            <ul class="breadcrumbs">
                <li><a><i class="fa fa-cubes" aria-hidden="true"></i> Finished Goods Report</a></li>
            </ul>
        </div>
    </div>
    @*<button type="button" onclick="printDiv('printableArea')" class="btn btn-info pull-right"><i class="fa fa-print"></i> Print</button>*@
    <div class="row" id="printableArea">
        <div class="col-sm-12">
            <div class="panel">
                <div class="panel-content">
                    <div class="table-responsive">
                        <center>
                            <br /><b>From:</b> @Convert.ToDateTime(ViewBag.StartDate).ToString("dd-MM-yyyy") <b>To :</b> @Convert.ToDateTime(ViewBag.EndDate).ToString("dd-MM-yyyy")</br/></br/></br/>
                        </center>
                        <table class="table table-bordered table-hover table-striped table-success" id="searchable">
                            <thead class="bordered-darkorange">
                                <tr>
                                    <th></th>
                                    <th colspan="4"><center>Opening Stock</center></th>
                                    <th colspan="4"><center>Stock In</center></th>
                                    <th colspan="4"><center>Stock Out</center></th>
                                    <th colspan="4"><center>Closing Stock</center></th>
                                    <th colspan="4"><center>Per Unit Cost</center></th>
                                    <th colspan="4"><center>Stock Value</center></th>
                                </tr>
                                <tr>
                                    <th>Product Name</th>

                                    <th>Dubbi</th>
                                    <th>Quarter</th>
                                    <th>Gallon</th>
                                    <th>Drum</th>

                                    <th>Dubbi</th>
                                    <th>Quarter</th>
                                    <th>Gallon</th>
                                    <th>Drum</th>

                                    <th>Dubbi</th>
                                    <th>Quarter</th>
                                    <th>Gallon</th>
                                    <th>Drum</th>

                                    <th>Dubbi</th>
                                    <th>Quarter</th>
                                    <th>Gallon</th>
                                    <th>Drum</th>
                                    
                                    <th>Dubbi</th>
                                    <th>Quarter</th>
                                    <th>Gallon</th>
                                    <th>Drum</th>
                                    
                                    <th>Dubbi</th>
                                    <th>Quarter</th>
                                    <th>Gallon</th>
                                    <th>Drum</th>

                                </tr>
                            </thead>
                            <tbody>
                                <span style="color:white"></span>
                                @foreach (var item in Model)
                                {
                            <tr>
                                <td>@item.ProductName</td>

                                <td>@String.Format("{0:N}", item.StkOpenDubbi)</td>
                                <td>@String.Format("{0:N}", item.StkOpenQuarter)</td>
                                <td>@String.Format("{0:N}", item.StkOpenGallon)</td>
                                <td>@String.Format("{0:N}", item.StkOpenDrum)</td>

                                <td>@String.Format("{0:N}", item.StkInDubbi)</td>
                                <td>@String.Format("{0:N}", item.StkInQuarter)</td>
                                <td>@String.Format("{0:N}", item.StkInGallon)</td>
                                <td>@String.Format("{0:N}", item.StkInDrum)</td>

                                <td>@String.Format("{0:N}", item.StkOutDubbi)</td>
                                <td>@String.Format("{0:N}", item.StkOutQuarter)</td>
                                <td>@String.Format("{0:N}", item.StkOutGallon)</td>
                                <td>@String.Format("{0:N}", item.StkOutDrum)</td>

                                <td>@String.Format("{0:N}", item.StkDubbi)</td>
                                <td>@String.Format("{0:N}", item.StkQuarter)</td>
                                <td>@String.Format("{0:N}", item.StkGallon)</td>
                                <td>@String.Format("{0:N}", item.StkDrum)</td>

                                @*<td>@String.Format("{0:N}", (item.StkOpenDubbi + item.StkInDubbi - item.StkOutDubbi))</td>
        <td>@String.Format("{0:N}", (item.StkOpenQuarter + item.StkInQuarter - item.StkOutQuarter))</td>
        <td>@String.Format("{0:N}", (item.StkOpenGallon + item.StkInGallon - item.StkOutGallon))</td>
        <td>@String.Format("{0:N}", (item.StkInDrum + item.StkInDrum - item.StkOutDrum))</td>*@

                                @if (stockvalue.Where(c => c.ColorID == item.ProductID).FirstOrDefault() != null)
                                {


                                    foreach (var item1 in stockvalue.Where(c => c.ColorID == item.ProductID).ToList())
                                    {


                                        <td>@String.Format("{0:N}", item1.dubbi)</td>
                                        <td>@String.Format("{0:N}", item1.Quarter)</td>
                                        <td>@String.Format("{0:N}", item1.Gallon)</td>
                                        <td>@String.Format("{0:N}", item1.Drum)</td>

                                        <td>@String.Format("{0:N}", item1.dubbi * item.StkDubbi)</td>
                                        <td>@String.Format("{0:N}", item1.Quarter * item.StkQuarter)</td>
                                        <td>@String.Format("{0:N}", item1.Gallon * item.StkGallon)</td>
                                        <td>@String.Format("{0:N}", item1.Drum * item.StkDrum)</td>


                                    }
                                }
                                else
                                {
                                    <td>@String.Format("{0:N}",0)</td>
                                    <td>@String.Format("{0:N}", 0)</td>
                                    <td>@String.Format("{0:N}", 0)</td>
                                    <td>@String.Format("{0:N}", 0)</td>

                                    <td>@String.Format("{0:N}", 0)</td>
                                    <td>@String.Format("{0:N}",0)</td>
                                    <td>@String.Format("{0:N}", 0)</td>
                                    <td>@String.Format("{0:N}", 0)</td>
                                }

                            </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
