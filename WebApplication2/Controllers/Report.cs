using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CRM.Models;
using WebApplication1.ViewModels;
using WebApplication1.QueryViewModel;
using WebApplication1.Models;
using System.Net;
using CrystalDecisions.CrystalReports.Engine;
using System.IO;
using System.Text.RegularExpressions;

namespace WebApplication1.Controllers
{
    [SessionTimeout]
    public class ReportController : Controller
    {
        private ApplicationDbContext _context;
        private List<PurchaseReportQuery> list;
        public List<DateTime> daylist=new List<DateTime>();
        List<tbl_RawMaterialReportQuery> lst_RawMaterialReportQuery = new List<tbl_RawMaterialReportQuery>();
        List<tbl_RawMaterialReportQuery> lst_RawMaterialReportQueryFinal = new List<tbl_RawMaterialReportQuery>();
        private List<SaleReportQuery> list_sale;
        decimal Srid = 0;
        List<RawMaterialReportQuery> listRaw = new List<RawMaterialReportQuery>();
        
     
        public ReportController()
        {
            _context = new ApplicationDbContext();
        }
        protected override void Dispose(bool disposing)
        {
            _context.Dispose();
        }

        //Calculate Stock for Raw2
        public void StockCalculateRaw2(string sel_opt, string sel_prd, string FromDate, string ToDate)
        {
            lst_RawMaterialReportQuery.Clear();
            lst_RawMaterialReportQueryFinal.Clear();

            decimal OpenTotal = 0, OpenTotal1 = 0;
            int strt = 0;
            string strsql;
            Srid = 1;
            strt = 0;

            var Prdlist = _context.Database.SqlQuery<tbl_Product>("select * from Product WHERE (CategoryID IN (" + sel_opt + ") and  CategoryID IN (select CategoryID from Categories where RawProductCheck=1)) AND (LEN(ProductName) > 3)  " + sel_prd + " order by ProductID").ToList();
            foreach (var PrdId in Prdlist)
            {
                lst_RawMaterialReportQuery.Add(
                    new tbl_RawMaterialReportQuery()
                    {
                        sr = Srid,
                        ProductID = PrdId.ProductID,
                        ProductName = PrdId.ProductName,
                        opening = PrdId.vattax,
                        PurchaseQTY = 0,
                        LabQTY = 0,
                        SalesStockReturn = 0,
                        BatchQty = 0,
                        LabBatchQty = 0,
                        SaleQTY = 0,
                        PurchaseRtn = 0,
                        damage = 0,
                        cost = PrdId.UnitPrice
                    }
                 );
            }

            Prdlist = _context.Database.SqlQuery<tbl_Product>("select * from Product WHERE (CategoryID IN (" + sel_opt + ") and  CategoryID IN (select CategoryID from Categories where RawProductCheck=1)) AND (LEN(ProductName) > 3)  " + sel_prd + " order by ProductID").ToList();
            foreach (var PrdId in Prdlist)
            {
                //Item from Purchase , Lab Master, -Semi Finished Product  For Stock In
                foreach (var PrdPurchase in _context.Database.SqlQuery<sampledetail>("SELECT pid, pname, cp FROM purchasedetail WHERE (pid = " + PrdId.ProductID + ") GROUP BY pid, pname, cp").ToList())
                {
                    lst_RawMaterialReportQuery.Add(
                        new tbl_RawMaterialReportQuery()
                        {
                            sr = Srid,
                            ProductID = PrdPurchase.pid,
                            ProductName = PrdPurchase.pname,
                            opening = PrdId.vattax,
                            PurchaseQTY = 0,
                            LabQTY = 0,
                            SalesStockReturn = 0,
                            BatchQty = 0,
                            LabBatchQty = 0,
                            SaleQTY = 0,
                            PurchaseRtn = 0,
                            damage = 0,
                            cost = PrdPurchase.cp
                        }
                     );
                    Srid++;
                }

                foreach (var PrdLabSemi in _context.Database.SqlQuery<LabMasterQuery>("SELECT pid, ColorName, kgcoast FROM labm WHERE (pid = " + PrdId.ProductID + ") GROUP BY pid, ColorName, kgcoast").ToList())
                {
                    lst_RawMaterialReportQuery.Add(
                        new tbl_RawMaterialReportQuery()
                        {
                            sr = Srid,
                            ProductID = PrdLabSemi.pid,
                            ProductName = PrdLabSemi.ColorName,
                            opening = PrdId.vattax,
                            PurchaseQTY = 0,
                            LabQTY = 0,
                            SalesStockReturn = 0,
                            BatchQty = 0,
                            LabBatchQty = 0,
                            SaleQTY = 0,
                            PurchaseRtn = 0,
                            damage = 0,
                            cost = PrdLabSemi.kgcoast
                        }
                     );
                    Srid++;
                }
            }

            if (lst_RawMaterialReportQuery.Count > 0)
                lst_RawMaterialReportQueryFinal = lst_RawMaterialReportQuery;

            foreach (var PrdId in lst_RawMaterialReportQuery)
            {
                OpenTotal = _context.Database.SqlQuery<decimal>("SELECT vattax from Product where ProductID = " + PrdId.ProductID).FirstOrDefault();
                OpenTotal = OpenTotal + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = " + PrdId.ProductID + ") AND (purchasedetail.cp = '" + PrdId.cost + "') AND (purchasem.date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm WHERE (pid = " + PrdId.ProductID + ") AND (kgcoast=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();

                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = " + PrdId.ProductID + ") AND (Cost=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = " + PrdId.ProductID + ") AND (Rate=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = " + PrdId.ProductID + ") AND (Cost=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = " + PrdId.ProductID + ") AND (Order_detail.sp=" + PrdId.cost + ") AND (Order_Master.date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(CAST(srpdetail.qty AS decimal)), 0) AS Expr1 FROM srpdetail INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE (srpdetail.pid  = " + PrdId.ProductID + ") AND (srpdetail.cp=" + PrdId.cost + ") AND (srpm.date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid= " + PrdId.ProductID + ") AND (cp=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail WHERE (ItemId= " + PrdId.ProductID + ") AND (rate=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();

                OpenTotal1 = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = " + PrdId.ProductID + ") AND (Cost=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                OpenTotal1 = OpenTotal1 + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = " + PrdId.ProductID + ") AND (Rate=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                OpenTotal1 = OpenTotal1 + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail WHERE (ItemId= " + PrdId.ProductID + ") AND (rate=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();

                if (lst_RawMaterialReportQueryFinal.Any(x => x.ProductID == PrdId.ProductID && x.cost == PrdId.cost))
                {
                    var item = lst_RawMaterialReportQueryFinal.FirstOrDefault(x => x.ProductID == PrdId.ProductID && x.cost == PrdId.cost);
                    item.opening = OpenTotal;
                    item.PurchaseQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = " + PrdId.ProductID + ") AND (purchasedetail.cp = '" + PrdId.cost + "') AND (purchasem.date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                    item.PurchaseRtn = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(CAST(srpdetail.qty AS decimal)), 0) AS Expr1 FROM srpdetail INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE (srpdetail.pid  = " + PrdId.ProductID + ") AND (srpdetail.cp=" + PrdId.cost + ") AND (srpm.date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                    item.LabQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm WHERE (pid = " + PrdId.ProductID + ") AND (kgcoast=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                    item.BatchQty = OpenTotal1;
                    item.LabBatchQty = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = " + PrdId.ProductID + ") AND (Cost=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                    item.SaleQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = " + PrdId.ProductID + ") AND (Order_detail.sp=" + PrdId.cost + ") AND (Order_Master.date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                    item.damage = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid= " + PrdId.ProductID + ") AND (cp=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                }
                //lst_RawMaterialReportQueryFinal.Single(x => x.ProductID == PrdId.ProductID && x.cost == PrdId.cost).opening = OpenTotal;
            }

            _context.Database.ExecuteSqlCommand("delete from tbl_RawReportCalculation");
            foreach (var lstf in lst_RawMaterialReportQueryFinal)
            {
                _context.Database.ExecuteSqlCommand("INSERT INTO tbl_RawReportCalculation VALUES (" + lstf.sr + "," + lstf.ProductID + ",'" + lstf.ProductName + "'," + lstf.opening + "," + lstf.PurchaseQTY + "," + lstf.LabQTY + "," + lstf.SalesStockReturn + "," + lstf.BatchQty + "," + lstf.LabBatchQty + "," + lstf.SaleQTY + "," + lstf.PurchaseRtn + "," + lstf.damage + "," + lstf.cost + ")");
            }
        }

        //Calculate Stock for Raw
        public void StockCalculateRaw(string sel_opt, string sel_prd, string FromDate, string ToDate)
        {
            decimal OpenTotal = 0;
            int strt = 0;
            string strsql;
            Srid = 1;
            strt = 0;

            _context.Database.ExecuteSqlCommand("delete from tbl_RawReportCalculation");
            var Prdlist = _context.Database.SqlQuery<Products>("select * from Product WHERE (CategoryID IN (" + sel_opt + ")  " + sel_prd + " and  CategoryID IN (select CategoryID from Categories where RawProductCheck=1)) AND (LEN(ProductName) > 3)").ToList();

            foreach (var PrdId in Prdlist)
            {

                if (strt == 0)
                    _context.Database.ExecuteSqlCommand("INSERT INTO tbl_RawReportCalculation VALUES (" + Srid + "," + PrdId.ProductID + ",'" + PrdId.ProductName + "'," + PrdId.vattax + ",0,0,0,0,0,0,0,0," + PrdId.UnitPrice + ")");
                else
                {
                    var list1 = _context.Database.SqlQuery<sampledetail>("SELECT     pid, pname, cp FROM         purchasedetail WHERE     (pid = 12) GROUP BY pid, pname, cp").ToList();

                    //Item from Purchase , Lab -Semi Finished Product
                    foreach (var PrdPurchase in _context.Database.SqlQuery<sampledetail>("SELECT pid, pname, cp FROM purchasedetail WHERE (pid = " + PrdId.ProductID + ") GROUP BY pid, pname, cp").ToList())
                    {
                        _context.Database.ExecuteSqlCommand("INSERT INTO tbl_RawReportCalculation VALUES (" + Srid + "," + PrdPurchase.pid + ",'" + PrdPurchase.pname + "',0,0,0,0,0,0,0,0,0," + PrdPurchase.cp + ")");
                    }

                    foreach (var PrdLabSemi in _context.Database.SqlQuery<LabMasterQuery>("SELECT pid, pname, cp FROM sampledetail WHERE (pid = " + PrdId.ProductID + ") GROUP BY pid, pname, cp").ToList())
                    {
                        _context.Database.ExecuteSqlCommand("INSERT INTO tbl_RawReportCalculation VALUES (" + Srid + "," + PrdLabSemi.pid + ",'" + PrdLabSemi.ColorName + "',0,0,0,0,0,0,0,0,0," + PrdLabSemi.kgcoast + ")");
                    }
                }

                strt++;
                Srid++;
            }

            foreach (var PrdId in _context.Database.SqlQuery<RawReportCalculationQuery>("SELECT * FROM tbl_RawReportCalculation order by ProductID").ToList())
            {
                OpenTotal = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = " + PrdId.ProductID + ") AND (purchasedetail.cp = '" + PrdId.cost + "') AND (purchasem.date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(Stand_total_weight), 0) AS Expr1 FROM labm WHERE (pid = " + PrdId.ProductID + ") AND (kgcoast=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();

                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = " + PrdId.ProductID + ") AND (Cost=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = " + PrdId.ProductID + ") AND (Rate=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = " + PrdId.ProductID + ") AND (Cost=" + PrdId.cost + ") AND (date < '" + FromDate + "')").FirstOrDefault();
                OpenTotal = OpenTotal - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = " + PrdId.ProductID + ") AND (Order_detail.sp=" + PrdId.cost + ") AND (Order_Master.date < '" + FromDate + "')").FirstOrDefault();

                strsql = "update tbl_RawReportCalculation set ";
                strsql = strsql + " opening=" + OpenTotal;
                strsql = strsql + ", PurchaseQTY=" + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = " + PrdId.ProductID + ") AND (purchasedetail.cp = '" + PrdId.cost + "') AND (purchasem.date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                strsql = strsql + ", LabQTY=" + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(Stand_total_weight), 0) AS Expr1 FROM labm WHERE (pid = " + PrdId.ProductID + ") AND (kgcoast=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                //strsql = strsql + ", SalesStockReturn=";


                OpenTotal = Convert.ToDecimal(_context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = " + PrdId.ProductID + ") AND (Cost=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault());
                OpenTotal = OpenTotal + Convert.ToDecimal(_context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = " + PrdId.ProductID + ") AND (Rate=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault());
                strsql = strsql + ", BatchQty=" + OpenTotal;
                strsql = strsql + ", LabBatchQty=" + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = " + PrdId.ProductID + ") AND (Cost=" + PrdId.cost + ") AND (date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                strsql = strsql + ", SaleQTY=" + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = " + PrdId.ProductID + ") AND (Order_detail.sp=" + PrdId.cost + ") AND (Order_Master.date between '" + FromDate + "' and '" + ToDate + "')").FirstOrDefault();
                //strsql = strsql + ", PurchaseRtn=";
                //strsql = strsql + ", damage=";

                strsql = strsql + " where ProductID=" + PrdId.ProductID + " and cost=" + PrdId.cost;

                _context.Database.ExecuteSqlCommand(strsql);
            }


            //decimal PurchaseIn = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = " + PrdId.ProductID + ") AND (purchasem.date < '" + Request["s_date"] + "')").FirstOrDefault();
            //decimal PurchaseBetweenIn = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = " + PrdId.ProductID + ") AND (purchasem.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')").FirstOrDefault();


        }
        // GET: SaleWctn
        public ActionResult RawMaterialIndex()
        {       
            return View();
        }
        public ActionResult PurchaseORderReport()
        {
            return View();
        }
        public ActionResult POReport(string POSeletion)
        {
            List<RawMaterialReportQuery> lstPO = new List<RawMaterialReportQuery>();
            if (POSeletion== "RawItems")
                lstPO = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT Qtybal, ProductID, pname, ReorderLevel, MaxLevelRaw, CategoryName, QualityCategoriesitem, CASE WHEN qtybal < ReorderLevel THEN MaxLevelRaw - qtybal ELSE 0 END AS POQty, ISNULL ((SELECT TOP (1) cp FROM purchasedetail WHERE (pid = derivedtbl_1.ProductID) ORDER BY invid DESC), 0) AS PurchaseCost, CASE WHEN qtybal < ReorderLevel THEN 'Low In Stock' ELSE '' END AS QTYStatus FROM (SELECT Product.vattax + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID)), 0) - ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail WHERE (ItemId = Product.ProductID)), 0) - ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 WHERE (ItemId = Product.ProductID)), 0) - ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail WHERE (ItemId = Product.ProductID)), 0) - ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM tbl_BatchFillingDetail WHERE (ItemId = Product.ProductID)), 0) - ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID)), 0) - ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srsdetail WHERE (Status IN ('TSINV', 'WTSINV')) AND (prid = Product.ProductID)), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srsdetail AS srsdetail_1 WHERE (Status IN ('SRINV', 'TSRINV')) AND (prid = Product.ProductID)), 0) - ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail WHERE (pid = Product.ProductID)), 0) + ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID)), 0) - (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = Product.ProductID)) AS Qtybal, Product.ProductID, Product.ProductName AS pname, Product.ReorderLevel, ProductExtend.MaxLevelRaw, Categories.CategoryName, ISNULL(QualityCategories.CategoryName, '') AS QualityCategoriesitem FROM Product INNER JOIN ProductExtend ON Product.ProductID = ProductExtend.ProductID INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID LEFT OUTER JOIN QualityCategories ON Product.iduser = QualityCategories.ID WHERE (Product.Active = 'Active') AND (Product.CategoryID IN (1, 38))) AS derivedtbl_1 ORDER BY CategoryName, pname").ToList();
            else
                lstPO = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT Qtybal, ProductID, ProductType, pname, ReorderLevel, MaxLevelRaw, ISNULL ((SELECT TOP (1) cp FROM purchasedetail WHERE (pid = derivedtbl_2.ProductID) ORDER BY invid DESC), 0) AS PurchaseCost, CASE WHEN qtybal < ReorderLevel THEN 'Low In Stock' ELSE '' END AS QTYStatus, CASE WHEN qtybal < ReorderLevel THEN MaxLevelRaw - qtybal ELSE 0 END AS POQty, QualityCategoriesitem, CategoryName FROM (SELECT vattax + PurchaseIn - PurchaseRtnOut - SaleOut + SaleReturnIn - BatchStockOut - wastageout - wastageout2 AS Qtybal, ProductID, ProductType, ProductName AS pname, ReorderLevel, MaxLevelRaw, QualityCategoriesitem, CategoryName FROM (SELECT Product.ProductID, Product.ProductName, Product.ReorderLevel, Product.vattax, ProductExtend.MaxLevelRaw, Categories.CategoryName, ISNULL ((SELECT ISNULL(CategoryName, 0) AS Expr1 FROM QualityCategories WHERE (ID = Product.iduser)), '') AS QualityCategoriesitem, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID)) AS PurchaseIn, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srpdetail WHERE (pid = Product.ProductID)) AS PurchaseRtnOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM Order_detail WHERE (prid = Product.ProductID)) AS SaleOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail WHERE (Status IN ('SRINV', 'TSRINV')) AND (prid = Product.ProductID)) AS SaleReturnIn, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail WHERE (ItemId = Product.ProductID)) AS BatchStockOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = Product.ProductID)) AS wastageout, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (pid = Product.ProductID)) AS wastageout2, ProductExtend.ProductType FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID INNER JOIN ProductExtend ON Product.ProductID = ProductExtend.ProductID WHERE (Product.CategoryID = 43) AND (LEN(ProductExtend.ProductType) > 2)) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName, pname").ToList();

            var POPurInvoiceVM = new PurInvoiceVM
            {
                PORawMaterialReportQuery = lstPO,
                POpurchasedetail = _context.Database.SqlQuery<PurchaseDis>("SELECT purchasedetail.pid AS itemid,purchasedetail.cp AS total, purchasem.supname AS SupplierName, purchasem.invid, purchasem.supid FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid ORDER BY purchasem.invid DESC").ToList()
            };
            return View(POPurInvoiceVM);
        }

        [HttpGet]
        public ActionResult GetItemsData(double message)
        {
            var pro_list = _context.Database.SqlQuery<Products>("select ProductName,ProductID,UnitPrice,ReorderLevel,vattax,CategoryID,[desc],Active from Product where CategoryID=" + message + " order by ProductName").ToList();
            return Json(pro_list, JsonRequestBehavior.AllowGet);
        }

        public ActionResult FillingReport()
        {
            var SaleInvVM = new SaleInvVM
            {
                Region_list = _context.Database.SqlQuery<Region>("select * from Region").ToList(),
               
            };
            return View(SaleInvVM);
        }
        public ActionResult FillingReportSearch()
        {
            string rid = Request["rid"];
            string str = "";
            if (rid != "0" && rid != "Select Region") {
                str = str + "AND  tbl_BatchFillingMaster.RegionId =" + rid;
                //str = str + "AND ProductIngrMaster.RegionId =" + rid;
            }
           
            var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("yyyy-MM-dd");
            var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("yyyy-MM-dd");
            //var  query = "SELECT tbl_BatchFillingMaster.Fillingdate, ProductIngrMaster.BatchNo, ProductIngrMaster.ColorName, ProductIngrMaster.ProductName, ProductIngrMaster.totalweight, ProductIngrMaster.kgcoast, ProductIngrMaster.Total_cost, tbl_BatchFillingMaster.FilledDubbiQTY AS FilledDubbi, tbl_BatchFillingMaster.FilledQuarterQTY AS FilledQuarter, tbl_BatchFillingMaster.FilledGallonQTY AS FilledGallon, tbl_BatchFillingMaster.FilledDrumQTY AS FilledDrum FROM ProductIngrMaster INNER JOIN tbl_BatchFillingBatches ON ProductIngrMaster.BatchNo = tbl_BatchFillingBatches.batchn INNER JOIN tbl_BatchFillingMaster ON tbl_BatchFillingBatches.sr = tbl_BatchFillingMaster.Id Where ProductIngrMaster.date between'" + StartDate + "' and '" + Enddate + "' " + str + " ";
           //last var list = _context.Database.SqlQuery<ProductIngrMasterQuery>("SELECT tbl_BatchFillingBatches.date AS Fillingdate1, ProductIngrMaster.pid, tbl_BatchFillingBatches.batchn AS BatchNo, ProductIngrMaster.ColorName, ProductIngrMaster.ProductName, ProductIngrMaster.Quality, tbl_BatchFillingBatches.filled AS totalweight, tbl_BatchFillingMaster.batchespercost AS kgcoast, tbl_BatchFillingMaster.batchcost AS Total_cost, tbl_BatchFillingMaster.FilledDubbiQTY AS FilledDubbi, tbl_BatchFillingMaster.FilledQuarterQTY AS FilledQuarter, tbl_BatchFillingMaster.FilledGallonQTY AS FilledGallon, tbl_BatchFillingMaster.FilledDrumQTY AS FilledDrum, (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_0 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_0 WHERE (CategoryID = 43))) AND (type = 'Quarter')) AS Quarter, (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_1 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_1 WHERE (CategoryID = 43))) AND (type = 'Dubbi')) AS Dubbi, (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_2 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_2 WHERE (CategoryID = 43))) AND (type = 'Gallon')) AS Gallon, (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_3 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_3 WHERE (CategoryID = 43))) AND (type = 'Drum')) AS Drum, tbl_BatchFillingMaster.RegionId FROM tbl_BatchFillingBatches INNER JOIN tbl_BatchFillingMaster ON tbl_BatchFillingBatches.sr = tbl_BatchFillingMaster.Id INNER JOIN ProductIngrMaster ON tbl_BatchFillingBatches.batchn = ProductIngrMaster.BatchNo Where tbl_BatchFillingMaster.Fillingdate between'" + StartDate + "' and '" + Enddate + "' " + str + "Order BY ProductIngrMaster.date ").ToList();
            var list = _context.Database.SqlQuery<ProductIngrMasterQuery>("SELECT tbl_BatchFillingBatches.date AS Fillingdate1, ProductIngrMaster.pid, tbl_BatchFillingBatches.batchn AS BatchNo, ProductIngrMaster.ColorName, ProductIngrMaster.ProductName, ProductIngrMaster.Quality, tbl_BatchFillingBatches.filled AS totalweight, ProductIngrMaster.kgcoast AS kgcoast, ProductIngrMaster.kgcoast * tbl_BatchFillingBatches.filled AS Total_cost, tbl_BatchFillingMaster.FilledDubbiQTY AS FilledDubbi, tbl_BatchFillingMaster.FilledQuarterQTY AS FilledQuarter, tbl_BatchFillingMaster.FilledGallonQTY AS FilledGallon, tbl_BatchFillingMaster.FilledDrumQTY AS FilledDrum, (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_0 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_0 WHERE (CategoryID = 43))) AND (type = 'Quarter')) AS Quarter, (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_1 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_1 WHERE (CategoryID = 43))) AND (type = 'Dubbi')) AS Dubbi, (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_2 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_2 WHERE (CategoryID = 43))) AND (type = 'Gallon')) AS Gallon, (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_3 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_3 WHERE (CategoryID = 43))) AND (type = 'Drum')) AS Drum, tbl_BatchFillingMaster.RegionId, (SELECT name FROM Region WHERE (id = tbl_BatchFillingMaster.RegionId)) AS RegionName FROM tbl_BatchFillingBatches INNER JOIN tbl_BatchFillingMaster ON tbl_BatchFillingBatches.sr = tbl_BatchFillingMaster.Id INNER JOIN ProductIngrMaster ON tbl_BatchFillingBatches.batchn = ProductIngrMaster.BatchNo Where tbl_BatchFillingMaster.Fillingdate between'" + StartDate + "' and '" + Enddate + "' " + str + "Order BY ProductIngrMaster.date ").ToList();
            //var list = _context.Database.SqlQuery<ProductIngrMasterQuery>("SELECT DISTINCT  tbl_BatchFillingMaster.Fillingdate as Fillingdate1,ProductIngrMaster.pid, ProductIngrMaster.BatchNo, ProductIngrMaster.ColorName, ProductIngrMaster.ProductName, ProductIngrMaster.totalweight, ProductIngrMaster.kgcoast, ProductIngrMaster.Total_cost, tbl_BatchFillingMaster.FilledDubbiQTY AS FilledDubbi, tbl_BatchFillingMaster.FilledQuarterQTY AS FilledQuarter, tbl_BatchFillingMaster.FilledGallonQTY AS FilledGallon, tbl_BatchFillingMaster.FilledDrumQTY AS FilledDrum, " +
            //    " (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_0 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_0 WHERE (CategoryID = 43))) AND (type = 'Quarter')) AS Quarter, " +
            //    " (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_1 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_1 WHERE (CategoryID = 43))) AND (type = 'Dubbi')) AS Dubbi, " +
            //    " (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_2 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_2 WHERE (CategoryID = 43))) AND (type = 'Gallon')) AS Gallon, " +
            //    " (SELECT ISNULL(SUM(Total), 0) AS Expr1 FROM tbl_BatchFillingDetail AS tbl_BatchFillingDetail_3 WHERE (sr = tbl_BatchFillingMaster.Id) AND (ItemId IN (SELECT ProductID FROM Product AS Product_3 WHERE (CategoryID = 43))) AND (type = 'Drum')) AS Drum " +
            //    " FROM ProductIngrMaster INNER JOIN tbl_BatchFillingBatches ON ProductIngrMaster.BatchNo = tbl_BatchFillingBatches.batchn INNER JOIN tbl_BatchFillingMaster ON tbl_BatchFillingBatches.sr = tbl_BatchFillingMaster.Id Where tbl_BatchFillingMaster.Fillingdate between'" + StartDate + "' and '" + Enddate + "' "+ str + " ").ToList();
 
            return View(list);
        }
        
        public ActionResult BatchSheetSummary()
        {
            var list = _context.Database.SqlQuery<MianCategories>("SELECT * from MianCategories order by MainCategoryName").ToList();
            var list1 = _context.Database.SqlQuery<Region>("SELECT * from Region ").ToList();
            ViewData["list1"] = list1;
            return View(list);
        }
        public ActionResult LabSheetSummary()
        {
            var list = _context.Database.SqlQuery<MianCategories>("SELECT * from MianCategories order by MainCategoryName").ToList();
            var list1 = _context.Database.SqlQuery<Region>("SELECT * from Region ").ToList();
            ViewData["list1"] = list1;
            return View(list);
        }

        [HttpGet]
        public ActionResult GetCategoryData(double message)
        {
            var pro_list = _context.Database.SqlQuery<Categories>("select * from Categories where MainCategoryID=" + message + " order by CategoryName").ToList();
            return Json(pro_list, JsonRequestBehavior.AllowGet);
        }

        [HttpGet]
        public ActionResult GetColorsData(double message)
        {
            var pro_list = _context.Database.SqlQuery<Products>("select ProductName,ProductID,UnitPrice,ReorderLevel,vattax,CategoryID,[desc],Active from Product where CategoryID=" + message + " order by ProductName").ToList();
            return Json(pro_list, JsonRequestBehavior.AllowGet);
        }

       
        public ActionResult RawMaterialSearch()
        {
            decimal opt = Convert.ToInt32(Request["opt"]);
            decimal productid = Convert.ToInt32(Request["second_id"]);
            var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("yyyy-MM-dd");
            var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("yyyy-MM-dd");

            string sel_opt = "", sel_prd = "", sel_prd_search = "";
            listRaw.Clear();

            if (productid > 0)
                sel_prd = " and ProductID=" + productid;

            if (Request["prdsearchtext"] != "" && Request["prdsearchtext"] != null)
                sel_prd_search = " where pname like '%" + Request["prdsearchtext"] + "%' ";

            if (opt == 0)
                sel_opt = "1, 38, 43";
            else
                sel_opt = opt.ToString();

            if (Request["RawReport"] == "GReport")
            {
                if (sel_prd_search.Length > 0)
                    sel_prd_search = " and Product.ProductName like '%" + Request["prdsearchtext"] + "%' ";
                else
                    sel_prd_search = "";
                listRaw = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr, ProductID, pname, vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, cost, vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, cast(SalesStockReturn as decimal)  AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail WHERE (pid = Product.ProductID)), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID)), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail WHERE (pid = Product.ProductID)), 0) AS PurchaseRtn, (SELECT  ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail WHERE (prid = Product.ProductID) AND (Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail WHERE (ItemId = Product.ProductID)), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 WHERE (ItemId = Product.ProductID)), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail WHERE (ItemId = Product.ProductID)), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID)), 0)+(SELECT     ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (prid = Product.ProductID) AND (Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = Product.ProductID)), 0) + ISNULL((SELECT     ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail WHERE     (ItemId = Product.ProductID)), 0) AS damage, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + ") AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName, pname").ToList();

                ReportDocument rd = new ReportDocument();

                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptRawMaterial.rpt"));


                //var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
                //var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");
                rd.SetDataSource(list);
                rd.SetParameterValue("compname", "Test");
                rd.SetParameterValue("StartDate", StartDate);
                rd.SetParameterValue("Enddate", Enddate);
                Response.Buffer = false;
                Response.ClearContent();
                Response.ClearHeaders();

                Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
                stream.Seek(0, SeekOrigin.Begin);
                return File(stream, "application/pdf", "rptRawMaterial.pdf");
            }
            else
            {
                //if (sel_prd_search.Length > 0)
                //    StockCalculateRaw2(sel_opt, " and ProductName like '%" + Request["prdsearchtext"] + "%' ", Request["s_date"], Request["e_date"]);
                //else
                //    StockCalculateRaw2(sel_opt, sel_prd, Request["s_date"], Request["e_date"]);
                //list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT sr, ProductID, pname, vattax, QTYin, QTYLabin, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutprd, qtyoutwast, cost, qtybal, CategoryName, cost * qtybal AS ext1 FROM (SELECT tbl_RawReportCalculation.sr, tbl_RawReportCalculation.ProductID, tbl_RawReportCalculation.ProductName AS pname, tbl_RawReportCalculation.opening AS vattax, tbl_RawReportCalculation.PurchaseQTY AS QTYin, tbl_RawReportCalculation.LabQTY AS QTYLabin, tbl_RawReportCalculation.SalesStockReturn AS QTYrtnIn, tbl_RawReportCalculation.BatchQty AS qtyout, tbl_RawReportCalculation.LabBatchQty AS qtyoutlab, tbl_RawReportCalculation.SaleQTY AS QTYSaleOut, tbl_RawReportCalculation.PurchaseRtn AS qtyoutprd, tbl_RawReportCalculation.damage AS qtyoutwast, tbl_RawReportCalculation.cost, tbl_RawReportCalculation.opening + tbl_RawReportCalculation.PurchaseQTY + tbl_RawReportCalculation.LabQTY + tbl_RawReportCalculation.SalesStockReturn - tbl_RawReportCalculation.BatchQty - tbl_RawReportCalculation.LabBatchQty - tbl_RawReportCalculation.SaleQTY - tbl_RawReportCalculation.PurchaseRtn - tbl_RawReportCalculation.damage AS qtybal, Categories.CategoryName FROM tbl_RawReportCalculation INNER JOIN Product ON tbl_RawReportCalculation.ProductID = Product.ProductID INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID) AS derivedtbl_1 ORDER BY CategoryName,pname").ToList();

                if (sel_prd_search.Length > 0)
                    sel_prd_search = " and Product.ProductName like '%" + Request["prdsearchtext"] + "%' ";
                else
                    sel_prd_search = "";

                //  TempData["SqlQuery"] = "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr, ProductID, pname, vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, cost, vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, cast(SalesStockReturn as decimal)  AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail WHERE (pid = Product.ProductID)), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID)), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail WHERE (pid = Product.ProductID)), 0) AS PurchaseRtn, (SELECT  ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail WHERE (prid = Product.ProductID) AND (Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail WHERE (ItemId = Product.ProductID)), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 WHERE (ItemId = Product.ProductID)), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail WHERE (ItemId = Product.ProductID)), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID)), 0)+(SELECT     ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (prid = Product.ProductID) AND (Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = Product.ProductID)), 0) + ISNULL((SELECT     ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail WHERE     (ItemId = Product.ProductID)), 0) AS damage, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + ") AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName, pname";

                //   TempData["SqlQuery"] = "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr, ProductID, pname, vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, batch_filling, cost, vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, CAST(SalesStockReturn AS decimal) AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, batch_filling, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail WHERE (pid = Product.ProductID)), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID)), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail WHERE (pid = Product.ProductID)), 0) AS PurchaseRtn, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail WHERE (prid = Product.ProductID) AND (Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail WHERE (ItemId = Product.ProductID)), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 WHERE (ItemId = Product.ProductID)), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail WHERE (ItemId = Product.ProductID)), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID)), 0) + (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (prid = Product.ProductID) AND (Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = Product.ProductID)), 0) AS damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail WHERE (ItemId = Product.ProductID)), 0) AS batch_filling, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + ") AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName, pname";
               // var str = "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr,ProductID, pname, (vattax + b_PurchaseQTY +b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling) AS vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast,batch_filling, cost, vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast-batch_filling AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast -batch_filling) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName,b_PurchaseQTY,b_LabQTY,b_PurchaseRtn,CAST(b_SalesStockReturn AS decimal) AS b_SalesStockReturn,b_BatchQty,b_LabBatchQty,b_SaleQTY,b_damage,b_batch_filling, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, CAST(SalesStockReturn AS decimal) AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, batch_filling AS batch_filling, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail d,purchasem m WHERE (d.pid = Product.ProductID AND m.invid=d.invid AND m.date<'" + StartDate + "')), 0) AS b_PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID AND date <' " + StartDate + " ')), 0) AS b_LabQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail,srpm m WHERE (pid = Product.ProductID AND srpdetail.invid = m.invid AND m.date<' " + StartDate + " ')), 0) AS b_PurchaseRtn, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail.OrderID AND m.date<' " + StartDate + " ') AND (Status IN ('TSRINV', 'SRINV'))) AS b_SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.Date<' " + StartDate + " ')), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.Date<' " + StartDate + " ')), 0) AS b_BatchQty, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail d,labm m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.Date<' " + StartDate + " ')), 0) AS b_LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID AND Order_Master.date<' " + StartDate + " ')), 0) + (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail_1.OrderID AND m.date <' " + StartDate + " ') AND (Status NOT IN ('TSRINV', 'SRINV'))) AS b_SaleQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail d,samplem m WHERE (d.pid = Product.ProductID AND d.invid=m.invid AND m.date<' " + StartDate + " ')), 0) AS b_damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail d WHERE (d.ItemId = Product.ProductID AND d.Date<' " + StartDate + " ' )), 0) AS b_batch_filling, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail d,purchasem m WHERE (d.pid = Product.ProductID AND m.invid=d.invid AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID AND date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail,srpm m WHERE (pid = Product.ProductID AND srpdetail.invid = m.invid AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS PurchaseRtn, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail.OrderID AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ') AND (Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail d,labm m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID AND Order_Master.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) + (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail_1.OrderID AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ') AND (Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail d,samplem m WHERE (d.pid = Product.ProductID AND d.invid=m.invid AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail d WHERE (d.ItemId = Product.ProductID AND d.date Between ' " + StartDate + " ' AND ' " + Enddate + " ' )), 0) AS batch_filling, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + " ) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName, pname";
                 //TempData["SqlQuery"] = "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr,ProductID, pname, (vattax + b_PurchaseQTY +b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling) AS vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast,batch_filling, cost, vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast-batch_filling AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast -batch_filling) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName,b_PurchaseQTY,b_LabQTY,b_PurchaseRtn,CAST(b_SalesStockReturn AS decimal) AS b_SalesStockReturn,b_BatchQty,b_LabBatchQty,b_SaleQTY,b_damage,b_batch_filling, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, CAST(SalesStockReturn AS decimal) AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, batch_filling AS batch_filling, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail d,purchasem m WHERE (d.pid = Product.ProductID AND m.invid=d.invid AND m.date<'" + StartDate + "')), 0) AS b_PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID AND date <' " + StartDate + " ')), 0) AS b_LabQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail,srpm m WHERE (pid = Product.ProductID AND srpdetail.invid = m.invid AND m.date<' " + StartDate + " ')), 0) AS b_PurchaseRtn, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail.OrderID AND m.date<' " + StartDate + " ') AND (Status IN ('TSRINV', 'SRINV'))) AS b_SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.Date<' " + StartDate + " ')), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.Date<' " + StartDate + " ')), 0) AS b_BatchQty, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail d,labm m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.Date<' " + StartDate + " ')), 0) AS b_LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID AND Order_Master.date<' " + StartDate + " ')), 0) + (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail_1.OrderID AND m.date <' " + StartDate + " ') AND (Status NOT IN ('TSRINV', 'SRINV'))) AS b_SaleQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail d,samplem m WHERE (d.pid = Product.ProductID AND d.invid=m.invid AND m.date<' " + StartDate + " ')), 0) AS b_damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail d WHERE (d.ItemId = Product.ProductID AND d.Date<' " + StartDate + " ' )), 0) AS b_batch_filling, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail d,purchasem m WHERE (d.pid = Product.ProductID AND m.invid=d.invid AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID AND date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail,srpm m WHERE (pid = Product.ProductID AND srpdetail.invid = m.invid AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS PurchaseRtn, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail.OrderID AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ') AND (Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail d,labm m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID AND Order_Master.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) + (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail_1.OrderID AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ') AND (Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail d,samplem m WHERE (d.pid = Product.ProductID AND d.invid=m.invid AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail d WHERE (d.ItemId = Product.ProductID AND d.date Between ' " + StartDate + " ' AND ' " + Enddate + " ' )), 0) AS batch_filling, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + " ) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName, pname";
                //TempData["SqlQuery"] = "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr,ProductID, pname, (vattax + b_PurchaseQTY +b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling) AS vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast,batch_filling, cost, vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast-batch_filling AS qtybal, cost * (vattax  + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling  + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast -batch_filling) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName,b_PurchaseQTY,b_LabQTY,b_PurchaseRtn,CAST(b_SalesStockReturn AS decimal) AS b_SalesStockReturn,b_BatchQty,b_LabBatchQty,b_SaleQTY,b_damage,b_batch_filling, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, CAST(SalesStockReturn AS decimal) AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, batch_filling AS batch_filling, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail d,purchasem m WHERE (d.pid = Product.ProductID AND m.invid=d.invid AND m.date<'" + StartDate + "')), 0) AS b_PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID AND date <' " + StartDate + " ')), 0) AS b_LabQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail,srpm m WHERE (pid = Product.ProductID AND srpdetail.invid = m.invid AND m.date<' " + StartDate + " ')), 0) AS b_PurchaseRtn, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail.OrderID AND m.date<' " + StartDate + " ') AND (Status IN ('TSRINV', 'SRINV'))) AS b_SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.Date<' " + StartDate + " ')), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.Date<' " + StartDate + " ')), 0) AS b_BatchQty, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail d,labm m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.Date<' " + StartDate + " ')), 0) AS b_LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID AND Order_Master.date<' " + StartDate + " ')), 0) + (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail_1.OrderID AND m.date <' " + StartDate + " ') AND (Status NOT IN ('TSRINV', 'SRINV'))) AS b_SaleQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail d WHERE (d.pid = Product.ProductID AND d.date<' " + StartDate + " ')), 0) AS b_damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail d WHERE (d.ItemId = Product.ProductID AND d.Date<' " + StartDate + " ' )), 0) AS b_batch_filling, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM purchasedetail d,purchasem m WHERE (d.pid = Product.ProductID AND m.invid=d.invid AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID AND date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS qty FROM srpdetail,srpm m WHERE (pid = Product.ProductID AND srpdetail.invid = m.invid AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS PurchaseRtn, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail.OrderID AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ') AND (Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM ProductIngrDetail d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) + ISNULL ((SELECT ISNULL(SUM(qty), 0) AS weight FROM ProductIngrDetail1 d,ProductIngrMaster m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(weight), 0) AS weight FROM labdetail d,labm m WHERE (d.ItemId = Product.ProductID AND d.OrderId=m.OrderId AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID AND Order_Master.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) + (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1,srsm m WHERE (prid = Product.ProductID AND m.OrderID=srsdetail_1.OrderID AND m.date Between ' " + StartDate + " ' AND ' " + Enddate + " ') AND (Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail d WHERE (d.pid = Product.ProductID AND d.date Between ' " + StartDate + " ' AND ' " + Enddate + " ')), 0) AS damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail d WHERE (d.ItemId = Product.ProductID AND d.date Between ' " + StartDate + " ' AND ' " + Enddate + " ' )), 0) AS batch_filling, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + " ) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName, pname";
              
                //TempData["SqlQuery"] = "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr,ProductID, pname, vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling AS vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, batch_filling, cost, vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName, b_PurchaseQTY, b_LabQTY, b_PurchaseRtn, CAST(b_SalesStockReturn AS decimal) AS b_SalesStockReturn, b_BatchQty, b_LabBatchQty, b_SaleQTY, b_damage, b_batch_filling, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, CAST(SalesStockReturn AS decimal) AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, batch_filling, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '2024-08-01')), 0) AS b_PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail.qty), 0) AS qty FROM srpdetail INNER JOIN srpm AS m ON srpdetail.invid = m.invid WHERE (srpdetail.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_PurchaseRtn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm AS m ON srsdetail.OrderID = m.OrderID AND m.title =srsdetail.Status WHERE (srsdetail.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail.Status IN ('TSRINV', 'SRINV'))) AS b_SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date < '" + StartDate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date < '" + StartDate + "')), 0) AS b_BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date < '" + StartDate + "')), 0) AS b_LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID) AND (Order_Master.date < '" + StartDate + "')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND m.title =srsdetail_1.Status WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS b_SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_batch_filling, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + " ')), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm AS labm_1 WHERE (pid = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + " ')), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS qty FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS m ON srpdetail_1.invid = m.invid WHERE (srpdetail_1.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + " ')), 0) AS PurchaseRtn, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS m ON srsdetail_2.OrderID = m.OrderID AND m.title =srsdetail_2.Status WHERE (srsdetail_2.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + " ') AND (srsdetail_2.Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date BETWEEN '" + StartDate + "' AND '" + Enddate + " ')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date BETWEEN '" + StartDate + "' AND '" + Enddate + " ')), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date BETWEEN '" + StartDate + "' AND '" + Enddate + " ')), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID WHERE (Order_detail_1.prid = Product.ProductID) AND (Order_Master_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + " ')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND m.title =srsdetail_1.Status WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + " ') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + " ')), 0) AS damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + " ')), 0) AS batch_filling, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (1))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName, pname";
               // var str = "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr,ProductID,pname , vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling AS vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, batch_filling, cost, vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName, b_PurchaseQTY, b_LabQTY, b_PurchaseRtn, CAST(b_SalesStockReturn AS decimal) AS b_SalesStockReturn, b_BatchQty, b_LabBatchQty, b_SaleQTY, b_damage, b_batch_filling, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, CAST(SalesStockReturn AS decimal) AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, batch_filling, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail.qty), 0) AS qty FROM srpdetail INNER JOIN srpm AS m ON srpdetail.invid = m.invid WHERE (srpdetail.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_PurchaseRtn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm AS m ON srsdetail.OrderID = m.OrderID AND m.title =srsdetail.Status WHERE (srsdetail.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail.Status IN ('TSRINV', 'SRINV'))) AS b_SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date < '" + StartDate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date < '" + StartDate + "')), 0) AS b_BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date < '" + StartDate + "')), 0) AS b_LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID) AND (Order_Master.date < '" + StartDate + "')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND srsdetail_1.Status = m.title WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS b_SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_batch_filling, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm AS labm_1 WHERE (pid = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS qty FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS m ON srpdetail_1.invid = m.invid WHERE (srpdetail_1.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS PurchaseRtn, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS m ON srsdetail_2.OrderID = m.OrderID AND srsdetail_2.Status = m.title WHERE (srsdetail_2.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srsdetail_2.Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID WHERE (Order_detail_1.prid = Product.ProductID) AND (Order_Master_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND srsdetail_1.Status = m.title WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS batch_filling, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + ") AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName,pname";

              
               // TempData["SqlQuery"] = "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr,ProductID,pname , vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling AS vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, batch_filling, cost, vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName, b_PurchaseQTY, b_LabQTY, b_PurchaseRtn, CAST(b_SalesStockReturn AS decimal) AS b_SalesStockReturn, b_BatchQty, b_LabBatchQty, b_SaleQTY, b_damage, b_batch_filling, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, CAST(SalesStockReturn AS decimal) AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, batch_filling, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail.qty), 0) AS qty FROM srpdetail INNER JOIN srpm AS m ON srpdetail.invid = m.invid WHERE (srpdetail.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_PurchaseRtn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm AS m ON srsdetail.OrderID = m.OrderID AND m.title =srsdetail.Status WHERE (srsdetail.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail.Status IN ('TSRINV', 'SRINV'))) AS b_SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date < '" + StartDate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date < '" + StartDate + "')), 0) AS b_BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date < '" + StartDate + "')), 0) AS b_LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID) AND (Order_Master.date < '" + StartDate + "')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND srsdetail_1.Status = m.title WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS b_SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_batch_filling, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm AS labm_1 WHERE (pid = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS qty FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS m ON srpdetail_1.invid = m.invid WHERE (srpdetail_1.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS PurchaseRtn, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS m ON srsdetail_2.OrderID = m.OrderID AND srsdetail_2.Status = m.title WHERE (srsdetail_2.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srsdetail_2.Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID WHERE (Order_detail_1.prid = Product.ProductID) AND (Order_Master_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND srsdetail_1.Status = m.title WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS batch_filling, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + ") AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName,pname";
               var str= "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr,ProductID,pname , vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling AS vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, batch_filling, cost, vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName, b_PurchaseQTY, b_LabQTY, b_PurchaseRtn, CAST(b_SalesStockReturn AS decimal) AS b_SalesStockReturn, b_BatchQty, b_LabBatchQty, b_SaleQTY, b_damage, b_batch_filling, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, CAST(SalesStockReturn AS decimal) AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, batch_filling, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0)   +ISNULL((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM StockDistributionDetail AS d INNER JOIN StockDistribution AS m ON d.invid = m.invid WHERE(d.pid = Product.ProductID) AND(m.date < '" + StartDate + "')), 0) AS b_PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail.qty), 0) AS qty FROM srpdetail INNER JOIN srpm AS m ON srpdetail.invid = m.invid WHERE (srpdetail.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_PurchaseRtn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm AS m ON srsdetail.OrderID = m.OrderID AND m.title =srsdetail.Status WHERE (srsdetail.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail.Status IN ('TSRINV', 'SRINV'))) AS b_SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date < '" + StartDate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date < '" + StartDate + "')), 0) AS b_BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date < '" + StartDate + "')), 0) AS b_LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID) AND (Order_Master.date < '" + StartDate + "')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND srsdetail_1.Status = m.title WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS b_SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_batch_filling, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM StockDistributionDetail AS d INNER JOIN StockDistribution AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm AS labm_1 WHERE (pid = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS qty FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS m ON srpdetail_1.invid = m.invid WHERE (srpdetail_1.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS PurchaseRtn, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS m ON srsdetail_2.OrderID = m.OrderID AND srsdetail_2.Status = m.title WHERE (srsdetail_2.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srsdetail_2.Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID WHERE (Order_detail_1.prid = Product.ProductID) AND (Order_Master_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND srsdetail_1.Status = m.title WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS batch_filling, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + ") AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName,pname";
                TempData["SqlQuery"] = "SELECT ROW_NUMBER() OVER ( ORDER BY CategoryName, pname ) sr,ProductID,pname , vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling AS vattax, CategoryName, QTYin, QTYLabin, qtyoutprd, QTYrtnIn, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, batch_filling, cost, vattax + b_PurchaseQTY + b_LabQTY - b_PurchaseRtn + b_SalesStockReturn - b_BatchQty - b_LabBatchQty - b_SaleQTY - b_damage - b_batch_filling + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling AS qtybal, cost * (vattax + QTYin + QTYLabin - qtyoutprd + QTYrtnIn - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast - batch_filling) AS ext1 FROM (SELECT ProductID, pname, vattax, CategoryName, b_PurchaseQTY, b_LabQTY, b_PurchaseRtn, CAST(b_SalesStockReturn AS decimal) AS b_SalesStockReturn, b_BatchQty, b_LabBatchQty, b_SaleQTY, b_damage, b_batch_filling, PurchaseQTY AS QTYin, LabQTY AS QTYLabin, PurchaseRtn AS qtyoutprd, CAST(SalesStockReturn AS decimal) AS QTYrtnIn, BatchQty AS qtyout, LabBatchQty AS qtyoutlab, SaleQTY AS QTYSaleOut, damage AS qtyoutwast, batch_filling, CASE WHEN cost > 0 THEN cost ELSE UnitPrice END AS cost FROM (SELECT Product.ProductID, Product.ProductName AS pname, Product.vattax, Categories.CategoryName, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0)   +ISNULL((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM StockDistributionDetail AS d INNER JOIN StockDistribution AS m ON d.invid = m.invid WHERE(d.pid = Product.ProductID) AND(m.date < '" + StartDate + "')), 0) AS b_PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm WHERE (pid = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail.qty), 0) AS qty FROM srpdetail INNER JOIN srpm AS m ON srpdetail.invid = m.invid WHERE (srpdetail.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_PurchaseRtn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm AS m ON srsdetail.OrderID = m.OrderID AND m.title =srsdetail.Status WHERE (srsdetail.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail.Status IN ('TSRINV', 'SRINV'))) AS b_SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date < '" + StartDate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date < '" + StartDate + "')), 0) AS b_BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date < '" + StartDate + "')), 0) AS b_LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID WHERE (Order_detail.prid = Product.ProductID) AND (Order_Master.date < '" + StartDate + "')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND srsdetail_1.Status = m.title WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date < '" + StartDate + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS b_SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date < '" + StartDate + "')), 0) AS b_damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date < '" + StartDate + "')), 0) AS b_batch_filling, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM purchasedetail AS d INNER JOIN purchasem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS qty FROM StockDistributionDetail AS d INNER JOIN StockDistribution AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS PurchaseQTY, ISNULL ((SELECT ISNULL(SUM(Stand_total_weight), 0) AS qty FROM labm AS labm_1 WHERE (pid = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS LabQTY, ISNULL ((SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS qty FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS m ON srpdetail_1.invid = m.invid WHERE (srpdetail_1.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS PurchaseRtn, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS m ON srsdetail_2.OrderID = m.OrderID AND srsdetail_2.Status = m.title WHERE (srsdetail_2.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srsdetail_2.Status IN ('TSRINV', 'SRINV'))) AS SalesStockReturn, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (d.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS BatchQty, ISNULL ((SELECT ISNULL(SUM(d.weight), 0) AS weight FROM labdetail AS d INNER JOIN labm AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = Product.ProductID) AND (m.Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS LabBatchQty, ISNULL ((SELECT ISNULL(SUM(Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID WHERE (Order_detail_1.prid = Product.ProductID) AND (Order_Master_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) + (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND srsdetail_1.Status = m.title WHERE (srsdetail_1.prid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV'))) AS SaleQTY, ISNULL ((SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid WHERE (d.pid = Product.ProductID) AND (m.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS damage, ISNULL ((SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM tbl_BatchFillingDetail AS d WHERE (ItemId = Product.ProductID) AND (Date BETWEEN '" + StartDate + "' AND '" + Enddate + "')), 0) AS batch_filling, (SELECT ISNULL(SUM(cp), 0) AS cp FROM (SELECT TOP (1) cp FROM purchasedetail AS purchasedetail_1 WHERE (pid = Product.ProductID) ORDER BY invid DESC) AS derive) AS cost, Product.UnitPrice FROM Product INNER JOIN Categories ON Product.CategoryID = Categories.CategoryID WHERE (Product.CategoryID IN (" + sel_opt + ")) " + sel_prd_search + ") AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryName,pname";

                return RedirectToAction("RawMaterialExcelView");
            }

        }
        public ActionResult RawMaterialExcelView()
        {
            List<RawMaterialReportQuery> lst = new List<RawMaterialReportQuery>();

            if (TempData["SqlQuery"] != null)
                lst = _context.Database.SqlQuery<RawMaterialReportQuery>(TempData["SqlQuery"].ToString()).ToList();

            return View(lst);
        }
        public ActionResult BatchSheetSummarySearch(string submit1)
        {
            string str = "";
            string quality = Request["qualityname"];
            string RegionId = Request["RegionId"];
            string category = Request["second_id"];
            string color = Request["third_id"];

            if (RegionId != "0")
            {
                str = str + " and RegionId=" + RegionId;
            }
            if (quality != "" && quality != "0" && quality != "-1" && quality != null)
                str = str + " and maincateg=" + quality;

            if (category != "" && category != "0" && category != "-1" && category != null)
                str = str + " and categid=" + category;

            if (color != "" && color != "0" && color != "-1" && color != null)
                str = str + " and pid=" + color;

            var costVisible = Session["SubRptBatchSheetSummeryCostVisible"]?.ToString();
            var visible = "";
            if (costVisible!=null && costVisible !="0") {
                visible = ",kgcoast";
            }
            var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT OrderId,ProductName,ColorName,BatchNo,totalweight " + visible + " ,Date, CASE WHEN Ready = 1 THEN 'Yes' WHEN Ready = 0 THEN 'No' END AS status from ProductIngrMaster where date between '" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + str).ToList();
            ReportDocument rd = new ReportDocument();

            rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptbatchsheetsummary.rpt"));

            var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
            var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");
            if (submit1 == "pdf")
            {
                rd.SetDataSource(list);
                rd.SetParameterValue("reporttitle", "Batch Sheet Summery");

                Response.Buffer = false;
                Response.ClearContent();
                Response.ClearHeaders();

                Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
                stream.Seek(0, SeekOrigin.Begin);
                return File(stream, "application/pdf", "rptSummary.pdf");


            }
            else
            {
                return View(list);
            }
        }
        //public ActionResult BatchSheetSummarySearch()
        //{
        //    string str = "";
        //    string quality = Request["qualityname"];
        //    string category = Request["second_id"];
        //    string color = Request["third_id"];

        //    if (quality != "" && quality != "0" && quality != "-1" && quality != null)
        //        str = str + " and maincateg=" + quality;

        //    if (category != "" && category != "0" && category != "-1" && category != null)
        //        str = str + " and categid=" + category;

        //    if (color != "" && color != "0" && color != "-1" && color != null)
        //        str = str + " and pid=" + color;

        //    var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT OrderId,ProductName,ColorName,BatchNo,totalweight,kgcoast,Date, CASE WHEN Ready = 1 THEN 'Yes' WHEN Ready = 0 THEN 'No' END AS status from ProductIngrMaster where date between '" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + str).ToList();
        //    ReportDocument rd = new ReportDocument();

        //    rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptbatchsheetsummary.rpt"));

        //    var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
        //    var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");
        //    rd.SetDataSource(list);
        //    rd.SetParameterValue("reporttitle", "Batch Sheet Summery");

        //    Response.Buffer = false;
        //    Response.ClearContent();
        //    Response.ClearHeaders();

        //    Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
        //    stream.Seek(0, SeekOrigin.Begin);
        //    return File(stream, "application/pdf", "rptSummary.pdf");
        //}
        public ActionResult LabSheetSummarySearch(string submit1)
        {
            string str = "";
            string quality = Request["qualityname"];
            //string RegionId = Request["RegionId"];
            string category = Request["second_id"];
            string color = Request["third_id"];

            //if (RegionId != "0")
            //{
            //    str = str + " and RegionId=" + RegionId;
            //}
            if (quality != "" && quality != "0" && quality != null)
                str = str + " and maincateg=" + quality;

            if (category != "" && category != "-1" && category != "0" && category != null)
                str = str + " and categid=" + category;

            if (color != "" && color != "-1" && color != "0" && color != null)
                str = str + " and pid=" + color;

            var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT  OrderId, ProductName, ColorName, BatchNo,kgcoast, Date, '' AS status,Stand_total_weight as totalweight from labm where date between '" + Request["s_date"] + "' and '" + Request["e_date"] + "'" + str).ToList();
            ReportDocument rd = new ReportDocument();

            rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptbatchsheetsummary.rpt"));

            var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
            var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");
            if (submit1 == "pdf")
            {
                rd.SetDataSource(list);
                rd.SetParameterValue("reporttitle", "Lab Sheet Summery");
                Response.Buffer = false;
                Response.ClearContent();
                Response.ClearHeaders();

                Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
                stream.Seek(0, SeekOrigin.Begin);
                return File(stream, "application/pdf", "rptSummary.pdf");



            }
            else
            {
                return View(list);
            }
        }

        //public ActionResult LabSheetSummarySearch()
        //{
        //    string str = "";
        //    string quality = Request["qualityname"];
        //    string category = Request["second_id"];
        //    string color = Request["third_id"];

        //    if (quality != "" && quality != "0" && quality != null)
        //        str = str + " and maincateg=" + quality;

        //    if (category != "" && category != "-1" && category != "0" && category != null)
        //        str = str + " and categid=" + category;

        //    if (color != "" && color != "-1" && color != "0" && color != null)
        //        str = str + " and pid=" + color;

        //    var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT  OrderId, ProductName, ColorName, BatchNo,kgcoast, Date, '' AS status,Stand_total_weight as totalweight from labm where date between '" + Request["s_date"] + "' and '" + Request["e_date"] + "'" + str).ToList();
        //    ReportDocument rd = new ReportDocument();

        //    rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptbatchsheetsummary.rpt"));

        //    var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
        //    var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");
        //    rd.SetDataSource(list);
        //    rd.SetParameterValue("reporttitle", "Lab Sheet Summery");
        //    Response.Buffer = false;
        //    Response.ClearContent();
        //    Response.ClearHeaders();

        //    Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
        //    stream.Seek(0, SeekOrigin.Begin);
        //    return File(stream, "application/pdf", "rptSummary.pdf");
        //}

        public ActionResult BatchBalance()
        {
            var list = _context.Database.SqlQuery<RawMaterialReportQuery>("select ProductName,production,transfer,production-transfer as balance from(select ProductName,isnull((Select sum(totalweight) from ProductIngrMaster where Ready=1 and ColorName=Product.ProductName),0) as production,isnull((Select SUm(weight) from tbl_BatchTransfer where pid=Product.ProductID),0) as transfer from Product where CategoryID in (select CategoryID from Categories where RawProductCheck=0) )as abc  where production-transfer > 0 order by ProductName asc").ToList();
            ReportDocument rd = new ReportDocument();

            rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptBatchBalance.rpt"));

            rd.SetDataSource(list);
            Response.Buffer = false;
            Response.ClearContent();
            Response.ClearHeaders();
            //rd.Close();

            Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
            stream.Seek(0, SeekOrigin.Begin);
            return File(stream, "application/pdf", "rptBatchBalance.pdf");
        }
        public ActionResult PurchaseeIndex()
        {
            var SaleInvVM = new SaleInvVM
            {
                pro_listsss = _context.Database.SqlQuery<Products>("select ProductName,ProductID,UnitPrice,ReorderLevel,vattax,CategoryID,[desc],Active from Product order by ProductName").ToList(),
                Cus_list = _context.Database.SqlQuery<Customers>("SELECT * from customers where discount =1").ToList(),
            };
            return View(SaleInvVM);

        }
        public ActionResult SaleIndex()
        {
            var SaleInvVM = new SaleInvVM
            {
                Branch_list= _context.Database.SqlQuery<Branch>("SELECT id,name from Branch ").ToList(),
                Region_list= _context.Database.SqlQuery<Region>("SELECT * from Region ").ToList(),
                quality = _context.Database.SqlQuery<MianCategories>("SELECT * from MianCategories order by MainCategoryName").ToList(),
                Cus_list = _context.Database.SqlQuery<Customers>("SELECT * from customers where discount =0").ToList(),
            };
            return View(SaleInvVM);
        }
        public ActionResult SaleSearch(int type, int optt, int cus_id, int reg_id,int branchid, string submit1)
        {
            //var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT CategoryID, CategoryName, ProductID, pname, vattax, cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, Qtybal, total as ext1 FROM(SELECT TOP (100) PERCENT CategoryID, (SELECT CategoryName FROM Categories WHERE (CategoryID = derivedtbl_2.CategoryID)) AS CategoryName, ProductID, ProductName AS pname, vattax, UnitPrice AS cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast AS Qtybal, (AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast) * UnitPrice AS total FROM (SELECT CategoryID, ProductID, ProductName, vattax, UnitPrice, vattax + PurchaseOpenIn + labOpenIn + SalesReturnOpenIn - purchasereturnOpenOut - LabStkOpenout - LabStkOpenout2 - labOPout - SalesOpenOut - DmgStkOpenOut AS AdjQTY, PurchasebetweenIn AS QTYin, labBetweenIn AS QTYLabin, SalesReturnBetweenIn AS QTYrtnIn, purchasereturnBetweenOut AS qtyoutprd, LabStkBetwout + LabStkBetwout2 AS qtyout, labBTout AS qtyoutlab, SalesBetwOut AS QTYSaleOut, DmgStkBetwOut AS qtyoutwast, PurchaseOpenIn, PurchasebetweenIn, labOpenIn, labBetweenIn, SalesReturnOpenIn, SalesReturnBetweenIn, purchasereturnOpenOut, purchasereturnBetweenOut, LabStkOpenout, LabStkBetwout, LabStkOpenout2, LabStkBetwout2, labOPout, labBTout, SalesOpenOut, SalesBetwOut, DmgStkOpenOut, DmgStkBetwOut FROM (SELECT CAST(CategoryID AS decimal) AS CategoryID, CAST(ProductID AS decimal) AS ProductID, CAST(ProductName AS varchar(500)) AS ProductName, CAST(vattax AS float) AS vattax, CAST(UnitPrice AS float) AS UnitPrice, (SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = PRD.ProductID) AND (purchasem.date < '" + Request["s_date"] + "')) AS PurchaseOpenIn, (SELECT ISNULL(SUM(purchasedetail_1.qty), 0) AS Expr1 FROM purchasedetail AS purchasedetail_1 INNER JOIN purchasem AS purchasem_1 ON purchasedetail_1.invid = purchasem_1.invid WHERE (purchasedetail_1.pid = PRD.ProductID) AND (purchasem_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS PurchasebetweenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm WHERE (pid = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOpenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm AS labm_1 WHERE (pid = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBetweenIn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.prid = PRD.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SalesReturnOpenIn, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.prid = PRD.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesReturnBetweenIn, (SELECT ISNULL(SUM(srpdetail.qty), 0) AS Expr1 FROM srpdetail INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE (srpdetail.pid = PRD.ProductID) AND (srpm.date < '" + Request["s_date"] + "')) AS purchasereturnOpenOut, (SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS Expr1 FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS srpm_1 ON srpdetail_1.invid = srpm_1.invid WHERE (srpdetail_1.pid = PRD.ProductID) AND (srpm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS purchasereturnBetweenOut, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail AS ProductIngrDetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout2, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 AS ProductIngrDetail1_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout2, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOPout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail AS labdetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBTout, (SELECT ISNULL(SUM(Product.prdunit * Order_detail.ctn + Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID INNER JOIN Product ON Order_detail.prid = Product.ProductID WHERE (Order_detail.prid = PRD.ProductID) AND (Order_Master.date < '" + Request["s_date"] + "')) AS SalesOpenOut, (SELECT ISNULL(SUM(Product_1.prdunit * Order_detail_1.ctn + Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID INNER JOIN Product AS Product_1 ON Order_detail_1.prid = Product_1.ProductID WHERE (Order_detail_1.prid = PRD.ProductID) AND (Order_Master_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesBetwOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = PRD.ProductID) AND (date < '" + Request["s_date"] + "')) AS DmgStkOpenOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail AS sampledetail_1 WHERE (pid = PRD.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DmgStkBetwOut FROM Product AS PRD WHERE (CategoryID IN (1, 38, 43)) AND (LEN(ProductName) > 3)) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryID, pname) AS derivedtbl_3 ORDER BY pname").ToList();
            int opt = Convert.ToInt32(Request["opt"]);
            int product_id = Convert.ToInt32(Request["third_id"]);
            int sale2 = 0;
            string concat = "";
            string concat1 = "";
            string Region = "";
            
            if (cus_id != 0)
            {
                concat = "and supid = " + cus_id + "";
                //concat1 = "and custid = " + cus_id + "";
            }
            if (cus_id != 0)
            {
                concat1 = "and custid = " + cus_id + "";
            }

            if (product_id != 0 && product_id != -1)
            {
                concat1 = concat1 + " and prid = " + product_id + "";
                //concat = concat + " and prid = " + product_id + "";
            }
            if (product_id != 0 && product_id != -1)
            {
                concat = concat + " and prid = " + product_id + "";
            }


            if (reg_id > 0) {
                Region = " and regionid = " + reg_id + " ";
            }
            
            if (branchid > 0) {
                Region = Region+ " and branchid = " + branchid + " ";
            }

            ReportDocument rd = new ReportDocument();
            if (type == 1 && optt == 1)
            { 
                list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT qtndetail_so.psrn as note,qtnm_so.date,qtnm_so.invid as ext3,qtnm_so.invid, qtnm_so.supid, qtnm_so.cargid, qtnm_so.cargocharges, qtnm_so.othercharges, qtnm_so.discount, qtnm_so.supinv, qtnm_so.supname, qtnm_so.paid, qtnm_so.datetime, qtnm_so.builty, qtnm_so.cntrsupplier, qtnm_so.status, qtndetail_So.pname, qtndetail_So.cp, qtndetail_So.qty, qtndetail_So.total, isnull(qtndetail_So.tax,0) as tax, isnull(qtndetail_So.total+ qtndetail_So.tax,0) as taxtotal FROM qtnm_so INNER JOIN qtndetail_So ON qtnm_so.invid = qtndetail_So.invid Inner join Product ON Product.ProductID = qtndetail_So.pid where qtnm_so.status='TSO' and qtndetail_So.Stauts='TSO' and qtnm_so.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  and qtndetail_So.Stauts='TSO' " + concat + " ").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTSO.rpt"));
                rd.SetDataSource(list);
                TempData["Tex"] = "Tex";
              //  sale2 = 1;

            }

            else if (type == 2 && optt == 1)
            {
                var str= "select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht, 0)wht,isnull(srsdetail.ntotal, 0) dsicval,totalafterdisc as total_after from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (((srsdetail.Status = 'TSINV') AND(srsm.title = 'TSINV') " + Region + ") OR((srsdetail.Status = 'WTSINV') AND(srsm.title = 'WTSINV')  " + Region + ")) and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' ) " + concat1+ " ";
                list_sale = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = srsdetail.prid)) AS maincataname from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (((srsdetail.Status = 'TSINV') AND (srsm.title = 'TSINV') " + Region + ") OR  ((srsdetail.Status = 'WTSINV') AND (srsm.title = 'WTSINV')  " + Region + " )) and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "') " + concat1 + "").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTSINV.rpt"));
                rd.SetDataSource(list_sale);
                TempData["Tex"] = "Tex";
            }
            else if (type == 3 && optt == 1)
            {
                list_sale = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = srsdetail.prid)) AS maincataname from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (Status='TSRINV') and (srsm.title='TSRINV' " + Region + ") and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' )" + concat1 + " ").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTSRINV.rpt"));
                rd.SetDataSource(list_sale);
                TempData["Tex"] = "Tex";
            }
            
            if (type == 1 && optt == 2)
            {
                list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT qtnm_so.date,qtnm_so.invid as ext3,qtnm_so.invid, qtnm_so.supid, qtnm_so.cargid, qtnm_so.cargocharges, qtnm_so.othercharges, qtnm_so.discount, qtnm_so.supinv, qtnm_so.supname, qtnm_so.paid, qtnm_so.note, qtnm_so.datetime, qtnm_so.builty, qtnm_so.cntrsupplier, qtnm_so.status, qtndetail_So.pname, qtndetail_So.cp, qtndetail_So.qty, qtndetail_So.total, isnull(qtndetail_So.tax,0) as tax, isnull(qtndetail_So.total+ qtndetail_So.tax,0) as taxtotal FROM qtnm_so INNER JOIN qtndetail_So ON qtnm_so.invid = qtndetail_So.invid Inner join Product ON Product.ProductID = qtndetail_So.pid where qtnm_so.status='SO' and qtndetail_So.Stauts='SO' and qtnm_so.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + concat + "").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptSaleOrder.rpt"));
                rd.SetDataSource(list);
                sale2 = 1;
            }
            else if (type == 2 && optt == 2)
            {
                list_sale = _context.Database.SqlQuery<SaleReportQuery>("select date,orderm.OrderID,custname,prname,packing,qty,sp,isnull(Orderdetail.wht,0)wht,isnull(dsicval,0)dsicval,total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = Orderdetail.prid)) AS maincataname from orderm inner join Orderdetail on orderm.OrderID = Orderdetail.OrderID where orderm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + concat1 + " "+ Region +" ").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptSINV.rpt"));
                rd.SetDataSource(list_sale);
            }
            else if (type == 3 && optt == 2)
            {
                list_sale = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = srsdetail.prid)) AS maincataname from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (Status='SRINV') and ( srsm.title='SRINV' ) " + Region + " and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' ) " + concat1 + "  ").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptSRINV.rpt"));
                rd.SetDataSource(list_sale);
            }

            var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
            var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");
            if (submit1 == "pdf")
            {
                rd.SetParameterValue("compname", "Test");
                rd.SetParameterValue("StartDate", StartDate);
                rd.SetParameterValue("Enddate", Enddate);
                Response.Buffer = false;
                Response.ClearContent();
                Response.ClearHeaders();

                Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
                stream.Seek(0, SeekOrigin.Begin);
                return File(stream, "application/pdf", "rptSale.pdf");
            }
            else
            {
                if (sale2 == 1)
                {
                    return View("SaleSearch2", list);
                }
                return View(list_sale);

            }
        }


        public ActionResult SaleCommIndex()
        {
            var SaleInvVM = new SaleInvVM
            {
                Branch_list = _context.Database.SqlQuery<Branch>("SELECT id,name from Branch ").ToList(),
                Region_list = _context.Database.SqlQuery<Region>("SELECT * from Region ").ToList(),
                Scheme_list = _context.Database.SqlQuery<Scheme>("SELECT * from Scheme order by date desc").ToList(),
                quality = _context.Database.SqlQuery<MianCategories>("SELECT * from MianCategories order by MainCategoryName").ToList(),
                Cus_list = _context.Database.SqlQuery<Customers>("SELECT * from customers where discount =0").ToList(),
            };
            return View(SaleInvVM);
        }
        public ActionResult SaleCommSearch(int type, int optt, int cus_id, int reg_id, int branchid, int scheme, string submit1)
        {
            //var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT CategoryID, CategoryName, ProductID, pname, vattax, cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, Qtybal, total as ext1 FROM(SELECT TOP (100) PERCENT CategoryID, (SELECT CategoryName FROM Categories WHERE (CategoryID = derivedtbl_2.CategoryID)) AS CategoryName, ProductID, ProductName AS pname, vattax, UnitPrice AS cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast AS Qtybal, (AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast) * UnitPrice AS total FROM (SELECT CategoryID, ProductID, ProductName, vattax, UnitPrice, vattax + PurchaseOpenIn + labOpenIn + SalesReturnOpenIn - purchasereturnOpenOut - LabStkOpenout - LabStkOpenout2 - labOPout - SalesOpenOut - DmgStkOpenOut AS AdjQTY, PurchasebetweenIn AS QTYin, labBetweenIn AS QTYLabin, SalesReturnBetweenIn AS QTYrtnIn, purchasereturnBetweenOut AS qtyoutprd, LabStkBetwout + LabStkBetwout2 AS qtyout, labBTout AS qtyoutlab, SalesBetwOut AS QTYSaleOut, DmgStkBetwOut AS qtyoutwast, PurchaseOpenIn, PurchasebetweenIn, labOpenIn, labBetweenIn, SalesReturnOpenIn, SalesReturnBetweenIn, purchasereturnOpenOut, purchasereturnBetweenOut, LabStkOpenout, LabStkBetwout, LabStkOpenout2, LabStkBetwout2, labOPout, labBTout, SalesOpenOut, SalesBetwOut, DmgStkOpenOut, DmgStkBetwOut FROM (SELECT CAST(CategoryID AS decimal) AS CategoryID, CAST(ProductID AS decimal) AS ProductID, CAST(ProductName AS varchar(500)) AS ProductName, CAST(vattax AS float) AS vattax, CAST(UnitPrice AS float) AS UnitPrice, (SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = PRD.ProductID) AND (purchasem.date < '" + Request["s_date"] + "')) AS PurchaseOpenIn, (SELECT ISNULL(SUM(purchasedetail_1.qty), 0) AS Expr1 FROM purchasedetail AS purchasedetail_1 INNER JOIN purchasem AS purchasem_1 ON purchasedetail_1.invid = purchasem_1.invid WHERE (purchasedetail_1.pid = PRD.ProductID) AND (purchasem_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS PurchasebetweenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm WHERE (pid = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOpenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm AS labm_1 WHERE (pid = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBetweenIn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.prid = PRD.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SalesReturnOpenIn, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.prid = PRD.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesReturnBetweenIn, (SELECT ISNULL(SUM(srpdetail.qty), 0) AS Expr1 FROM srpdetail INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE (srpdetail.pid = PRD.ProductID) AND (srpm.date < '" + Request["s_date"] + "')) AS purchasereturnOpenOut, (SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS Expr1 FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS srpm_1 ON srpdetail_1.invid = srpm_1.invid WHERE (srpdetail_1.pid = PRD.ProductID) AND (srpm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS purchasereturnBetweenOut, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail AS ProductIngrDetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout2, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 AS ProductIngrDetail1_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout2, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOPout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail AS labdetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBTout, (SELECT ISNULL(SUM(Product.prdunit * Order_detail.ctn + Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID INNER JOIN Product ON Order_detail.prid = Product.ProductID WHERE (Order_detail.prid = PRD.ProductID) AND (Order_Master.date < '" + Request["s_date"] + "')) AS SalesOpenOut, (SELECT ISNULL(SUM(Product_1.prdunit * Order_detail_1.ctn + Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID INNER JOIN Product AS Product_1 ON Order_detail_1.prid = Product_1.ProductID WHERE (Order_detail_1.prid = PRD.ProductID) AND (Order_Master_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesBetwOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = PRD.ProductID) AND (date < '" + Request["s_date"] + "')) AS DmgStkOpenOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail AS sampledetail_1 WHERE (pid = PRD.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DmgStkBetwOut FROM Product AS PRD WHERE (CategoryID IN (1, 38, 43)) AND (LEN(ProductName) > 3)) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryID, pname) AS derivedtbl_3 ORDER BY pname").ToList();
            int opt = Convert.ToInt32(Request["opt"]);
            int product_id = Convert.ToInt32(Request["third_id"]);
            int sale2 = 0;
            string concat = "";
            string concat1 = "";
            string Region = "";
            if (cus_id != 0)
            {
                concat = "and supid = " + cus_id + "";
            }
            if (cus_id != 0)
            {
                concat1 = "and custid = " + cus_id + "";
            }

            if (product_id != 0 && product_id != -1)
            {
                concat1 = concat1 + " and prid = " + product_id + "";
            }
            if (product_id != 0 && product_id != -1)
            {
                concat = concat + " and prid = " + product_id + "";
            }
            if (reg_id != 0)
            {
                Region = " and regionid = " + reg_id + " ";
            }
            if (branchid > 0)
            {
                Region = Region + " and branchid = " + branchid + " ";
            }

            ReportDocument rd = new ReportDocument();
            if (type == 2 && optt == 1)
            {
                var str = "select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht, 0)wht,isnull(srsdetail.ntotal, 0) dsicval,totalafterdisc as total_after from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (((srsdetail.Status = 'TSINV') AND(srsm.title = 'TSINV') " + Region + ") OR((srsdetail.Status = 'WTSINV') AND(srsm.title = 'WTSINV')  " + Region + ")) and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' ) " + concat1 + " ";
                list_sale = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = srsdetail.prid)) AS maincataname from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (((srsdetail.Status = 'TSINV') AND (srsm.title = 'TSINV') " + Region + ") OR  ((srsdetail.Status = 'WTSINV') AND (srsm.title = 'WTSINV')  " + Region + " )) and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "') " + concat1 + "").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTSINV.rpt"));
                rd.SetDataSource(list_sale);
                TempData["Tex"] = "Tex";
            }
            else if (type == 3 && optt == 1)
            {
                list_sale = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = srsdetail.prid)) AS maincataname from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (Status='TSRINV') and (srsm.title='TSRINV' " + Region + ") and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' )" + concat1 + " ").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTSRINV.rpt"));
                rd.SetDataSource(list_sale);
                TempData["Tex"] = "Tex";
            }
            else if (type == 4 && optt == 1)
            {
                list_sale =      _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,srsm.title as ext6,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = srsdetail.prid)) AS maincataname from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (Status='TSRINV') and (srsm.title='TSRINV' " + Region + ") and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' )" + concat1 + " ").ToList();
                var list_sale1 = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,srsm.title as ext6,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = srsdetail.prid)) AS maincataname from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (((srsdetail.Status = 'TSINV') AND (srsm.title = 'TSINV') " + Region + ") OR  ((srsdetail.Status = 'WTSINV') AND (srsm.title = 'WTSINV')  " + Region + " )) and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "') " + concat1 + "").ToList();
                list_sale = list_sale.Union(list_sale1).ToList();
                TempData["Tex"] = "Tex";
            }

            if (type == 2 && optt == 2)
            {
                list_sale = _context.Database.SqlQuery<SaleReportQuery>("select date,orderm.OrderID,custname,prname,packing,qty,sp,isnull(Orderdetail.wht,0)wht,isnull(dsicval,0)dsicval,total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = Orderdetail.prid)) AS maincataname from orderm inner join Orderdetail on orderm.OrderID = Orderdetail.OrderID where orderm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + concat1 + " " + Region + " ").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptSINV.rpt"));
                rd.SetDataSource(list_sale);
            }
            else if (type == 3 && optt == 2)
            {
                list_sale = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = srsdetail.prid)) AS maincataname from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (Status='SRINV') and ( srsm.title='SRINV' ) " + Region + " and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' ) " + concat1 + "  ").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptSRINV.rpt"));
                rd.SetDataSource(list_sale);
            }
            else if (type == 4 && optt == 2)
            {
                list_sale =      _context.Database.SqlQuery<SaleReportQuery>("select date,orderm.OrderID,custname,prname,packing,qty,sp,isnull(Orderdetail.wht,0)wht,isnull(dsicval,0)dsicval,total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = Orderdetail.prid)) AS maincataname from orderm inner join Orderdetail on orderm.OrderID = Orderdetail.OrderID where orderm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + concat1 + " " + Region + " ").ToList();
                var list_sale1 = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,srsm.title as ext6,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after,(SELECT DISTINCT  c.CategoryName FROM Categories AS c INNER JOIN Product AS p ON p.CategoryID = c.CategoryID WHERE (p.ProductID = srsdetail.prid)) AS maincataname from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where (Status='SRINV') and ( srsm.title='SRINV' ) " + Region + " and (srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' ) " + concat1 + "  ").ToList();
                list_sale = list_sale.Union(list_sale1).ToList();
            }
            if (scheme>0) {
                //var activescheme = _context.Database.SqlQuery<string>("select distinct Cat_Name from Scheme inner join SchemeDetail det on det.Scheme_Id=Scheme.id  where status='Active' AND GETDATE() BETWEEN startdate AND enddate  AND Scheme.id="+scheme).ToList();
                var activescheme = _context.Database.SqlQuery<string>("select distinct Cat_Name from Scheme inner join SchemeDetail det on det.Scheme_Id=Scheme.id  where status='Active' AND Scheme.id="+scheme).ToList();
                list_sale = list_sale.Where(sale => activescheme.Contains(sale.maincataname) ).ToList();
            }

            var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
            var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");
            if (submit1 == "pdf")
            {
                rd.SetParameterValue("compname", "Test");
                rd.SetParameterValue("StartDate", StartDate);
                rd.SetParameterValue("Enddate", Enddate);
                Response.Buffer = false;
                Response.ClearContent();
                Response.ClearHeaders();

                Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
                stream.Seek(0, SeekOrigin.Begin);
                return File(stream, "application/pdf", "rptSale.pdf");
            }
            else
            {
                if (sale2 == 1)
                {
                    return View("SaleSearch2", list);
                }
                return View(list_sale);

            }
        }

        public ActionResult PurchaseSearch(int type, int optt, string submit1)
        {
            //var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT CategoryID, CategoryName, ProductID, pname, vattax, cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, Qtybal, total as ext1 FROM(SELECT TOP (100) PERCENT CategoryID, (SELECT CategoryName FROM Categories WHERE (CategoryID = derivedtbl_2.CategoryID)) AS CategoryName, ProductID, ProductName AS pname, vattax, UnitPrice AS cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast AS Qtybal, (AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast) * UnitPrice AS total FROM (SELECT CategoryID, ProductID, ProductName, vattax, UnitPrice, vattax + PurchaseOpenIn + labOpenIn + SalesReturnOpenIn - purchasereturnOpenOut - LabStkOpenout - LabStkOpenout2 - labOPout - SalesOpenOut - DmgStkOpenOut AS AdjQTY, PurchasebetweenIn AS QTYin, labBetweenIn AS QTYLabin, SalesReturnBetweenIn AS QTYrtnIn, purchasereturnBetweenOut AS qtyoutprd, LabStkBetwout + LabStkBetwout2 AS qtyout, labBTout AS qtyoutlab, SalesBetwOut AS QTYSaleOut, DmgStkBetwOut AS qtyoutwast, PurchaseOpenIn, PurchasebetweenIn, labOpenIn, labBetweenIn, SalesReturnOpenIn, SalesReturnBetweenIn, purchasereturnOpenOut, purchasereturnBetweenOut, LabStkOpenout, LabStkBetwout, LabStkOpenout2, LabStkBetwout2, labOPout, labBTout, SalesOpenOut, SalesBetwOut, DmgStkOpenOut, DmgStkBetwOut FROM (SELECT CAST(CategoryID AS decimal) AS CategoryID, CAST(ProductID AS decimal) AS ProductID, CAST(ProductName AS varchar(500)) AS ProductName, CAST(vattax AS float) AS vattax, CAST(UnitPrice AS float) AS UnitPrice, (SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = PRD.ProductID) AND (purchasem.date < '" + Request["s_date"] + "')) AS PurchaseOpenIn, (SELECT ISNULL(SUM(purchasedetail_1.qty), 0) AS Expr1 FROM purchasedetail AS purchasedetail_1 INNER JOIN purchasem AS purchasem_1 ON purchasedetail_1.invid = purchasem_1.invid WHERE (purchasedetail_1.pid = PRD.ProductID) AND (purchasem_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS PurchasebetweenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm WHERE (pid = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOpenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm AS labm_1 WHERE (pid = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBetweenIn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.prid = PRD.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SalesReturnOpenIn, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.prid = PRD.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesReturnBetweenIn, (SELECT ISNULL(SUM(srpdetail.qty), 0) AS Expr1 FROM srpdetail INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE (srpdetail.pid = PRD.ProductID) AND (srpm.date < '" + Request["s_date"] + "')) AS purchasereturnOpenOut, (SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS Expr1 FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS srpm_1 ON srpdetail_1.invid = srpm_1.invid WHERE (srpdetail_1.pid = PRD.ProductID) AND (srpm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS purchasereturnBetweenOut, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail AS ProductIngrDetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout2, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 AS ProductIngrDetail1_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout2, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOPout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail AS labdetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBTout, (SELECT ISNULL(SUM(Product.prdunit * Order_detail.ctn + Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID INNER JOIN Product ON Order_detail.prid = Product.ProductID WHERE (Order_detail.prid = PRD.ProductID) AND (Order_Master.date < '" + Request["s_date"] + "')) AS SalesOpenOut, (SELECT ISNULL(SUM(Product_1.prdunit * Order_detail_1.ctn + Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID INNER JOIN Product AS Product_1 ON Order_detail_1.prid = Product_1.ProductID WHERE (Order_detail_1.prid = PRD.ProductID) AND (Order_Master_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesBetwOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = PRD.ProductID) AND (date < '" + Request["s_date"] + "')) AS DmgStkOpenOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail AS sampledetail_1 WHERE (pid = PRD.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DmgStkBetwOut FROM Product AS PRD WHERE (CategoryID IN (1, 38, 43)) AND (LEN(ProductName) > 3)) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryID, pname) AS derivedtbl_3 ORDER BY pname").ToList();
            int opt = Convert.ToInt32(Request["opt"]);
            string ssupid = Request["sup"];
            string ppid = Request["prd"];
            string pInvNo = Request["InvNo"];
            string str = "";

            ReportDocument rd = new ReportDocument();
            if (type == 1 && optt == 1)
            {
                if (ssupid != "" && ssupid != "0")
                    str = str + " and qtnm.supid=" + ssupid;
                if (ppid != "" && ppid != "0")
                    str = str + " and qtndetail.pid=" + ppid;
                if (pInvNo != "" && pInvNo != null && pInvNo != "0")
                    str = str + " and qtnm.invid=" + pInvNo;

                list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT qtnm.date,qtnm.invid as ext3,qtnm.invid, qtnm.supid, qtnm.cargid, qtnm.cargocharges, qtnm.othercharges, qtnm.discount, qtnm.supinv, qtnm.supname, qtnm.paid, qtnm.note, qtnm.datetime, qtnm.builty, qtnm.cntrsupplier, qtnm.status, qtndetail.pname, qtndetail.cp, qtndetail.qty, qtndetail.total, isnull(qtndetail.tax,0) as tax, isnull(qtndetail.total+ qtndetail.tax,0) as taxtotal FROM qtnm INNER JOIN qtndetail ON qtnm.invid = qtndetail.invid Inner join Product ON Product.ProductID = qtndetail.pid where qtnm.status='TPO' and qtndetail.Stauts = 'TPO' and   qtnm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1)").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTPo.rpt"));

                TempData["Tex"] = "Tex";

                ///rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTPO.rpt"));
            }
            else if (type == 2 && optt == 1)
            {

                if (ssupid != "" && ssupid != "0")
                    str = str + " and purchasem.supid=" + ssupid;
                if (ppid != "" && ppid != "0")
                    str = str + " and purchasedetail.pid=" + ppid;
                if (pInvNo != "" && pInvNo != null && pInvNo != "0")
                    str = str + " and purchasem.invid=" + pInvNo;
                list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT purchasem.invid as ext3,purchasem.invid,purchasem.date, purchasem.supid, purchasem.cargid, purchasem.cargocharges, purchasem.othercharges, purchasem.discount, purchasem.supinv, purchasem.supname, purchasem.paid, purchasem.note, purchasem.datetime, purchasem.builty, purchasem.cntrsupplier, purchasem.status, purchasedetail.pname, purchasedetail.cp, purchasedetail.qty, purchasedetail.total, isnull(purchasedetail.tax,0) as tax, isnull(purchasedetail.total+ purchasedetail.tax,0) as taxtotal FROM purchasem INNER JOIN purchasedetail ON purchasem.invid = purchasedetail.invid Inner join Product ON Product.ProductID = purchasedetail.pid where purchasem.status='TPINV' and purchasedetail.Stauts='TPINV'  and purchasem.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1)").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptPurchasee.rpt"));
                TempData["Tex"] = "Tex";
            }
            else if (type == 3 && optt == 1)
            {

                if (ssupid != "" && ssupid != "0")
                    str = str + " and srpm.supid=" + ssupid;
                if (ppid != "" && ppid != "0")
                    str = str + " and srpdetail.pid=" + ppid;
                if (pInvNo != "" && pInvNo != null && pInvNo != "0")
                    str = str + " and srpm.invid=" + pInvNo;

                list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT srpm.date,srpm.invid as ext3,srpm.invid, srpm.supid, srpm.cargid, srpm.cargocharges, srpm.othercharges, srpm.discount, srpm.supinv, srpm.supname, srpm.paid, srpm.note, srpm.datetime, srpm.builty, srpm.cntrsupplier, srpm.status, srpdetail.pname, srpdetail.cp, srpdetail.qty, srpdetail.total, isnull(srpdetail.tax,0) as tax, isnull(srpdetail.total+ srpdetail.tax,0) as taxtotal FROM srpm INNER JOIN srpdetail ON srpm.invid = srpdetail.invid Inner join Product ON Product.ProductID = srpdetail.pid where srpm.status='TPRINV' and srpdetail.Stauts='TPRINV' and srpm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1)").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTPRINV.rpt"));
                TempData["Tex"] = "Tex";
            }
            if (type == 1 && optt == 2)
            {

                if (ssupid != "" && ssupid != "0")
                    str = str + " and qtnm.supid=" + ssupid;
                if (ppid != "" && ppid != "0")
                    str = str + " and qtndetail.pid=" + ppid;
                if (pInvNo != "" && pInvNo != null && pInvNo != "0")
                    str = str + " and qtnm.invid=" + pInvNo;

                list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT  qtnm.date,qtnm.invid as ext3,qtnm.invid, qtnm.supid, qtnm.cargid, qtnm.cargocharges, qtnm.othercharges, qtnm.discount, qtnm.supinv, qtnm.supname, qtnm.paid, qtnm.note, qtnm.datetime, qtnm.builty, qtnm.cntrsupplier, qtnm.status, qtndetail.pname, qtndetail.cp, qtndetail.qty, qtndetail.total, isnull(qtndetail.tax,0) as tax, isnull(qtndetail.total+ qtndetail.tax,0) as taxtotal FROM qtnm INNER JOIN qtndetail ON qtnm.invid = qtndetail.invid Inner join Product ON Product.ProductID = qtndetail.pid where qtnm.status='PO' and qtndetail.Stauts='PO' and  qtnm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1)").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptPo.rpt"));
            }
            else if (type == 2 && optt == 2)
            {
                if (ssupid != "" && ssupid != "0")
                    str = str + " and purchasem.supid=" + ssupid;
                if (ppid != "" && ppid != "0")
                    str = str + " and purchasedetail.pid=" + ppid;
                if (pInvNo != "" && pInvNo != null && pInvNo != "0")
                    str = str + " and purchasem.invid=" + pInvNo;

                list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT purchasem.invid as ext3,purchasem.invid,purchasem.date, purchasem.supid, purchasem.cargid, purchasem.cargocharges, purchasem.othercharges, purchasem.discount, purchasem.supinv, purchasem.supname, purchasem.paid, purchasem.note, purchasem.datetime, purchasem.builty, purchasem.cntrsupplier, purchasem.status, purchasedetail.pname, purchasedetail.cp, purchasedetail.qty, purchasedetail.total, isnull(purchasedetail.tax,0) as tax, isnull(purchasedetail.total+ purchasedetail.tax,0) as taxtotal  FROM purchasem INNER JOIN purchasedetail ON purchasem.invid = purchasedetail.invid Inner join Product ON Product.ProductID = purchasedetail.pid where purchasem.status='PINV' and purchasedetail.Stauts='PINV'  and purchasem.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1) order by invid asc").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptPINV.rpt"));
            }
            else if (type == 3 && optt == 2)
            {
                if (ssupid != "" && ssupid != "0")
                    str = str + " and srpm.supid=" + ssupid;
                if (ppid != "" && ppid != "0")
                    str = str + " and srpdetail.pid=" + ppid;
                if (pInvNo != "" && pInvNo != null && pInvNo != "0")
                    str = str + " and srpm.invid=" + pInvNo;


                list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT srpm.invid as ext3,srpm.invid, srpm.date,srpm.supid, srpm.cargid, srpm.cargocharges, srpm.othercharges, srpm.discount, srpm.supinv, srpm.supname, srpm.paid, srpm.note, srpm.datetime, srpm.builty, srpm.cntrsupplier, srpm.status, srpdetail.pname, srpdetail.cp, srpdetail.qty, srpdetail.total, isnull(srpdetail.tax,0) as tax, isnull(srpdetail.total+ srpdetail.tax,0) as taxtotal FROM srpm INNER JOIN srpdetail ON srpm.invid = srpdetail.invid Inner join Product ON Product.ProductID = srpdetail.pid where srpm.status='PRINV' and srpdetail.Stauts='PRINV'  and srpm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  ").ToList();
                rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptPRINV.rpt"));
            }

            var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
            var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");
            if (submit1 == "pdf")
            {
                rd.SetDataSource(list);
                rd.SetParameterValue("compname", "Test");
                rd.SetParameterValue("StartDate", StartDate);
                rd.SetParameterValue("Enddate", Enddate);
                Response.Buffer = false;
                Response.ClearContent();
                Response.ClearHeaders();

                Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
                stream.Seek(0, SeekOrigin.Begin);
                return File(stream, "application/pdf", "rptPurchasee.pdf");
            }
            else
            {
                return View(list);
            }
        }
        //public ActionResult PurchaseSearch(int type, int optt)
        //{
        //    //var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT CategoryID, CategoryName, ProductID, pname, vattax, cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, Qtybal, total as ext1 FROM(SELECT TOP (100) PERCENT CategoryID, (SELECT CategoryName FROM Categories WHERE (CategoryID = derivedtbl_2.CategoryID)) AS CategoryName, ProductID, ProductName AS pname, vattax, UnitPrice AS cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast AS Qtybal, (AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast) * UnitPrice AS total FROM (SELECT CategoryID, ProductID, ProductName, vattax, UnitPrice, vattax + PurchaseOpenIn + labOpenIn + SalesReturnOpenIn - purchasereturnOpenOut - LabStkOpenout - LabStkOpenout2 - labOPout - SalesOpenOut - DmgStkOpenOut AS AdjQTY, PurchasebetweenIn AS QTYin, labBetweenIn AS QTYLabin, SalesReturnBetweenIn AS QTYrtnIn, purchasereturnBetweenOut AS qtyoutprd, LabStkBetwout + LabStkBetwout2 AS qtyout, labBTout AS qtyoutlab, SalesBetwOut AS QTYSaleOut, DmgStkBetwOut AS qtyoutwast, PurchaseOpenIn, PurchasebetweenIn, labOpenIn, labBetweenIn, SalesReturnOpenIn, SalesReturnBetweenIn, purchasereturnOpenOut, purchasereturnBetweenOut, LabStkOpenout, LabStkBetwout, LabStkOpenout2, LabStkBetwout2, labOPout, labBTout, SalesOpenOut, SalesBetwOut, DmgStkOpenOut, DmgStkBetwOut FROM (SELECT CAST(CategoryID AS decimal) AS CategoryID, CAST(ProductID AS decimal) AS ProductID, CAST(ProductName AS varchar(500)) AS ProductName, CAST(vattax AS float) AS vattax, CAST(UnitPrice AS float) AS UnitPrice, (SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = PRD.ProductID) AND (purchasem.date < '" + Request["s_date"] + "')) AS PurchaseOpenIn, (SELECT ISNULL(SUM(purchasedetail_1.qty), 0) AS Expr1 FROM purchasedetail AS purchasedetail_1 INNER JOIN purchasem AS purchasem_1 ON purchasedetail_1.invid = purchasem_1.invid WHERE (purchasedetail_1.pid = PRD.ProductID) AND (purchasem_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS PurchasebetweenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm WHERE (pid = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOpenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm AS labm_1 WHERE (pid = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBetweenIn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.prid = PRD.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SalesReturnOpenIn, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.prid = PRD.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesReturnBetweenIn, (SELECT ISNULL(SUM(srpdetail.qty), 0) AS Expr1 FROM srpdetail INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE (srpdetail.pid = PRD.ProductID) AND (srpm.date < '" + Request["s_date"] + "')) AS purchasereturnOpenOut, (SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS Expr1 FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS srpm_1 ON srpdetail_1.invid = srpm_1.invid WHERE (srpdetail_1.pid = PRD.ProductID) AND (srpm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS purchasereturnBetweenOut, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail AS ProductIngrDetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout2, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 AS ProductIngrDetail1_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout2, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOPout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail AS labdetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBTout, (SELECT ISNULL(SUM(Product.prdunit * Order_detail.ctn + Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID INNER JOIN Product ON Order_detail.prid = Product.ProductID WHERE (Order_detail.prid = PRD.ProductID) AND (Order_Master.date < '" + Request["s_date"] + "')) AS SalesOpenOut, (SELECT ISNULL(SUM(Product_1.prdunit * Order_detail_1.ctn + Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID INNER JOIN Product AS Product_1 ON Order_detail_1.prid = Product_1.ProductID WHERE (Order_detail_1.prid = PRD.ProductID) AND (Order_Master_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesBetwOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = PRD.ProductID) AND (date < '" + Request["s_date"] + "')) AS DmgStkOpenOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail AS sampledetail_1 WHERE (pid = PRD.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DmgStkBetwOut FROM Product AS PRD WHERE (CategoryID IN (1, 38, 43)) AND (LEN(ProductName) > 3)) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryID, pname) AS derivedtbl_3 ORDER BY pname").ToList();
        //    int opt = Convert.ToInt32(Request["opt"]);
        //    string ssupid = Request["sup"];
        //    string ppid = Request["prd"];
        //    string pInvNo = Request["InvNo"];
        //    string str = "";

        //    ReportDocument rd = new ReportDocument();
        //    if (type == 1 && optt == 1)
        //    {
        //        if (ssupid != "" && ssupid != "0")
        //            str = str + " and qtnm.supid=" + ssupid;
        //        if (ppid != "" && ppid != "0")
        //            str = str + " and qtndetail.pid=" + ppid;
        //        if (pInvNo != "" && pInvNo != null && pInvNo != "0")
        //            str = str + " and qtnm.invid=" + pInvNo;

        //        list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT qtnm.date,qtnm.invid as ext3,qtnm.invid, qtnm.supid, qtnm.cargid, qtnm.cargocharges, qtnm.othercharges, qtnm.discount, qtnm.supinv, qtnm.supname, qtnm.paid, qtnm.note, qtnm.datetime, qtnm.builty, qtnm.cntrsupplier, qtnm.status, qtndetail.pname, qtndetail.cp, qtndetail.qty, qtndetail.total, isnull(qtndetail.tax,0) as tax, isnull(qtndetail.total+ qtndetail.tax,0) as taxtotal FROM qtnm INNER JOIN qtndetail ON qtnm.invid = qtndetail.invid Inner join Product ON Product.ProductID = qtndetail.pid where qtnm.status='TPO' and qtndetail.Stauts = 'TPO' and   qtnm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1)").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTPO.rpt"));
        //    }
        //    else if (type == 2 && optt == 1)
        //    {
        //        if (ssupid != "" && ssupid != "0")
        //            str = str + " and purchasem.supid=" + ssupid;
        //        if (ppid != "" && ppid != "0")
        //            str = str + " and purchasedetail.pid=" + ppid;
        //        if (pInvNo != "" && pInvNo != null && pInvNo != "0")
        //            str = str + " and purchasem.invid=" + pInvNo;
        //        list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT purchasem.invid as ext3,purchasem.invid,purchasem.date, purchasem.supid, purchasem.cargid, purchasem.cargocharges, purchasem.othercharges, purchasem.discount, purchasem.supinv, purchasem.supname, purchasem.paid, purchasem.note, purchasem.datetime, purchasem.builty, purchasem.cntrsupplier, purchasem.status, purchasedetail.pname, purchasedetail.cp, purchasedetail.qty, purchasedetail.total, isnull(purchasedetail.tax,0) as tax, isnull(purchasedetail.total+ purchasedetail.tax,0) as taxtotal FROM purchasem INNER JOIN purchasedetail ON purchasem.invid = purchasedetail.invid Inner join Product ON Product.ProductID = purchasedetail.pid where purchasem.status='TPINV' and purchasedetail.Stauts='TPINV'  and purchasem.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1)").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptPurchasee.rpt"));
        //    }
        //    else if (type == 3 && optt == 1)
        //    {
        //        if (ssupid != "" && ssupid != "0")
        //            str = str + " and srpm.supid=" + ssupid;
        //        if (ppid != "" && ppid != "0")
        //            str = str + " and srpdetail.pid=" + ppid;
        //        if (pInvNo != "" && pInvNo != null && pInvNo != "0")
        //            str = str + " and srpm.invid=" + pInvNo;

        //        list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT srpm.date,srpm.invid as ext3,srpm.invid, srpm.supid, srpm.cargid, srpm.cargocharges, srpm.othercharges, srpm.discount, srpm.supinv, srpm.supname, srpm.paid, srpm.note, srpm.datetime, srpm.builty, srpm.cntrsupplier, srpm.status, srpdetail.pname, srpdetail.cp, srpdetail.qty, srpdetail.total, isnull(srpdetail.tax,0) as tax, isnull(srpdetail.total+ srpdetail.tax,0) as taxtotal FROM srpm INNER JOIN srpdetail ON srpm.invid = srpdetail.invid Inner join Product ON Product.ProductID = srpdetail.pid where srpm.status='TPRINV' and srpdetail.Stauts='TPRINV' and srpm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1)").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTPRINV.rpt"));
        //    }
        //    if (type == 1 && optt == 2)
        //    {
        //        if (ssupid != "" && ssupid != "0")
        //            str = str + " and qtnm.supid=" + ssupid;
        //        if (ppid != "" && ppid != "0")
        //            str = str + " and qtndetail.pid=" + ppid;
        //        if (pInvNo != "" && pInvNo != null && pInvNo != "0")
        //            str = str + " and qtnm.invid=" + pInvNo;

        //        list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT  qtnm.date,qtnm.invid as ext3,qtnm.invid, qtnm.supid, qtnm.cargid, qtnm.cargocharges, qtnm.othercharges, qtnm.discount, qtnm.supinv, qtnm.supname, qtnm.paid, qtnm.note, qtnm.datetime, qtnm.builty, qtnm.cntrsupplier, qtnm.status, qtndetail.pname, qtndetail.cp, qtndetail.qty, qtndetail.total, isnull(qtndetail.tax,0) as tax, isnull(qtndetail.total+ qtndetail.tax,0) as taxtotal FROM qtnm INNER JOIN qtndetail ON qtnm.invid = qtndetail.invid Inner join Product ON Product.ProductID = qtndetail.pid where qtnm.status='PO' and qtndetail.Stauts='PO' and  qtnm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1)").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptPo.rpt"));
        //    }
        //    else if (type == 2 && optt == 2)
        //    {
        //        if (ssupid != "" && ssupid != "0")
        //            str = str + " and purchasem.supid=" + ssupid;
        //        if (ppid != "" && ppid != "0")
        //            str = str + " and purchasedetail.pid=" + ppid;
        //        if (pInvNo != "" && pInvNo != null && pInvNo != "0")
        //            str = str + " and purchasem.invid=" + pInvNo;

        //        list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT purchasem.invid as ext3,purchasem.invid,purchasem.date, purchasem.supid, purchasem.cargid, purchasem.cargocharges, purchasem.othercharges, purchasem.discount, purchasem.supinv, purchasem.supname, purchasem.paid, purchasem.note, purchasem.datetime, purchasem.builty, purchasem.cntrsupplier, purchasem.status, purchasedetail.pname, purchasedetail.cp, purchasedetail.qty, purchasedetail.total, isnull(purchasedetail.tax,0) as tax, isnull(purchasedetail.total+ purchasedetail.tax,0) as taxtotal  FROM purchasem INNER JOIN purchasedetail ON purchasem.invid = purchasedetail.invid Inner join Product ON Product.ProductID = purchasedetail.pid where purchasem.status='PINV' and purchasedetail.Stauts='PINV'  and purchasem.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  and CategoryID in (select CategoryID from Categories where RawProductCheck=1) order by invid asc").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptPINV.rpt"));
        //    }
        //    else if (type == 3 && optt == 2)
        //    {
        //        if (ssupid != "" && ssupid != "0")
        //            str = str + " and srpm.supid=" + ssupid;
        //        if (ppid != "" && ppid != "0")
        //            str = str + " and srpdetail.pid=" + ppid;
        //        if (pInvNo != "" && pInvNo != null && pInvNo != "0")
        //            str = str + " and srpm.invid=" + pInvNo;


        //        list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT srpm.invid as ext3,srpm.invid, srpm.date,srpm.supid, srpm.cargid, srpm.cargocharges, srpm.othercharges, srpm.discount, srpm.supinv, srpm.supname, srpm.paid, srpm.note, srpm.datetime, srpm.builty, srpm.cntrsupplier, srpm.status, srpdetail.pname, srpdetail.cp, srpdetail.qty, srpdetail.total, isnull(srpdetail.tax,0) as tax, isnull(srpdetail.total+ srpdetail.tax,0) as taxtotal FROM srpm INNER JOIN srpdetail ON srpm.invid = srpdetail.invid Inner join Product ON Product.ProductID = srpdetail.pid where srpm.status='PRINV' and srpdetail.Stauts='PRINV'  and srpm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  " + str + "  ").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptPRINV.rpt"));
        //    }

        //    var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
        //    var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");

        //    rd.SetDataSource(list);
        //    rd.SetParameterValue("compname", "Test");
        //    rd.SetParameterValue("StartDate", StartDate);
        //    rd.SetParameterValue("Enddate", Enddate);
        //    Response.Buffer = false;
        //    Response.ClearContent();
        //    Response.ClearHeaders();

        //    Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
        //    stream.Seek(0, SeekOrigin.Begin);
        //    return File(stream, "application/pdf", "rptPurchasee.pdf");
        //}
     
        //public ActionResult SaleSearch(int type, int optt, int cus_id)
        //{
        //    //var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT CategoryID, CategoryName, ProductID, pname, vattax, cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, Qtybal, total as ext1 FROM(SELECT TOP (100) PERCENT CategoryID, (SELECT CategoryName FROM Categories WHERE (CategoryID = derivedtbl_2.CategoryID)) AS CategoryName, ProductID, ProductName AS pname, vattax, UnitPrice AS cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast AS Qtybal, (AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast) * UnitPrice AS total FROM (SELECT CategoryID, ProductID, ProductName, vattax, UnitPrice, vattax + PurchaseOpenIn + labOpenIn + SalesReturnOpenIn - purchasereturnOpenOut - LabStkOpenout - LabStkOpenout2 - labOPout - SalesOpenOut - DmgStkOpenOut AS AdjQTY, PurchasebetweenIn AS QTYin, labBetweenIn AS QTYLabin, SalesReturnBetweenIn AS QTYrtnIn, purchasereturnBetweenOut AS qtyoutprd, LabStkBetwout + LabStkBetwout2 AS qtyout, labBTout AS qtyoutlab, SalesBetwOut AS QTYSaleOut, DmgStkBetwOut AS qtyoutwast, PurchaseOpenIn, PurchasebetweenIn, labOpenIn, labBetweenIn, SalesReturnOpenIn, SalesReturnBetweenIn, purchasereturnOpenOut, purchasereturnBetweenOut, LabStkOpenout, LabStkBetwout, LabStkOpenout2, LabStkBetwout2, labOPout, labBTout, SalesOpenOut, SalesBetwOut, DmgStkOpenOut, DmgStkBetwOut FROM (SELECT CAST(CategoryID AS decimal) AS CategoryID, CAST(ProductID AS decimal) AS ProductID, CAST(ProductName AS varchar(500)) AS ProductName, CAST(vattax AS float) AS vattax, CAST(UnitPrice AS float) AS UnitPrice, (SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = PRD.ProductID) AND (purchasem.date < '" + Request["s_date"] + "')) AS PurchaseOpenIn, (SELECT ISNULL(SUM(purchasedetail_1.qty), 0) AS Expr1 FROM purchasedetail AS purchasedetail_1 INNER JOIN purchasem AS purchasem_1 ON purchasedetail_1.invid = purchasem_1.invid WHERE (purchasedetail_1.pid = PRD.ProductID) AND (purchasem_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS PurchasebetweenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm WHERE (pid = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOpenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm AS labm_1 WHERE (pid = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBetweenIn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.prid = PRD.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SalesReturnOpenIn, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.prid = PRD.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesReturnBetweenIn, (SELECT ISNULL(SUM(srpdetail.qty), 0) AS Expr1 FROM srpdetail INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE (srpdetail.pid = PRD.ProductID) AND (srpm.date < '" + Request["s_date"] + "')) AS purchasereturnOpenOut, (SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS Expr1 FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS srpm_1 ON srpdetail_1.invid = srpm_1.invid WHERE (srpdetail_1.pid = PRD.ProductID) AND (srpm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS purchasereturnBetweenOut, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail AS ProductIngrDetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout2, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 AS ProductIngrDetail1_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout2, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOPout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail AS labdetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBTout, (SELECT ISNULL(SUM(Product.prdunit * Order_detail.ctn + Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID INNER JOIN Product ON Order_detail.prid = Product.ProductID WHERE (Order_detail.prid = PRD.ProductID) AND (Order_Master.date < '" + Request["s_date"] + "')) AS SalesOpenOut, (SELECT ISNULL(SUM(Product_1.prdunit * Order_detail_1.ctn + Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID INNER JOIN Product AS Product_1 ON Order_detail_1.prid = Product_1.ProductID WHERE (Order_detail_1.prid = PRD.ProductID) AND (Order_Master_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesBetwOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = PRD.ProductID) AND (date < '" + Request["s_date"] + "')) AS DmgStkOpenOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail AS sampledetail_1 WHERE (pid = PRD.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DmgStkBetwOut FROM Product AS PRD WHERE (CategoryID IN (1, 38, 43)) AND (LEN(ProductName) > 3)) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryID, pname) AS derivedtbl_3 ORDER BY pname").ToList();
        //    int opt = Convert.ToInt32(Request["opt"]);

        //    string concat = "";
        //    string concat1 = "";
        //    if (cus_id != 0)
        //    {
        //        concat = "and supid = " + cus_id + "";
        //    }
        //    if (cus_id != 0)
        //    {
        //        concat1 = "and custid = " + cus_id + "";
        //    }


        //    ReportDocument rd = new ReportDocument();
        //    if (type == 1 && optt == 1)
        //    {
        //        list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT qtndetail_so.psrn as note,qtnm_so.date,qtnm_so.invid as ext3,qtnm_so.invid, qtnm_so.supid, qtnm_so.cargid, qtnm_so.cargocharges, qtnm_so.othercharges, qtnm_so.discount, qtnm_so.supinv, qtnm_so.supname, qtnm_so.paid, qtnm_so.datetime, qtnm_so.builty, qtnm_so.cntrsupplier, qtnm_so.status, qtndetail_So.pname, qtndetail_So.cp, qtndetail_So.qty, qtndetail_So.total, isnull(qtndetail_So.tax,0) as tax, isnull(qtndetail_So.total+ qtndetail_So.tax,0) as taxtotal FROM qtnm_so INNER JOIN qtndetail_So ON qtnm_so.invid = qtndetail_So.invid Inner join Product ON Product.ProductID = qtndetail_So.pid where qtnm_so.status='TSO' and qtndetail_So.Stauts='TSO' and qtnm_so.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "'  and qtndetail_So.Stauts='TSO' " + concat + " ").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTSO.rpt"));
        //        rd.SetDataSource(list);
        //    }
        //    else if (type == 2 && optt == 1)
        //    {
        //        list_sale = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where Status='TSINV' and srsm.title='TSINV' and srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + concat1 + "").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTSINV.rpt"));
        //        rd.SetDataSource(list_sale);
        //    }
        //    else if (type == 3 && optt == 1)
        //    {
        //        list_sale = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where Status='TSRINV' and srsm.title='TSRINV' and srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + concat1 + "").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptTSRINV.rpt"));
        //        rd.SetDataSource(list_sale);
        //    }
        //    if (type == 1 && optt == 2)
        //    {
        //        list = _context.Database.SqlQuery<PurchaseReportQuery>("SELECT qtnm_so.date,qtnm_so.invid as ext3,qtnm_so.invid, qtnm_so.supid, qtnm_so.cargid, qtnm_so.cargocharges, qtnm_so.othercharges, qtnm_so.discount, qtnm_so.supinv, qtnm_so.supname, qtnm_so.paid, qtnm_so.note, qtnm_so.datetime, qtnm_so.builty, qtnm_so.cntrsupplier, qtnm_so.status, qtndetail_So.pname, qtndetail_So.cp, qtndetail_So.qty, qtndetail_So.total, isnull(qtndetail_So.tax,0) as tax, isnull(qtndetail_So.total+ qtndetail_So.tax,0) as taxtotal FROM qtnm_so INNER JOIN qtndetail_So ON qtnm_so.invid = qtndetail_So.invid Inner join Product ON Product.ProductID = qtndetail_So.pid where qtnm_so.status='SO' and qtndetail_So.Stauts='SO' and qtnm_so.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + concat + "").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptSaleOrder.rpt"));
        //        rd.SetDataSource(list);
        //    }
        //    else if (type == 2 && optt == 2)
        //    {
        //        list_sale = _context.Database.SqlQuery<SaleReportQuery>("select date,orderm.OrderID,custname,prname,packing,qty,sp,isnull(Orderdetail.wht,0)wht,isnull(dsicval,0)dsicval,total_after from orderm inner join Orderdetail on orderm.OrderID = Orderdetail.OrderID where orderm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + concat1 + "").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptSINV.rpt"));
        //        rd.SetDataSource(list_sale);
        //    }
        //    else if (type == 3 && optt == 2)
        //    {
        //        list_sale = _context.Database.SqlQuery<SaleReportQuery>("select srsdetail.gst as ext1,date,srsm.OrderID,custname,prname,packing,qty,sp,isnull(srsdetail.wht,0)wht,isnull(srsdetail.ntotal,0) dsicval,totalafterdisc as total_after from srsm inner join srsdetail on srsm.OrderID = srsdetail.OrderID where Status='SRINV' and srsm.title='SRINV' and srsm.date between'" + Request["s_date"] + "' and '" + Request["e_date"] + "' " + concat1 + "").ToList();
        //        rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptSRINV.rpt"));
        //        rd.SetDataSource(list_sale);
        //    }

        //    var StartDate = Convert.ToDateTime(Request["s_date"]).ToString("dd-MM-yyyy");
        //    var Enddate = Convert.ToDateTime(Request["e_date"]).ToString("dd-MM-yyyy");


        //    rd.SetParameterValue("compname", "Test");
        //    rd.SetParameterValue("StartDate", StartDate);
        //    rd.SetParameterValue("Enddate", Enddate);
        //    Response.Buffer = false;
        //    Response.ClearContent();
        //    Response.ClearHeaders();

        //    Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
        //    stream.Seek(0, SeekOrigin.Begin);
        //    return File(stream, "application/pdf", "rptSale.pdf");
        //}
        public ActionResult SaleReportWctnView(int ID)
        {
            var list = _context.Database.SqlQuery<SaleDetail>("Select * from SaleDetails where InvId = " + ID + " and InvType='SINVWCTN'").ToList();
            var date = _context.Database.SqlQuery<String>("SELECT Date FROM SaleMasters where InvID =" + ID + " and InvType='SINVWCTN'").FirstOrDefault();
            var cargo = _context.Database.SqlQuery<decimal>("SELECT CargoCharges FROM SaleMasters where InvID =" + ID + " and InvType='SINVWCTN'").FirstOrDefault();
            var dis = _context.Database.SqlQuery<decimal>("SELECT DiscountAmount FROM SaleMasters where InvID =" + ID + " and InvType='SINVWCTN'").FirstOrDefault();
            var grandtotal = _context.Database.SqlQuery<decimal>("SELECT GrandTotal FROM SaleMasters where InvID =" + ID + " and InvType='SINVWCTN'").FirstOrDefault();
            var CompanyName = _context.Database.SqlQuery<String>("SELECT CompanyName FROM Settings ").FirstOrDefault();
            var Email = _context.Database.SqlQuery<String>("SELECT Email FROM Settings ").FirstOrDefault();
            var Phone = _context.Database.SqlQuery<String>("SELECT Phone FROM Settings ").FirstOrDefault();
            var Image = _context.Database.SqlQuery<String>("SELECT MImage FROM Settings ").FirstOrDefault();
            var Address = _context.Database.SqlQuery<String>("SELECT Address FROM Settings ").FirstOrDefault();
            var customer = _context.Database.SqlQuery<string>("SELECT (Select name From Customers where AccountNo=SaleMasters.CustomerId) as CustomerName  FROM SaleMasters where InvID =" + ID + " and InvType='SINVWCTN'").FirstOrDefault();
            var cusemail = _context.Database.SqlQuery<string>("SELECT (Select email From Customers where AccountNo=SaleMasters.CustomerId) as CustomerName  FROM SaleMasters where InvID =" + ID + " and InvType='SINVWCTN'").FirstOrDefault();
            var cusphone = _context.Database.SqlQuery<string>("SELECT (Select Phone From Customers where AccountNo=SaleMasters.CustomerId) as CustomerName  FROM SaleMasters where InvID =" + ID + " and InvType='SINVWCTN'").FirstOrDefault();
            var cusaddress = _context.Database.SqlQuery<string>("SELECT (Select Address From Customers where AccountNo=SaleMasters.CustomerId) as CustomerName  FROM SaleMasters where InvID =" + ID + " and InvType='SINVWCTN'").FirstOrDefault();
            ReportDocument rd = new ReportDocument();

            rd.Load(Path.Combine(Server.MapPath("~/Report"), "rptSaleWctnInv.rpt"));

            rd.SetDataSource(list);
            rd.SetParameterValue("compname", CompanyName);
            rd.SetParameterValue("email", Email);
            rd.SetParameterValue("phone", Phone);
            rd.SetParameterValue("address", Address);
            rd.SetParameterValue("date", date);
            rd.SetParameterValue("invid", ID);
            rd.SetParameterValue("customername", customer);
            rd.SetParameterValue("cargo", cargo);
            rd.SetParameterValue("dis", dis);
            rd.SetParameterValue("grandtotal", grandtotal);
            rd.SetParameterValue("cusemail", cusemail);
            rd.SetParameterValue("cusphone", cusphone);
            rd.SetParameterValue("cusaddress", cusaddress);
            rd.SetParameterValue("Image", Image);

            Response.Buffer = false;
            Response.ClearContent();
            Response.ClearHeaders();

            Stream stream = rd.ExportToStream(CrystalDecisions.Shared.ExportFormatType.PortableDocFormat);
            stream.Seek(0, SeekOrigin.Begin);
            return File(stream, "application/pdf", "rptSaleWctnInv.pdf");
        }
        public ActionResult Create(PoMaster poMaster)
        {
            poMaster.invid = _context.Database.SqlQuery<decimal>("select ISNULL(Max(invid),0)+1 from purchasem where status='PRINV'").FirstOrDefault();
            var Cus_list = _context.Database.SqlQuery<Customers>("SELECT * from customers where discount =1").ToList();
            var pro_listsss = _context.Database.SqlQuery<Products>("select ProductName,ProductID,UnitPrice,ReorderLevel,vattax,CategoryID,[desc],Active from Product").ToList();
            var SaleInvVM = new SaleInvVM
            {
                poMaster = poMaster,
                pro_listsss = pro_listsss,
                Cus_list = Cus_list,
            };
            return View(SaleInvVM);
        }
        [HttpPost, ActionName("Create")]
        public ActionResult Save(string[] item_name, int[] id, decimal[] sp, string[] qty, string[] n_total, PoMaster poMaster)
        {
            for (int i = 0; i < item_name.Count(); i++)
            {
                _context.Database.ExecuteSqlCommand("INSERT INTO srpdetail (Stauts,sr,pid,pname,cp,cp2,qty,total,invid,box,roll ) VALUES ('PRINV'," + i + "," + id[i] + ",'" + item_name[i] + "'," + sp[i] + ",0," + qty[i] + "," + n_total[i] + "," + poMaster.invid + ",0,0)");
            }
            poMaster.supname = _context.Database.SqlQuery<string>("select name from customers where customerid=" + poMaster.supid + "").FirstOrDefault();
            _context.Database.ExecuteSqlCommand("INSERT INTO srpm (builty,note,supid,invid,date,total,supname,status,datetime,cargid,cargocharges,othercharges,discount,paid ) VALUES ('" + poMaster.builty + "','" + poMaster.note + "'," + poMaster.supid + "," + poMaster.invid + ",'" + poMaster.date + "'," + poMaster.total + ",'" + poMaster.supname + "','PRINV','" + DateTime.Now + "',0,0,0,0,0)");
            return RedirectToAction("Index");
        }
        public ActionResult SINVWCTNReport(int? ID, SaleMaster SaleMaster, TransactionDetail TransactionDetail)
        {
            SaleMaster.InvID = _context.Database.SqlQuery<int>("Select InvID from QuotationMaster where InvID =" + ID + "").FirstOrDefault();
            SaleMaster.NetAmount = _context.Database.SqlQuery<decimal>("Select NetAmount from QuotationMaster where InvID =" + ID + "").FirstOrDefault();
            SaleMaster.CargoCharges = _context.Database.SqlQuery<decimal>("Select NetAmount from QuotationMaster where InvID =" + ID + "").FirstOrDefault();
            SaleMaster.CustomerId = _context.Database.SqlQuery<int>("Select CustomerId from QuotationMaster where InvID =" + ID + "").FirstOrDefault();
            SaleMaster.Date = _context.Database.SqlQuery<string>("Select Date from QuotationMaster where InvID =" + ID + "").FirstOrDefault();
            ViewBag.Image = _context.Database.SqlQuery<string>("Select MImage from Settings").FirstOrDefault();
            //SaleMaster = _context.SaleMaster.SingleOrDefault(c => c.InvID == ID );
            SaleMaster.CargoName = NumberToWords(Decimal.ToInt32(SaleMaster.NetAmount));
            int b_unit = Convert.ToInt32(Session["BusinessUnit"]);
            var Settings = _context.BusinessUnits.SingleOrDefault(c => c.Id == b_unit);
            var sett = _context.Settings.SingleOrDefault(c => c.ID == 2);
            var customer = _context.Customer.SingleOrDefault(d => d.AccountNo == SaleMaster.CustomerId);
            //var sale_list_woc = _context.Database.SqlQuery<Salequery>("SELECT *,(Select name From Customers where AccountNo=SaleMasters.CustomerId) as CustomerName ,(Select name From Employees where AccountNo=SaleMasters.DsrId) as EmployeeName FROM SaleMasters where InvID=" + ID + " and InvType = 'SINVWOCTN' ORDER BY InvID DESC").ToList();
            var q_detail = _context.Database.SqlQuery<QuotationQuery>("SELECT *,(Select Munit From Products where id=QuotationDetail.ItemID) as Munit from QuotationDetail where InvID=" + ID + "").ToList();
            var SaleInvVM = new SaleInvVM
            {
                sett = sett,
                q_detail = q_detail,
                Settings = Settings,
                customer = customer,
                SaleMaster = SaleMaster,
                TransactionDetail = TransactionDetail,
                //sale_list_woc = sale_list_woc,
            };
            return View(SaleInvVM);
        }

        public ActionResult Edit(int? ID)
        {
            var poMaster = _context.Database.SqlQuery<PoMaster>("select * from srpm where invid =" + ID + " and status='PRINV'").SingleOrDefault();
            var poDetail = _context.Database.SqlQuery<PoDetail>("select * from srpdetail where invid =" + ID + " and Stauts='PRINV'").ToList();
            var Cus_list = _context.Database.SqlQuery<Customers>("SELECT * from customers where discount =1").ToList();
            var pro_listsss = _context.Database.SqlQuery<Products>("select ProductName,ProductID,UnitPrice,ReorderLevel,vattax,CategoryID,[desc],Active from Product").ToList();
            var SaleInvVM = new SaleInvVM
            {
                poDetail = poDetail,
                poMaster = poMaster,
                pro_listsss = pro_listsss,
                Cus_list = Cus_list,
            };
            return View(SaleInvVM);
        }
        [HttpPost]
        public ActionResult Update(string[] item_name, int[] id, decimal[] sp, string[] qty, string[] n_total, PoMaster poMaster)
        {
            _context.Database.ExecuteSqlCommand("Delete From srpm where InvId =" + poMaster.invid + " and status='PRINV' ");
            _context.Database.ExecuteSqlCommand("Delete From srpdetail where InvId =" + poMaster.invid + "  and Stauts='PRINV' ");
            for (int i = 0; i < item_name.Count(); i++)
            {
                _context.Database.ExecuteSqlCommand("INSERT INTO srpdetail (Stauts,sr,pid,pname,cp,cp2,qty,total,invid,box,roll ) VALUES ('PRINV'," + i + "," + id[i] + ",'" + item_name[i] + "'," + sp[i] + ",0," + qty[i] + "," + n_total[i] + "," + poMaster.invid + ",0,0)");
            }
            poMaster.supname = _context.Database.SqlQuery<string>("select name from customers where customerid=" + poMaster.supid + "").FirstOrDefault();
            _context.Database.ExecuteSqlCommand("INSERT INTO srpm (builty,note,supid,invid,date,total,supname,status,datetime,cargid,cargocharges,othercharges,discount,paid ) VALUES ('" + poMaster.builty + "','" + poMaster.note + "'," + poMaster.supid + "," + poMaster.invid + ",'" + poMaster.date + "'," + poMaster.total + ",'" + poMaster.supname + "','PRINV','" + DateTime.Now + "',0,0,0,0,0)");
            return RedirectToAction("Index");
        }
        [HttpPost]
        public ActionResult Action(int code)
        {

            var getgrosspackage = _context.Database.SqlQuery<Customer>("Select * From Customers where AccountNo =" + code + "").ToList();
            return Json(getgrosspackage, JsonRequestBehavior.AllowGet);
        }

        public ActionResult Delete(int? ID)
        {
            if (ID == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            //_context.Database.ExecuteSqlCommand("Delete From TransactionDetails where InvId =" + ID + " and Vtype = 'SINVWCTN'");
            _context.Database.ExecuteSqlCommand("Delete From srpm where InvId =" + ID + " and status='PRINV' ");
            _context.Database.ExecuteSqlCommand("Delete From srpdetail where InvId =" + ID + "  and Stauts='PRINV' ");
            return RedirectToAction("Index");
        }
        private object NumberToWords(string number)
        {
            throw new NotImplementedException();
        }

        public static string NumberToWords(int number)
        {
            if (number == 0)
                return "zero";

            if (number < 0)
                return "minus " + NumberToWords(Math.Abs(number));

            string words = "";

            if ((number / 1000000) > 0)
            {
                words += NumberToWords(number / 1000000) + " million ";
                number %= 1000000;
            }

            if ((number / 1000) > 0)
            {
                words += NumberToWords(number / 1000) + " thousand ";
                number %= 1000;
            }

            if ((number / 100) > 0)
            {
                words += NumberToWords(number / 100) + " hundred ";
                number %= 100;
            }

            if (number > 0)
            {
                if (words != "")
                    words += "and ";

                var unitsMap = new[] { "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen" };
                var tensMap = new[] { "zero", "ten", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety" };

                if (number < 20)
                    words += unitsMap[number];
                else
                {
                    words += tensMap[number / 10];
                    if ((number % 10) > 0)
                        words += " " + unitsMap[number % 10];
                }
            }
            string new_word = Regex.Replace(words, @"(^\w)|(\s\w)", m => m.Value.ToUpper());
            return new_word;
        }
        public ActionResult ItemLedgerIndex()
        {
            var pro_listsss = _context.Database.SqlQuery<Products>("select ProductName,ProductID,UnitPrice,ReorderLevel,vattax,CategoryID,[desc],Active from Product where CategoryID in (select CategoryID from Categories where RawProductCheck=1)").ToList();
            return View(pro_listsss);
        }
      
        public ActionResult FillingIndex()
        {
           
            return View();
        }
        
        public ActionResult FinishedGoodsPO()
        {
            var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT derivedtbl_3.ProductID, MianCategories.MainCategoryName AS Category, Categories_1.CategoryName AS Product, derivedtbl_3.ProductName AS Color, derivedtbl_3.ReorderDubbi, derivedtbl_3.ReorderQuarter, derivedtbl_3.ReorderGallon, derivedtbl_3.ReorderDrum, derivedtbl_3.CategoryID, derivedtbl_3.StkDubbi, derivedtbl_3.StkQuarter, derivedtbl_3.StkGallon, derivedtbl_3.StkDrum, ProductExtendF.MaxDubbi, ProductExtendF.MaxQuarter, ProductExtendF.MaxGallon, ProductExtendF.MaxDrum, CASE WHEN derivedtbl_3.StkDubbi < ProductExtendF.MaxDubbi THEN ProductExtendF.MaxDubbi - derivedtbl_3.StkDubbi ELSE 0 END AS PODubbi, CASE WHEN derivedtbl_3.StkQuarter < ProductExtendF.MaxQuarter THEN ProductExtendF.MaxQuarter - derivedtbl_3.StkQuarter ELSE 0 END AS POQuarter, CASE WHEN derivedtbl_3.StkGallon < ProductExtendF.MaxGallon THEN ProductExtendF.MaxGallon - derivedtbl_3.StkGallon ELSE 0 END AS POGallon, CASE WHEN derivedtbl_3.StkDrum < ProductExtendF.MaxDrum THEN ProductExtendF.MaxDrum - derivedtbl_3.StkDrum ELSE 0 END AS PODrum FROM (SELECT ProductID, ProductName, ReorderDubbi, ReorderQuarter, ReorderGallon, ReorderDrum, CategoryID, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, ReorderDubbi, ReorderQuarter, ReorderGallon, ReorderDrum, CategoryID, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, ReorderDubbi, ReorderQuarter, ReorderGallon, ReorderDrum, CategoryID, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, 0 AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)) AS BatchFillingDubbiAfter, 0 AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)) AS BatchFillingQuarterAfter, 0 AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)) AS BatchFillingGallonAfter, 0 AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)) AS BatchFillingDrumAfter, 0 AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID)) AS SaleReturnDubbiAfter, 0 AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID)) AS SaleReturnQuarterAfter, 0 AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID)) AS SaleReturnGallonAfter, 0 AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID)) AS SaleReturnDrumAfter, 0 AS SaleDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID)) AS SaleDubbiAfter, 0 AS SaleQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID)) AS SaleQuarterAfter, 0 AS SaleGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID)) AS SaleGallonAfter, 0 AS SaleDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID)) AS SaleDrumAfter, 0 AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID)) AS SaleTwoDubbiAfter, 0 AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID)) AS SaleTwoQuarterAfter, 0 AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID)) AS SaleTwoGallonAfter, 0 AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID)) AS SaleTwoDrumAfter, 0 AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID)) AS DemageDubbiAfter, 0 AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID)) AS DemageQuarterAfter, 0 AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID)) AS DemageGallonAfter, 0 AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID)) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2) AS derivedtbl_3 INNER JOIN Categories AS Categories_1 ON derivedtbl_3.CategoryID = Categories_1.CategoryID INNER JOIN ProductExtendF ON derivedtbl_3.ProductID = ProductExtendF.ProductID INNER JOIN MianCategories ON Categories_1.MainCategoryID = MianCategories.MainCategoryID").ToList().Where(x=>x.PODrum>0 || x.PODubbi>0 || x.POGallon>0 || x.POQuarter>0);
            return View(item_ledger);
        }
        public ActionResult FillingSearch()
        {
            var StartDate = Convert.ToDateTime(Request["s_date"]);
            var Enddate = Convert.ToDateTime(Request["e_date"]);
            var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery>("select ProductName,isnull((select sum(weight) from tbl_BatchTransfer where daterec between '" + Request["s_date"] + "' and '" + Request["e_date"] + "' and color=ProductName),0) as received,isnull((select sum(totalfillweight) from tbl_BatchFillingMaster where Fillingdate between '" + Request["s_date"] + "' and '" + Request["e_date"] + "' and ColorName=ProductName),0) as Filled from Product where CategoryID in(select CategoryID from Categories where RawProductCheck=0)").ToList();
            ViewBag.StartDate = Convert.ToDateTime(StartDate).ToString("yyyy-MM-dd");
            ViewBag.EndDate = Convert.ToDateTime(Enddate).ToString("yyyy-MM-dd");
            return View(item_ledger);
        }

       
        public ActionResult PackingItemLedgerIndex()
        {
            var pro_listsss = _context.Database.SqlQuery<Products>("select ProductName,ProductID,UnitPrice,ReorderLevel,vattax,CategoryID,[desc],Active from Product where CategoryID=43").ToList();
            return View(pro_listsss);
        }

        public void ItemLedgerOption(string ledgertype)
        {
            if (ledgertype == "1")
                ItemLedgerSearch();
            else
                ItemLedgerSearch_Date();
        }

        public ActionResult ItemLedgerSearch()
        {
            //var list = _context.Database.SqlQuery<RawMaterialReportQuery>("SELECT CategoryID, CategoryName, ProductID, pname, vattax, cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, Qtybal, total as ext1 FROM(SELECT TOP (100) PERCENT CategoryID, (SELECT CategoryName FROM Categories WHERE (CategoryID = derivedtbl_2.CategoryID)) AS CategoryName, ProductID, ProductName AS pname, vattax, UnitPrice AS cost, AdjQTY, QTYin, QTYLabin, QTYrtnIn, qtyoutprd, qtyout, qtyoutlab, QTYSaleOut, qtyoutwast, AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast AS Qtybal, (AdjQTY + QTYin + QTYLabin + QTYrtnIn - qtyoutprd - qtyout - qtyoutlab - QTYSaleOut - qtyoutwast) * UnitPrice AS total FROM (SELECT CategoryID, ProductID, ProductName, vattax, UnitPrice, vattax + PurchaseOpenIn + labOpenIn + SalesReturnOpenIn - purchasereturnOpenOut - LabStkOpenout - LabStkOpenout2 - labOPout - SalesOpenOut - DmgStkOpenOut AS AdjQTY, PurchasebetweenIn AS QTYin, labBetweenIn AS QTYLabin, SalesReturnBetweenIn AS QTYrtnIn, purchasereturnBetweenOut AS qtyoutprd, LabStkBetwout + LabStkBetwout2 AS qtyout, labBTout AS qtyoutlab, SalesBetwOut AS QTYSaleOut, DmgStkBetwOut AS qtyoutwast, PurchaseOpenIn, PurchasebetweenIn, labOpenIn, labBetweenIn, SalesReturnOpenIn, SalesReturnBetweenIn, purchasereturnOpenOut, purchasereturnBetweenOut, LabStkOpenout, LabStkBetwout, LabStkOpenout2, LabStkBetwout2, labOPout, labBTout, SalesOpenOut, SalesBetwOut, DmgStkOpenOut, DmgStkBetwOut FROM (SELECT CAST(CategoryID AS decimal) AS CategoryID, CAST(ProductID AS decimal) AS ProductID, CAST(ProductName AS varchar(500)) AS ProductName, CAST(vattax AS float) AS vattax, CAST(UnitPrice AS float) AS UnitPrice, (SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = PRD.ProductID) AND (purchasem.date < '" + Request["s_date"] + "')) AS PurchaseOpenIn, (SELECT ISNULL(SUM(purchasedetail_1.qty), 0) AS Expr1 FROM purchasedetail AS purchasedetail_1 INNER JOIN purchasem AS purchasem_1 ON purchasedetail_1.invid = purchasem_1.invid WHERE (purchasedetail_1.pid = PRD.ProductID) AND (purchasem_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS PurchasebetweenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm WHERE (pid = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOpenIn, (SELECT ISNULL(SUM(whc), 0) AS Expr1 FROM labm AS labm_1 WHERE (pid = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBetweenIn, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.prid = PRD.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SalesReturnOpenIn, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.prid = PRD.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesReturnBetweenIn, (SELECT ISNULL(SUM(srpdetail.qty), 0) AS Expr1 FROM srpdetail INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE (srpdetail.pid = PRD.ProductID) AND (srpm.date < '" + Request["s_date"] + "')) AS purchasereturnOpenOut, (SELECT ISNULL(SUM(srpdetail_1.qty), 0) AS Expr1 FROM srpdetail AS srpdetail_1 INNER JOIN srpm AS srpm_1 ON srpdetail_1.invid = srpm_1.invid WHERE (srpdetail_1.pid = PRD.ProductID) AND (srpm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS purchasereturnBetweenOut, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail AS ProductIngrDetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS LabStkOpenout2, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM ProductIngrDetail1 AS ProductIngrDetail1_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS LabStkBetwout2, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail WHERE (ItemId = PRD.ProductID) AND (Date < '" + Request["s_date"] + "')) AS labOPout, (SELECT ISNULL(SUM(weight), 0) AS Expr1 FROM labdetail AS labdetail_1 WHERE (ItemId = PRD.ProductID) AND (Date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS labBTout, (SELECT ISNULL(SUM(Product.prdunit * Order_detail.ctn + Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID INNER JOIN Product ON Order_detail.prid = Product.ProductID WHERE (Order_detail.prid = PRD.ProductID) AND (Order_Master.date < '" + Request["s_date"] + "')) AS SalesOpenOut, (SELECT ISNULL(SUM(Product_1.prdunit * Order_detail_1.ctn + Order_detail_1.qty), 0) AS Expr1 FROM Order_detail AS Order_detail_1 INNER JOIN Order_Master AS Order_Master_1 ON Order_detail_1.OrderID = Order_Master_1.OrderID INNER JOIN Product AS Product_1 ON Order_detail_1.prid = Product_1.ProductID WHERE (Order_detail_1.prid = PRD.ProductID) AND (Order_Master_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SalesBetwOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail WHERE (pid = PRD.ProductID) AND (date < '" + Request["s_date"] + "')) AS DmgStkOpenOut, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail AS sampledetail_1 WHERE (pid = PRD.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DmgStkBetwOut FROM Product AS PRD WHERE (CategoryID IN (1, 38, 43)) AND (LEN(ProductName) > 3)) AS derivedtbl_1) AS derivedtbl_2 ORDER BY CategoryID, pname) AS derivedtbl_3 ORDER BY pname").ToList();
            _context.Database.ExecuteSqlCommand("truncate table ItemLedger_Raw");
            string itemname = Request["item"];
            var StartDate = Convert.ToDateTime(Request["s_date"]);
            var Enddate = Convert.ToDateTime(Request["e_date"]);

            string item_name = _context.Database.SqlQuery<string>("select ProductName from Product where ProductID=" + itemname + " ").FirstOrDefault();
            decimal opening_pro = _context.Database.SqlQuery<decimal>("select vattax from Product where ProductID=" + itemname + " ").FirstOrDefault();
            decimal opening_Pur = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid  where pid=" + itemname + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_Purreturn = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid where pid=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //decimal opening_batchsheet = _context.Database.SqlQuery<decimal>("select isnull(sum(totalweight),0) from ProductIngrMaster Inner join Product on Product.ProductName = ProductIngrMaster.ColorName where Product.ProductID=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_batchsheet = _context.Database.SqlQuery<decimal>("SELECT     ISNULL(SUM(ProductIngrDetail.weight), 0) AS Expr1 FROM ProductIngrDetail INNER JOIN ProductIngrMaster ON ProductIngrDetail.OrderId = ProductIngrMaster.OrderId where ProductIngrDetail.ItemId=" + itemname + " and ProductIngrMaster.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_Lab = _context.Database.SqlQuery<decimal>("select isnull(sum(weight),0) from labdetail where  ItemId=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_BatchFilling = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from tbl_BatchFillingDetail where ItemId=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_sale = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Order_detail Inner Join Order_Master on Order_detail.OrderID = Order_Master.OrderID where prid=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_saletax = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='TSRINV' and prid=" + itemname + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_salereturntax = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='TSRINV' and prid=" + itemname + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_salereturn = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status<>'SRINV' and prid=" + itemname + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_demage = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail where pid=" + itemname + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

            decimal opening = opening_pro + opening_Pur - opening_demage - opening_Purreturn - opening_batchsheet - opening_Lab - opening_BatchFilling - opening_sale - opening_saletax + opening_salereturntax + opening_salereturn;
            decimal opening1 = opening_pro + opening_Pur - opening_demage - opening_Purreturn - opening_batchsheet - opening_Lab - opening_BatchFilling - opening_sale - opening_saletax + opening_salereturntax + opening_salereturn;

            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_Raw (ItemId,Date,Description,StockIn,StockOut,balance) VALUES (" + itemname + ",'" + StartDate.ToString("yyyy-MM-dd") + "','" + "Opening Balance" + "'," + opening + ",0," + opening + ")");


            foreach (DateTime day in EachDay(StartDate, Enddate))
            {
                string description = "";
                //Simple Purchase 
                decimal pur_invid = _context.Database.SqlQuery<decimal>("select isnull(purchasedetail.invid,0) from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='PINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string pur_supname = _context.Database.SqlQuery<string>("select supname from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='PINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Purchase Invoice No # " + pur_invid + " From: " + pur_supname;
                List<decimal> pur = _context.Database.SqlQuery<decimal>("select qty from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='PINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(pur, day, Convert.ToDecimal(Request["item"]), description, opening, true);

                //Purchase Tax
                decimal purtax_invid = _context.Database.SqlQuery<decimal>("select isnull(purchasedetail.invid,0) from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='TPINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string purtax_supname = _context.Database.SqlQuery<string>("select supname from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='TPINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Tax Purchase Invoice No # " + purtax_invid + " From: " + purtax_supname;
                List<decimal> pur_tax = _context.Database.SqlQuery<decimal>("select qty from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='TPINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(pur_tax, day, Convert.ToDecimal(Request["item"]), description, opening, true);

                //Simple Purchase return
                decimal purreturn_invid = _context.Database.SqlQuery<decimal>("select isnull(srpdetail.invid,0) from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='PRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string purreturn_supname = _context.Database.SqlQuery<string>("select supname from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='PRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault(); description = "Purchase Invoice No # " + pur_invid + " From: " + pur_supname;
                description = "Purchase Return Invoice No # " + purreturn_invid + " From: " + purreturn_supname;
                List<decimal> purreturn = _context.Database.SqlQuery<decimal>("select qty from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='PRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(purreturn, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                //Tax Purchase return
                decimal taxpurreturn_invid = _context.Database.SqlQuery<decimal>("select isnull(srpdetail.invid,0) from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='TPRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string taxpurreturn_supname = _context.Database.SqlQuery<string>("select supname from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='TPRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault(); description = "Purchase Invoice No # " + pur_invid + " From: " + pur_supname;
                description = "Tax Purchase Return Invoice No # " + taxpurreturn_invid + " From: " + taxpurreturn_supname;
                List<decimal> taxpurreturn = _context.Database.SqlQuery<decimal>("select qty from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='TPRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(taxpurreturn, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                //BatchSheet
                //List<string> batchsheet_no = _context.Database.SqlQuery<string>("select BatchNo from ProductIngrMaster Inner join ProductIngrdetail on ProductIngrdetail.OrderId = ProductIngrMaster.OrderId where ProductIngrdetail.ItemId=" + itemname + " and ProductIngrMaster.date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                List<decimal> batchsheet_no = _context.Database.SqlQuery<decimal>("select ProductIngrMaster.OrderId from ProductIngrMaster Inner join ProductIngrdetail on ProductIngrdetail.OrderId = ProductIngrMaster.OrderId where ProductIngrdetail.ItemId=" + itemname + " and ProductIngrMaster.date = '" + day.Date.ToString("yyyy-MM-dd") + "' GROUP BY ProductIngrMaster.OrderId").ToList();
                foreach (decimal itmbatchno in batchsheet_no)
                {
                    //List<decimal> batchsheet = _context.Database.SqlQuery<decimal>("select ProductIngrDetail.weight from ProductIngrDetail INNER JOIN Product ON Product.ProductID = ProductIngrDetail.ItemId INNER JOIN ProductIngrMaster ON ProductIngrDetail.OrderId = ProductIngrMaster.OrderId where Product.ProductID=" + itemname + " and ProductIngrDetail.date = '" + day.Date.ToString("yyyy-MM-dd") + "' and ProductIngrMaster.BatchNo= '" + itmbatchno + "'").ToList();
                    List<decimal> batchsheet = _context.Database.SqlQuery<decimal>("select ProductIngrDetail.weight from ProductIngrMaster Inner join ProductIngrdetail on ProductIngrdetail.OrderId = ProductIngrMaster.OrderId where ProductIngrdetail.ItemId=" + itemname + " and ProductIngrMaster.OrderId=" + itmbatchno).ToList();
                    description = "Sr#" + itmbatchno + "  BatchSheet # " + _context.Database.SqlQuery<string>("select top(1) ProductIngrMaster.BatchNo from ProductIngrMaster Inner join ProductIngrdetail on ProductIngrdetail.OrderId = ProductIngrMaster.OrderId where ProductIngrdetail.ItemId=" + itemname + " and ProductIngrMaster.OrderId=" + itmbatchno).SingleOrDefault();
                    opening = ItemLedgerInsert(batchsheet, day, Convert.ToDecimal(Request["item"]), description, opening, false);
                }

                //Lab OUT
                //List<decimal> Lab_noo = _context.Database.SqlQuery<decimal>("select OrderId from labdetail where  ItemId=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "' GROUP BY OrderId").ToList();
                List<decimal> Lab_noo = _context.Database.SqlQuery<decimal>("SELECT labdetail.OrderId FROM labdetail INNER JOIN labm ON labdetail.OrderId = labm.OrderId WHERE (labdetail.ItemId = " + itemname + ") AND (labm.Date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY labdetail.OrderId").ToList();
                foreach (decimal itmlab in Lab_noo)
                {
                    description = "Sr:" + itmlab + "  Lab Batch# " + _context.Database.SqlQuery<string>("select top(1) BatchNo from labm where  OrderId=" + itmlab).SingleOrDefault();
                    List<decimal> Lab = _context.Database.SqlQuery<decimal>("select weight from labdetail where  ItemId=" + itemname + " and OrderId=" + itmlab).ToList();
                    opening = ItemLedgerInsert(Lab, day, Convert.ToDecimal(Request["item"]), description, opening, false);
                }


                //IN
                var Lab_no = _context.Database.SqlQuery<decimal>("select isnull(OrderId,0) from labm where  pid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "LabEntries # " + Lab_no;
                List<decimal> Labin = _context.Database.SqlQuery<decimal>("select Stand_total_weight from labm where  pid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(Labin, day, Convert.ToDecimal(Request["item"]), description, opening, true);

                //BatchFilling
                List<string> sr = _context.Database.SqlQuery<string>("select cast(sr as varchar) from tbl_BatchFillingDetail where ItemId=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                foreach (string itmbatchsr in sr)
                {
                    description = "BatchFilling # " + itmbatchsr;
                    List<decimal> BatchFilling = _context.Database.SqlQuery<decimal>("select qty from tbl_BatchFillingDetail where ItemId=" + itemname + " and sr='" + itmbatchsr + "'").ToList();
                    opening = ItemLedgerInsert(BatchFilling, day, Convert.ToDecimal(Request["item"]), description, opening, false);
                }

                //Simple Sale 
                decimal sale_invno = _context.Database.SqlQuery<decimal>("select qty from Order_detail Inner Join Order_Master on Order_detail.OrderID = Order_Master.OrderID where prid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string sale_cusname = _context.Database.SqlQuery<string>("select custname from Order_detail Inner Join Order_Master on Order_detail.OrderID = Order_Master.OrderID where prid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Sale Invoice No # " + sale_invno + " From: " + sale_cusname;
                List<decimal> sale = _context.Database.SqlQuery<decimal>("select qty from Order_detail Inner Join Order_Master on Order_detail.OrderID = Order_Master.OrderID where prid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(sale, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                //Tax Simple Sale 
                decimal saletax_invno = _context.Database.SqlQuery<decimal>("select srsdetail.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='TSRINV' and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string saletax_cusname = _context.Database.SqlQuery<string>("select custname from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='TSRINV' and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Sale Return Invoice No # " + saletax_invno + " From: " + saletax_cusname;
                List<decimal> saletax = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='TSRINV' and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(saletax, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                //Simple Sale Return 
                decimal salereturn_invno = _context.Database.SqlQuery<decimal>("select srsdetail.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='SRINV' and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string salereturn_cusname = _context.Database.SqlQuery<string>("select custname from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='SRINV' and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Tax Sale Invoice No # " + salereturn_invno + " From: " + salereturn_cusname;
                List<decimal> salereturn = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='SRINV' and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(salereturn, day, Convert.ToDecimal(Request["item"]), description, opening, true);

                //Tax sale Return 
                decimal salereturntax_invno = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='TSRINV' and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string salereturntax_cusname = _context.Database.SqlQuery<string>("select custname from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='TSRINV' and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Tax Sale Return Invoice No # " + salereturntax_invno + " From: " + salereturntax_cusname;
                List<decimal> salereturntax = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status='TSRINV' and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(salereturntax, day, Convert.ToDecimal(Request["item"]), description, opening, true);

                //Demage
                decimal invno = _context.Database.SqlQuery<decimal>("select top(1) invid from sampledetail where pid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Demage Invoice No # " + invno;
                List<decimal> demageqty = _context.Database.SqlQuery<decimal>("select qty from sampledetail where pid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(demageqty, day, Convert.ToDecimal(Request["item"]), description, opening, false);
            }
            var item_ledger = _context.Database.SqlQuery<ItemLedger_Raw>("select Date, Description, StockIn, StockOut from ItemLedger_Raw").ToList();
            //var item_ledger = _context.Database.SqlQuery<ItemLedger_Raw>("select Date, Description, StockIn, StockOut from ItemLedger_Raw GROUP BY Date, Description, StockIn, StockOut").ToList();
            ViewBag.StartDate = Convert.ToDateTime(StartDate).ToString("yyyy-MM-dd");
            ViewBag.EndDate = Convert.ToDateTime(Enddate).ToString("yyyy-MM-dd");
            ViewBag.op = opening1;
            ViewBag.itemname = item_name;
            return View(item_ledger);
        }
        public ActionResult ItemLedgerSearch_Date()
        {
            _context.Database.ExecuteSqlCommand("truncate table ItemLedger_Raw");
            string itemname = Request["item"];
            var StartDate = Convert.ToDateTime(Request["s_date"]);
            var Enddate = Convert.ToDateTime(Request["e_date"]);
          

            string item_name = _context.Database.SqlQuery<string>("select ProductName from Product where ProductID=" + itemname + "  ").FirstOrDefault();

            decimal opening_pro = _context.Database.SqlQuery<decimal>("select vattax from Product where ProductID=" + itemname + " ").FirstOrDefault();
            decimal opening_Pur = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid  where pid=" + itemname + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
             opening_Pur = opening_Pur + _context.Database.SqlQuery<decimal>("select isnull(sum(Stand_total_weight),0) from labm where  pid=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

            decimal opening_Purreturn = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid where pid=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_StockDistribution = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(SDD.qty), 0) AS Expr1 FROM StockDistributionDetail AS SDD INNER JOIN StockDistribution AS SD ON SD.invid = SDD.invid where SDD.pid=" + itemname + " and SD.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_salereturn = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND   srsm.title =srsdetail.Status  where Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();


           // decimal opening_batchsheet = _context.Database.SqlQuery<decimal>("SELECT     ISNULL(SUM(weight), 0) AS Expr1 FROM ProductIngrDetail where ItemId=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_batchsheet =              _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(d.weight), 0) AS weight FROM ProductIngrDetail  AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = " + itemname + ") AND (d.Date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            opening_batchsheet = opening_batchsheet + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(   d.qty), 0) AS weight FROM ProductIngrDetail1 AS d INNER JOIN ProductIngrMaster AS m ON d.OrderId = m.OrderId WHERE (d.ItemId = " + itemname + ") AND (d.Date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();



            decimal opening_Lab = _context.Database.SqlQuery<decimal>("select isnull(sum(weight),0) from labdetail where  ItemId=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
           // decimal opening_Lab = 0;
            decimal opening_BatchFilling = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from tbl_BatchFillingDetail where ItemId=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_sale = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Order_detail Inner Join Order_Master on Order_detail.OrderID = Order_Master.OrderID where prid=" + itemname + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
             opening_sale = opening_sale + _context.Database.SqlQuery<decimal>("select  ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS m ON srsdetail_1.OrderID = m.OrderID AND srsdetail_1.Status = m.title WHERE (srsdetail_1.prid = " + itemname + ") AND (m.date < '" + StartDate.ToString("yyyy-MM-dd") + "') AND (srsdetail_1.Status NOT IN ('TSRINV', 'SRINV')) ").FirstOrDefault();
            decimal opening_salereturntax = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status in ('TSINV','WTSINV') and prid=" + itemname + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
           // decimal opening_demage = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail where pid=" + itemname + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_demage = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(d.qty), 0) AS Expr1 FROM sampledetail AS d INNER JOIN samplem AS m ON d.invid = m.invid where pid=" + itemname + "  and m.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();


            decimal opening = opening_pro  + opening_Pur + opening_StockDistribution - opening_demage - opening_Purreturn - opening_batchsheet - opening_Lab - opening_BatchFilling - opening_sale -  opening_salereturntax + opening_salereturn;
            decimal opening1 = opening_pro + opening_Pur + opening_StockDistribution - opening_demage - opening_Purreturn - opening_batchsheet - opening_Lab - opening_BatchFilling - opening_sale -  opening_salereturntax + opening_salereturn;

            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_Raw (ItemId,Date,Description,StockIn,StockOut,balance) VALUES (" + itemname + ",'" + StartDate.ToString("yyyy-MM-dd") + "','" + "Opening Balance" + "'," + opening + ",0," + opening + ")");


            foreach (DateTime day in EachDay(StartDate, Enddate))
            {
                string description = "";
                //Simple Purchase 
                decimal pur_invid = _context.Database.SqlQuery<decimal>("select isnull(purchasedetail.invid,0) from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='PINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string pur_supname = _context.Database.SqlQuery<string>("select supname from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='PINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Purchase Invoice No # " + pur_invid + " From: " + pur_supname;
                List<decimal> pur = _context.Database.SqlQuery<decimal>("select qty from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='PINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                if (pur.Count()==1) {
                    opening = ItemLedgerInsert(pur, day, Convert.ToDecimal(Request["item"]), description, opening, true);
                }
                else {
                    List<decimal> pur_invid1 = _context.Database.SqlQuery<decimal>("select isnull(purchasedetail.invid,0) from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='PINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                    List<string> pur_supname1 = _context.Database.SqlQuery<string>("select supname from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='PINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                   

                    opening = ItemLedgerInsert1(pur,pur_invid1, pur_supname1, day, Convert.ToDecimal(Request["item"]), opening, true);
                }

                
                //Stock Distribution  
                decimal stk_invid = _context.Database.SqlQuery<decimal>("select isnull(SD.invid,0)  FROM StockDistributionDetail AS SDD INNER JOIN StockDistribution AS SD ON SD.invid = SDD.invid where SDD.pid=" + itemname + "  and SD.date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string stk_supname = _context.Database.SqlQuery<string>("select SD.FromStore  FROM StockDistributionDetail AS SDD INNER JOIN StockDistribution AS SD ON SD.invid = SDD.invid where SDD.pid=" + itemname + "  and SD.date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Stock Distribution No # " + stk_invid + " From: " + stk_supname;
                List<decimal> stk = _context.Database.SqlQuery<decimal>("select SDD.qty  FROM StockDistributionDetail AS SDD INNER JOIN StockDistribution AS SD ON SD.invid = SDD.invid where SDD.pid=" + itemname + "  and SD.date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(stk, day, Convert.ToDecimal(Request["item"]), description, opening, true);


                //Purchase Tax
                decimal purtax_invid = _context.Database.SqlQuery<decimal>("select isnull(purchasedetail.invid,0) from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='TPINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string purtax_supname = _context.Database.SqlQuery<string>("select supname from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='TPINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Tax Purchase Invoice No # " + purtax_invid + " From: " + purtax_supname;
                List<decimal> pur_tax = _context.Database.SqlQuery<decimal>("select qty from purchasedetail Inner Join purchasem on purchasedetail.invid = purchasem.invid and purchasedetail.Stauts = purchasem.status where pid=" + itemname + " and purchasedetail.Stauts='TPINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(pur_tax, day, Convert.ToDecimal(Request["item"]), description, opening, true);
                
                
              
                //Simple Purchase return
                decimal purreturn_invid = _context.Database.SqlQuery<decimal>("select isnull(srpdetail.invid,0) from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='PRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string purreturn_supname = _context.Database.SqlQuery<string>("select supname from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='PRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault(); description = "Purchase Invoice No # " + pur_invid + " From: " + pur_supname;
                description = "Purchase Return Invoice No # " + purreturn_invid + " From: " + purreturn_supname;
                List<decimal> purreturn = _context.Database.SqlQuery<decimal>("select qty from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='PRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(purreturn, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                //Tax Purchase return
                decimal taxpurreturn_invid = _context.Database.SqlQuery<decimal>("select isnull(srpdetail.invid,0) from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='TPRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string taxpurreturn_supname = _context.Database.SqlQuery<string>("select supname from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='TPRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault(); description = "Purchase Invoice No # " + pur_invid + " From: " + pur_supname;
                description = "Tax Purchase Return Invoice No # " + taxpurreturn_invid + " From: " + taxpurreturn_supname;
                List<decimal> taxpurreturn = _context.Database.SqlQuery<decimal>("select qty from srpdetail Inner Join srpm on srpdetail.invid = srpm.invid and srpdetail.Stauts = srpm.status where pid=" + itemname + " and srpdetail.Stauts='TPRINV' and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(taxpurreturn, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                //BatchSheet
                List<decimal> batchsheet_no = _context.Database.SqlQuery<decimal>("select OrderId from ProductIngrdetail where ItemId=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "' GROUP BY OrderId").ToList();
                foreach (decimal itmbatchno in batchsheet_no)
                {
                    List<decimal> batchsheet = _context.Database.SqlQuery<decimal>("select weight from ProductIngrDetail where ItemId=" + itemname + " and OrderId=" + itmbatchno + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                    description = "Sr#" + itmbatchno + "  BatchSheet # " + _context.Database.SqlQuery<string>("select top(1) ProductIngrMaster.BatchNo from ProductIngrMaster Inner join ProductIngrdetail on ProductIngrdetail.OrderId = ProductIngrMaster.OrderId where ProductIngrdetail.ItemId=" + itemname + " and ProductIngrdetail.OrderId=" + itmbatchno).SingleOrDefault();
                    opening = ItemLedgerInsert(batchsheet, day, Convert.ToDecimal(Request["item"]), description, opening, false);
                }

                //Lab OUT
                //List<decimal> Lab_noo = _context.Database.SqlQuery<decimal>("SELECT labdetail.OrderId FROM labdetail INNER JOIN labm ON labdetail.OrderId = labm.OrderId WHERE (labdetail.ItemId = " + itemname + ") AND (labdetail.Date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY labdetail.OrderId").ToList();
                List<decimal> Lab_noo = _context.Database.SqlQuery<decimal>("SELECT OrderId FROM labdetail WHERE (labdetail.ItemId = " + itemname + ") AND (Date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY OrderId").ToList();
                foreach (decimal itmlab in Lab_noo)
                {
                    description = "Sr:" + itmlab + "  Lab Batch# " + _context.Database.SqlQuery<string>("select top(1) BatchNo from labm where  OrderId=" + itmlab).SingleOrDefault();
                    List<decimal> Lab = _context.Database.SqlQuery<decimal>("select weight from labdetail where  ItemId=" + itemname + " and OrderId=" + itmlab + " and (Date = '" + day.Date.ToString("yyyy-MM-dd") + "')").ToList();
                    opening = ItemLedgerInsert(Lab, day, Convert.ToDecimal(Request["item"]), description, opening, false);
                }

                //IN
                var Lab_no = _context.Database.SqlQuery<decimal>("select isnull(OrderId,0) from labm where  pid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "LabEntries # " + Lab_no;
                List<decimal> Labin = _context.Database.SqlQuery<decimal>("select Stand_total_weight from labm where  pid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(Labin, day, Convert.ToDecimal(Request["item"]), description, opening, true);

                //BatchFilling
                List<string> sr = _context.Database.SqlQuery<string>("select cast(sr as varchar) from tbl_BatchFillingDetail where ItemId=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                foreach (string itmbatchsr in sr)
                {
                    description = "BatchFilling # " + _context.Database.SqlQuery<string>("select top(1) cast(batchn as varchar) from tbl_BatchFillingBatches where sr='" + itmbatchsr + "'").FirstOrDefault();
                    List<decimal> BatchFilling = _context.Database.SqlQuery<decimal>("select qty from tbl_BatchFillingDetail where ItemId=" + itemname + " and sr='" + itmbatchsr + "'").ToList();
                    opening = ItemLedgerInsert(BatchFilling, day, Convert.ToDecimal(Request["item"]), description, opening, false);
                }

                //Simple Sale 
                decimal sale_invno = _context.Database.SqlQuery<decimal>("select qty from Order_detail Inner Join Order_Master on Order_detail.OrderID = Order_Master.OrderID where prid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string sale_cusname = _context.Database.SqlQuery<string>("select custname from Order_detail Inner Join Order_Master on Order_detail.OrderID = Order_Master.OrderID where prid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Sale Invoice No # " + sale_invno + " From: " + sale_cusname;
                List<decimal> sale = _context.Database.SqlQuery<decimal>("select qty from Order_detail Inner Join Order_Master on Order_detail.OrderID = Order_Master.OrderID where prid=" + itemname + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(sale, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                //Tax Simple Sale 

                //decimal saletax_invno = _context.Database.SqlQuery<decimal>("select srsdetail.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status not in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                //string saletax_cusname = _context.Database.SqlQuery<string>("select custname from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status not in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                //description = "Sale Return Invoice No # " + saletax_invno + " From: " + saletax_cusname;
                //List<decimal> saletax = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status not in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                //opening = ItemLedgerInsert(saletax, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                decimal saletax_invno = _context.Database.SqlQuery<decimal>("select srsdetail.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status not in ('SRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string saletax_cusname = _context.Database.SqlQuery<string>("select custname from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status not in ('SRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Sale Return Invoice No # " + saletax_invno + " From: " + saletax_cusname;
                List<decimal> saletax = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status not in ('SRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(saletax, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                decimal saletax_invno1 = _context.Database.SqlQuery<decimal>("select srsdetail.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status not in ('TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string saletax_cusname1 = _context.Database.SqlQuery<string>("select custname from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status not in ('TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Sale Return Invoice No # " + saletax_invno1 + " From: " + saletax_cusname1;
                List<decimal> saletax1 = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status not in ('TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(saletax1, day, Convert.ToDecimal(Request["item"]), description, opening, false);

                //Sale Return 
                //decimal salereturn_invno = _context.Database.SqlQuery<decimal>("select srsdetail.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                //string salereturn_cusname = _context.Database.SqlQuery<string>("select custname from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                //description = "Tax Sale Invoice No # " + salereturn_invno + " From: " + salereturn_cusname;
                //List<decimal> salereturn = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                //opening = ItemLedgerInsert(salereturn, day, Convert.ToDecimal(Request["item"]), description, opening, true);

                decimal salereturn_invno = _context.Database.SqlQuery<decimal>("select srsdetail.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string salereturn_cusname = _context.Database.SqlQuery<string>("select custname from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Tax Sale Invoice No # " + salereturn_invno + " From: " + salereturn_cusname;
                List<decimal> salereturn = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(salereturn, day, Convert.ToDecimal(Request["item"]), description, opening, true);

                decimal salereturn_invno1 = _context.Database.SqlQuery<decimal>("select srsdetail.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                string salereturn_cusname1 = _context.Database.SqlQuery<string>("select custname from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Tax Sale Invoice No # " + salereturn_invno1 + " From: " + salereturn_cusname1;
                List<decimal> salereturn1 = _context.Database.SqlQuery<decimal>("select qty from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.Status in ('SRINV','TSRINV') and prid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(salereturn1, day, Convert.ToDecimal(Request["item"]), description, opening, true);



                //Demage
                decimal invno = _context.Database.SqlQuery<decimal>("select top(1) invid from sampledetail where pid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                description = "Demage Invoice No # " + invno;
                List<decimal> demageqty = _context.Database.SqlQuery<decimal>("select qty from sampledetail where pid=" + itemname + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").ToList();
                opening = ItemLedgerInsert(demageqty, day, Convert.ToDecimal(Request["item"]), description, opening, false);
            }
            var item_ledger = _context.Database.SqlQuery<ItemLedger_Raw>("select Date, Description, StockIn, StockOut from ItemLedger_Raw").ToList();
            //var item_ledger = _context.Database.SqlQuery<ItemLedger_Raw>("select Date, Description, StockIn, StockOut from ItemLedger_Raw GROUP BY Date, Description, StockIn, StockOut").ToList();
            ViewBag.StartDate = Convert.ToDateTime(StartDate).ToString("yyyy-MM-dd");
            ViewBag.EndDate = Convert.ToDateTime(Enddate).ToString("yyyy-MM-dd");
            ViewBag.op = opening1;
            ViewBag.itemname = item_name;
            return View(item_ledger);
        }

        public decimal ItemLedgerInsert(List<decimal> lstQTY, DateTime day, decimal itemid, string description, decimal opening, bool isDr)
        {
            foreach (Decimal itmqty in lstQTY)
            {
                if (isDr)
                {
                    opening = opening + itmqty;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_Raw (ItemId,Date,Description,StockIn,StockOut,balance) VALUES (" + itemid + ",'" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + itmqty + ",0," + opening + ")");
                }
                else
                {
                    opening = opening - itmqty;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_Raw (ItemId,Date,Description,StockIn,StockOut,balance) VALUES (" + itemid + ",'" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0," + itmqty + "," + opening + ")");
                }
            }
            return opening;
        }
        public decimal ItemLedgerInsert1(List<decimal> lstQTY,List<decimal> pur_invid1, List<string> pur_supname1, DateTime day, decimal itemid, decimal opening, bool isDr)
        {
            for (int i = 0; i < lstQTY.Count; i++)
            {
                var description = "Purchase Invoice No # " + pur_invid1[i] + " From: " + pur_supname1[i];

                if (isDr)
                {
                    opening = opening + lstQTY[i];
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_Raw (ItemId,Date,Description,StockIn,StockOut,balance) VALUES (" + itemid + ",'" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + lstQTY[i] + ",0," + opening + ")");
                }
                else
                {
                    opening = opening - lstQTY[i];
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_Raw (ItemId,Date,Description,StockIn,StockOut,balance) VALUES (" + itemid + ",'" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0," + lstQTY[i] + "," + opening + ")");
                }
            }
            return opening;
        }

        public void FinishedItemLedgerType(string RawReport, string itemsize, string item, string s_date, string e_date)
        {
            if (RawReport == "PReport")
                PackingItemLedgerSearch(itemsize, item, s_date, e_date);
            else
                FinishedItemLedger(itemsize, item, s_date, e_date);
        }
        public void creatDayList(List<DateTime> dates)
        {
            foreach (DateTime day in dates)
                daylist.Add(day);
        }
        public ActionResult PackingItemLedgerSearch(string itemsize, string item, string s1_date, string e1_date)
        {
            string s_date = s1_date;
            string e_date = e1_date;
            decimal Opening_Dubbi = 0;
            decimal Opening_Quarter = 0;
            decimal Opening_Gallon = 0;
            decimal Opening_Drum = 0;
            _context.Database.ExecuteSqlCommand("truncate table ItemLedger_finished");
            var StartDate = Convert.ToDateTime(s_date);
            var Enddate = Convert.ToDateTime(e_date);
            
            //Opening Stock
            string partialquer = "SELECT ISNULL(MAX(Product.vattax), 0) AS Expr1 FROM Product INNER JOIN ProductExtend ON Product.ProductID = ProductExtend.ProductID WHERE (Product.ProductID = " + item + ")";
            string item_name = _context.Database.SqlQuery<string>("select ProductName from Product where ProductID=" + item).FirstOrDefault();
            decimal OpeningDubbi = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            decimal OpeningQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            decimal OpeningGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            decimal OpeningDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

            //Purchase Stock
            partialquer = "SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN ProductExtend ON purchasedetail.pid = ProductExtend.ProductID INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (purchasedetail.pid = " + item + ") AND (purchasem.date < '" + StartDate.ToString("yyyy-MM-dd") + "') ";
            OpeningDubbi = OpeningDubbi + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            OpeningQuarter = OpeningQuarter + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            OpeningGallon = OpeningGallon + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            OpeningDrum = OpeningDrum + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

            //Stock Distribution
            partialquer = "SELECT ISNULL(SUM(d.qty), 0) AS qty FROM StockDistributionDetail AS d INNER JOIN StockDistribution AS m ON d.invid = m.invid INNER JOIN ProductExtend ON d.pid = ProductExtend.ProductID  WHERE(d.pid = " + item + ") AND(m.date < '" + StartDate.ToString("yyyy-MM-dd") + "')";
            OpeningDubbi = OpeningDubbi + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            OpeningQuarter = OpeningQuarter + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            OpeningGallon = OpeningGallon + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            OpeningDrum = OpeningDrum + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

            //Purchase Return Stock
            partialquer = "SELECT ISNULL(SUM(srpdetail.qty), 0) AS Expr1 FROM srpdetail INNER JOIN srpm ON srpdetail.invid = srpm.invid INNER JOIN ProductExtend ON srpdetail.pid = ProductExtend.ProductID WHERE (srpdetail.pid = " + item + ") AND (srpm.date < '" + StartDate.ToString("yyyy-MM-dd") + "')";
            OpeningDubbi = OpeningDubbi - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            OpeningQuarter = OpeningQuarter - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            OpeningGallon = OpeningGallon - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            OpeningDrum = OpeningDrum - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

            //Sale Stock
            partialquer = "SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID INNER JOIN ProductExtend ON Order_detail.prid = ProductExtend.ProductID WHERE (Order_detail.prid = " + item + ") AND (Order_Master.date < '" + StartDate.ToString("yyyy-MM-dd") + "') ";
            OpeningDubbi = OpeningDubbi - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            OpeningQuarter = OpeningQuarter - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            OpeningGallon = OpeningGallon - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            OpeningDrum = OpeningDrum - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

            //Sale Return Stock
            partialquer = "SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID INNER JOIN ProductExtend ON srsdetail.prid = ProductExtend.ProductID WHERE (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = " + item + ") AND (srsm.date < '" + StartDate.ToString("yyyy-MM-dd") + "')";
            OpeningDubbi = OpeningDubbi + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            OpeningQuarter = OpeningQuarter + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            OpeningGallon = OpeningGallon + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            OpeningDrum = OpeningDrum + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

            //Stock Used In Filling
            partialquer = "SELECT ISNULL(SUM(tbl_BatchFillingDetail.qty), 0) AS Expr1 FROM tbl_BatchFillingDetail INNER JOIN ProductExtend ON tbl_BatchFillingDetail.ItemId = ProductExtend.ProductID WHERE (tbl_BatchFillingDetail.ItemId = " + item + ") AND (tbl_BatchFillingDetail.Date < '" + StartDate.ToString("yyyy-MM-dd") + "')";
            OpeningDubbi = OpeningDubbi - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            OpeningQuarter = OpeningQuarter - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            OpeningGallon = OpeningGallon - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            OpeningDrum = OpeningDrum - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

            //Stock Used In Wastage & Demage
            partialquer = "SELECT ISNULL(SUM(sampledetail.qty), 0) AS Expr1 FROM sampledetail INNER JOIN ProductExtend ON sampledetail.pid = ProductExtend.ProductID WHERE (sampledetail.pid = " + item + ") AND (sampledetail.date < '" + StartDate.ToString("yyyy-MM-dd") + "')";
            OpeningDubbi = OpeningDubbi - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            OpeningQuarter = OpeningQuarter - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            OpeningGallon = OpeningGallon - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            OpeningDrum = OpeningDrum - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

            partialquer = "SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN ProductExtend ON sampledetail2.pid = ProductExtend.ProductID WHERE (sampledetail2.pid = " + item + ") AND (sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "')";
            OpeningDubbi = OpeningDubbi - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            OpeningQuarter = OpeningQuarter - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            OpeningGallon = OpeningGallon - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            OpeningDrum = OpeningDrum - _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();
            
            
            //Stock Distribution add
            //partialquer = "SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM StockDistibution INNER JOIN ProductExtend ON sampledetail2.pid = ProductExtend.ProductID WHERE (sampledetail2.pid = " + item + ") AND (sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "')";
            partialquer = "SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN ProductExtend ON sdd1.pid = ProductExtend.ProductID WHERE (sdd1.pid = " + item + ") AND (sdd1.date < '" + StartDate.ToString("yyyy-MM-dd") + "')";
            OpeningDubbi = OpeningDubbi + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
            OpeningQuarter = OpeningQuarter + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
            OpeningGallon = OpeningGallon + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
            OpeningDrum = OpeningDrum + _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

            Opening_Dubbi = OpeningDubbi;
            Opening_Quarter = OpeningQuarter;
            Opening_Gallon = OpeningGallon;
            Opening_Drum = OpeningDrum;

            daylist.Clear();
            creatDayList(_context.Database.SqlQuery<DateTime>("SELECT purchasem.date FROM purchasem INNER JOIN purchasedetail ON purchasem.invid = purchasedetail.invid WHERE (purchasem.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (purchasedetail.pid = " + item + ") GROUP BY purchasem.date").ToList());
            creatDayList(_context.Database.SqlQuery<DateTime>("SELECT Order_Master.date FROM Order_Master INNER JOIN Order_detail ON Order_Master.OrderID = Order_detail.OrderID WHERE (Order_Master.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (Order_detail.prid = " + item + ") GROUP BY Order_Master.date").ToList());
            creatDayList(_context.Database.SqlQuery<DateTime>("SELECT srsm.date FROM srsm INNER JOIN srsdetail ON srsm.OrderID = srsdetail.OrderID WHERE (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsm.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srsdetail.prid = " + item + ") GROUP BY srsm.date").ToList());
            creatDayList(_context.Database.SqlQuery<DateTime>("SELECT srpm.date FROM srpm INNER JOIN srpdetail ON srpm.invid = srpdetail.invid WHERE (srpm.date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (srpdetail.pid = " + item + ") GROUP BY srpm.date").ToList());
            creatDayList(_context.Database.SqlQuery<DateTime>("SELECT date FROM tbl_BatchFillingDetail WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (ItemId = " + item + ") GROUP BY date").ToList());
            creatDayList(_context.Database.SqlQuery<DateTime>("SELECT date FROM sampledetail WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (pid = " + item + ") GROUP BY date").ToList());
            creatDayList(_context.Database.SqlQuery<DateTime>("SELECT date FROM sampledetail2 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (pid = " + item + ") GROUP BY date").ToList());
            creatDayList(_context.Database.SqlQuery<DateTime>("SELECT date FROM stockdistributiondetail1 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (pid = " + item + ") GROUP BY date").ToList());

            //foreach (DateTime day in EachDay(StartDate, Enddate))
                foreach (DateTime day in daylist.Distinct().OrderBy(x=>x.Date))
                {
                    string description = "";
                decimal processDubbi = 0;
                decimal processQuarter = 0;
                decimal processGallon = 0;
                decimal processDrum = 0;

                //Purchase
                decimal[] batchserial = _context.Database.SqlQuery<decimal>("SELECT purchasedetail.invid FROM purchasedetail INNER JOIN ProductExtend ON purchasedetail.pid = ProductExtend.ProductID INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE (LEN(ProductExtend.ProductType) > 2) AND (purchasedetail.pid = " + item + ") AND (purchasem.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY purchasedetail.invid ORDER BY purchasedetail.invid").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    partialquer = "SELECT ISNULL(SUM(purchasedetail.qty), 0) AS Expr1 FROM purchasedetail INNER JOIN ProductExtend ON purchasedetail.pid = ProductExtend.ProductID INNER JOIN purchasem ON purchasedetail.invid = purchasem.invid WHERE purchasem.invid =" + batchserial[i] + " and (purchasedetail.pid = " + item + ") ";
                    processDubbi =  _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
                    processQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
                    processGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
                    processDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

                    description = "Purchase Inv # " + batchserial[i];
                    OpeningDubbi = OpeningDubbi + processDubbi;
                    OpeningQuarter = OpeningQuarter + processQuarter;
                    OpeningGallon = OpeningGallon + processGallon;
                    OpeningDrum = OpeningDrum + processDrum;

                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description 
                        + "'," + processDubbi + "," + processQuarter + "," + processGallon + "," + processDrum + ",0,0,0,0," 
                        + OpeningDubbi + "," + OpeningQuarter + "," + OpeningGallon + "," + OpeningDrum + ")");
                }

                //Purchase Stock Return
                batchserial = _context.Database.SqlQuery<decimal>("SELECT srpdetail.invid FROM srpdetail INNER JOIN ProductExtend ON srpdetail.pid = ProductExtend.ProductID INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE (LEN(ProductExtend.ProductType) > 2) AND (srpdetail.pid = " + item + ") AND (srpm.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY srpdetail.invid ORDER BY srpdetail.invid").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    partialquer = "SELECT ISNULL(SUM(srpdetail.qty), 0) AS Expr1 FROM srpdetail INNER JOIN ProductExtend ON srpdetail.pid = ProductExtend.ProductID INNER JOIN srpm ON srpdetail.invid = srpm.invid WHERE srpm.invid =" + batchserial[i] + " and (srpdetail.pid = " + item + ")";
                    processDubbi =  _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
                    processQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
                    processGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
                    processDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

                    description = "Purchase Return Inv # " + batchserial[i];
                    OpeningDubbi = OpeningDubbi - processDubbi;
                    OpeningQuarter = OpeningQuarter - processQuarter;
                    OpeningGallon = OpeningGallon - processGallon;
                    OpeningDrum = OpeningDrum - processDrum;

                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description 
                        + "',0,0,0,0," + processDubbi + "," + processQuarter + "," + processGallon + "," + processDrum + "," 
                        + OpeningDubbi + "," + OpeningQuarter + "," + OpeningGallon + "," + OpeningDrum + ")");
                }

                //Sale Stock
                batchserial = _context.Database.SqlQuery<decimal>("SELECT Order_Master.OrderID FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID INNER JOIN ProductExtend ON Order_detail.prid = ProductExtend.ProductID WHERE (Order_detail.prid = " + item + ") AND (Order_Master.date = '" + day.Date.ToString("yyyy-MM-dd") + "') AND (LEN(ProductExtend.ProductType) > 2) GROUP BY Order_Master.OrderID ORDER BY Order_Master.OrderID").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    partialquer = "SELECT ISNULL(SUM(Order_detail.qty), 0) AS Expr1 FROM Order_detail INNER JOIN Order_Master ON Order_detail.OrderID = Order_Master.OrderID INNER JOIN ProductExtend ON Order_detail.prid = ProductExtend.ProductID WHERE (Order_detail.prid = " + item + ") AND (Order_detail.OrderID = " + batchserial[i] + ") ";
                    processDubbi =  _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
                    processQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
                    processGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
                    processDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

                    description = "Sale Inv # " + batchserial[i];
                    OpeningDubbi = OpeningDubbi - processDubbi;
                    OpeningQuarter = OpeningQuarter - processQuarter;
                    OpeningGallon = OpeningGallon - processGallon;
                    OpeningDrum = OpeningDrum - processDrum;

                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description 
                        + "',0,0,0,0," + processDubbi + "," + processQuarter + "," + processGallon + "," + processDrum + "," 
                        + OpeningDubbi + "," + OpeningQuarter + "," + OpeningGallon + "," + OpeningDrum + ")");
                }

                //Sale Return Stock
                batchserial = _context.Database.SqlQuery<decimal>("SELECT srsm.OrderID FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID INNER JOIN ProductExtend ON srsdetail.prid = ProductExtend.ProductID WHERE (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = " + item + ") AND (srsm.date = '" + day.Date.ToString("yyyy-MM-dd") + "') AND (LEN(ProductExtend.ProductType) > 2) GROUP BY srsm.OrderID ORDER BY srsm.OrderID").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    partialquer = "SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID INNER JOIN ProductExtend ON srsdetail.prid = ProductExtend.ProductID WHERE (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = " + item + ") AND (srsdetail.OrderID =" + batchserial[i] + ")";
                    processDubbi =  _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
                    processQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
                    processGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
                    processDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

                    description = "Sale Return Inv # " + batchserial[i];
                    OpeningDubbi = OpeningDubbi + processDubbi;
                    OpeningQuarter = OpeningQuarter + processQuarter;
                    OpeningGallon = OpeningGallon + processGallon;
                    OpeningDrum = OpeningDrum + processDrum;

                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description 
                        + "'," + processDubbi + "," + processQuarter + "," + processGallon + "," + processDrum + ",0,0,0,0,"
                        + OpeningDubbi + "," + OpeningQuarter + "," + OpeningGallon + "," + OpeningDrum + ")");
                }
                
                
                
                //Stock Distribution
                batchserial = _context.Database.SqlQuery<decimal>("SELECT sd.Invid FROM StockDistributionDetail1 sdd INNER JOIN StockDistribution sd ON sdd.invid = sd.invid INNER JOIN ProductExtend ON sdd.pid = ProductExtend.ProductID WHERE (sdd.pid = " + item + ") AND (sd.date = '" + day.Date.ToString("yyyy-MM-dd") + "') AND (LEN(ProductExtend.ProductType) > 2) GROUP BY sd.invid ORDER BY sd.invid").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    partialquer = "SELECT ISNULL(SUM(sdd1.qty), 0)  AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid INNER JOIN ProductExtend ON sdd1.pid = ProductExtend.ProductID WHERE (sdd1.pid = " + item + ") AND (sdd1.invid =" + batchserial[i] + ")";
                    //partialquer = "SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail                        INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID INNER JOIN ProductExtend ON srsdetail.prid = ProductExtend.ProductID WHERE  (srsdetail.prid = " + item + ") AND (srsdetail.OrderID =" + batchserial[i] + ")";
                    processDubbi =  _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
                    processQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
                    processGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
                    processDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

                    description = "Stock Distribution Sr # " + batchserial[i];
                    OpeningDubbi = OpeningDubbi + processDubbi;
                    OpeningQuarter = OpeningQuarter + processQuarter;
                    OpeningGallon = OpeningGallon + processGallon;
                    OpeningDrum = OpeningDrum + processDrum;

                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description 
                        + "'," + processDubbi + "," + processQuarter + "," + processGallon + "," + processDrum + ",0,0,0,0,"
                        + OpeningDubbi + "," + OpeningQuarter + "," + OpeningGallon + "," + OpeningDrum + ")");
                }
                
                //Stock Distribution
                batchserial = _context.Database.SqlQuery<decimal>("SELECT sd.Invid FROM StockDistributionDetail sdd INNER JOIN StockDistribution sd ON sdd.invid = sd.invid INNER JOIN ProductExtend ON sdd.pid = ProductExtend.ProductID WHERE (sdd.pid = " + item + ") AND (sd.date = '" + day.Date.ToString("yyyy-MM-dd") + "') AND (LEN(ProductExtend.ProductType) > 2) GROUP BY sd.invid ORDER BY sd.invid").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    partialquer = "SELECT ISNULL(SUM(sdd1.qty), 0)  AS Expr1 FROM StockDistributionDetail AS sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid INNER JOIN ProductExtend ON sdd1.pid = ProductExtend.ProductID WHERE (sdd1.pid = " + item + ") AND (sdd1.invid =" + batchserial[i] + ")";
                    //partialquer = "SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail                        INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID INNER JOIN ProductExtend ON srsdetail.prid = ProductExtend.ProductID WHERE  (srsdetail.prid = " + item + ") AND (srsdetail.OrderID =" + batchserial[i] + ")";
                    processDubbi =  _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
                    processQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
                    processGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
                    processDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

                    description = "Stock Distribution Sr # " + batchserial[i];
                    OpeningDubbi = OpeningDubbi + processDubbi;
                    OpeningQuarter = OpeningQuarter + processQuarter;
                    OpeningGallon = OpeningGallon + processGallon;
                    OpeningDrum = OpeningDrum + processDrum;

                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description 
                        + "'," + processDubbi + "," + processQuarter + "," + processGallon + "," + processDrum + ",0,0,0,0,"
                        + OpeningDubbi + "," + OpeningQuarter + "," + OpeningGallon + "," + OpeningDrum + ")");
                }


                //Stock Used In Filling
                batchserial = _context.Database.SqlQuery<decimal>("SELECT tbl_BatchFillingDetail.sr FROM tbl_BatchFillingDetail INNER JOIN ProductExtend ON tbl_BatchFillingDetail.ItemId = ProductExtend.ProductID WHERE (tbl_BatchFillingDetail.ItemId = " + item + ") AND (tbl_BatchFillingDetail.Date = '" + day.ToString("yyyy-MM-dd") + "') AND (LEN(ProductExtend.ProductType) > 2) GROUP BY tbl_BatchFillingDetail.sr ORDER BY tbl_BatchFillingDetail.sr").ToArray();
                for(int i=0;i<batchserial.Count();i++)
                {
                    partialquer = "SELECT ISNULL(SUM(tbl_BatchFillingDetail.qty), 0) AS Expr1 FROM tbl_BatchFillingDetail INNER JOIN ProductExtend ON tbl_BatchFillingDetail.ItemId = ProductExtend.ProductID WHERE (tbl_BatchFillingDetail.ItemId = " + item + ") AND (tbl_BatchFillingDetail.sr =" + batchserial[i] + ")";
                    processDubbi = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
                    processQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
                    processGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
                    processDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

                    string invid = _context.Database.SqlQuery<string>("select top(1) batchn from tbl_BatchFillingBatches  where Sr=" + batchserial[i]).FirstOrDefault();
                    description = "Batch Filling # " + invid;
                    OpeningDubbi = OpeningDubbi - processDubbi;
                    OpeningQuarter = OpeningQuarter - processQuarter;
                    OpeningGallon = OpeningGallon - processGallon;
                    OpeningDrum = OpeningDrum - processDrum;

                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description
                        + "',0,0,0,0," + processDubbi + "," + processQuarter + "," + processGallon + "," + processDrum + ","
                        + OpeningDubbi + "," + OpeningQuarter + "," + OpeningGallon + "," + OpeningDrum + ")");
                }

                //Stock In wastage and demage
                batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail.invid FROM sampledetail INNER JOIN ProductExtend ON sampledetail.pid = ProductExtend.ProductID WHERE (LEN(ProductExtend.ProductType) > 2) AND (sampledetail.pid = " + item + ") AND (sampledetail.date = '" + day.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail.invid ORDER BY sampledetail.invid").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    partialquer = "SELECT ISNULL(SUM(sampledetail.qty), 0) AS Expr1 FROM sampledetail INNER JOIN ProductExtend ON sampledetail.pid = ProductExtend.ProductID WHERE (sampledetail.pid = " + item + ") AND (sampledetail.invid =" + batchserial[i] + ")";
                    processDubbi = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
                    processQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
                    processGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
                    processDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

                    description = "Wastage Inv # " + batchserial[i];
                    OpeningDubbi = OpeningDubbi - processDubbi;
                    OpeningQuarter = OpeningQuarter - processQuarter;
                    OpeningGallon = OpeningGallon - processGallon;
                    OpeningDrum = OpeningDrum - processDrum;

                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description
                        + "',0,0,0,0," + processDubbi + "," + processQuarter + "," + processGallon + "," + processDrum + ","
                        + OpeningDubbi + "," + OpeningQuarter + "," + OpeningGallon + "," + OpeningDrum + ")");
                }

                batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM sampledetail2 INNER JOIN ProductExtend ON sampledetail2.pid = ProductExtend.ProductID WHERE (LEN(ProductExtend.ProductType) > 2) AND (sampledetail2.pid = " + item + ") AND (sampledetail2.date = '" + day.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid ORDER BY sampledetail2.invid").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    partialquer = "SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN ProductExtend ON sampledetail2.pid = ProductExtend.ProductID WHERE (sampledetail2.pid = " + item + ") AND (sampledetail2.invid =" + batchserial[i] + ")";
                    processDubbi = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Dubbi')").FirstOrDefault();
                    processQuarter = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Quarter')").FirstOrDefault();
                    processGallon = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Gallon')").FirstOrDefault();
                    processDrum = _context.Database.SqlQuery<decimal>(partialquer + " AND (ProductExtend.ProductType = 'Drum')").FirstOrDefault();

                    description = "Wastage Inv # " + batchserial[i];
                    OpeningDubbi = OpeningDubbi - processDubbi;
                    OpeningQuarter = OpeningQuarter - processQuarter;
                    OpeningGallon = OpeningGallon - processGallon;
                    OpeningDrum = OpeningDrum - processDrum;

                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description
                        + "',0,0,0,0," + processDubbi + "," + processQuarter + "," + processGallon + "," + processDrum + ","
                        + OpeningDubbi + "," + OpeningQuarter + "," + OpeningGallon + "," + OpeningDrum + ")");
                }
            }

            string strqry = "";

            if (itemsize == "1")
                strqry = "select ID, Date, Description, DabbiIN, DabbiOUT, DabbiBAL from ItemLedger_finished where DabbiIN!=0 OR DabbiOUT!=0";
            if (itemsize == "2")
                strqry = "select ID, Date, Description, QuarterIN as DabbiIN, QuarterOUT as DabbiOUT, QuarterBAL as DabbiBAL from ItemLedger_finished where QuarterIN!=0 OR QuarterOUT!=0";
            if (itemsize == "3")
                strqry = "select ID, Date, Description, GallonIN as DabbiIN, GallonOUT as DabbiOUT, GallonBAL as DabbiBAL from ItemLedger_finished where GallonIN!=0 OR GallonOUT!=0";
            if (itemsize == "4")
                strqry = "select ID, Date, Description, DrumIN as DabbiIN, DrumOUT as DabbiOUT, DrumBAL as DabbiBAL from ItemLedger_finished where DrumIN!=0 OR DrumOUT!=0";

            var item_ledger = _context.Database.SqlQuery<ItemLedger_finished>(strqry).ToList();
            ViewBag.StartDate = Convert.ToDateTime(s_date).ToString("yyyy-MM-dd");
            ViewBag.EndDate = Convert.ToDateTime(e_date).ToString("yyyy-MM-dd");

            if (itemsize == "1")
                ViewBag.OpeningDubbi = Opening_Dubbi;
            if (itemsize == "2")
                ViewBag.OpeningDubbi = Opening_Quarter;
            if (itemsize == "3")
                ViewBag.OpeningDubbi = Opening_Gallon;
            if (itemsize == "4")
                ViewBag.OpeningDubbi = Opening_Drum;

            if (itemsize == "1")
                ViewBag.itemname = item_name + " (Dubbi)";
            if (itemsize == "2")
                ViewBag.itemname = item_name + " (Quarter)";
            if (itemsize == "3")
                ViewBag.itemname = item_name + " (Gallon)";
            if (itemsize == "4")
                ViewBag.itemname = item_name + " (Drum)";

            return View(item_ledger);
        }

        public void FinishedItemLedger(string itemsize, string item, string s_date, string e_date)
        {
            _context.Database.ExecuteSqlCommand("truncate table ItemLedger_finished");
            var StartDate = Convert.ToDateTime(Request["s_date"]);
            var Enddate = Convert.ToDateTime(Request["e_date"]);

            string item_name = _context.Database.SqlQuery<string>("select ProductName from Product where ProductID=" + item).FirstOrDefault();
            decimal OpeningDubbi = _context.Database.SqlQuery<decimal>("select OpeningDubbi from Product where ProductID=" + item).FirstOrDefault();
            decimal OpeningQuarter = _context.Database.SqlQuery<decimal>("select OpeningQuarter from Product where ProductID=" + item).FirstOrDefault();
            decimal OpeningGallon = _context.Database.SqlQuery<decimal>("select OpeningGallon from Product where ProductID=" + item).FirstOrDefault();
            decimal OpeningDrum = _context.Database.SqlQuery<decimal>("select OpeningDrum from Product where ProductID=" + item).FirstOrDefault();

            decimal FilledDubbiQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDubbiQTY),0) from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where ProductID=" + item + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal FilledQuarterQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledQuarterQTY),0) from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where ProductID=" + item + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal FilledGallonQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledGallonQTY),0) from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where ProductID=" + item + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal FilledDrumQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDrumQTY),0) from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where ProductID=" + item + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

            decimal opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where packing='Dubbi' and Status='TSINV' and prid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where packing='Quarter' and Status='TSINV' and prid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where packing='Gallon' and Status='TSINV' and prid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where packing='Drum' and Status='TSINV' and prid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            
            opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where packing='Dubbi' and Status<>'TSINV' and prid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where packing='Quarter' and Status<>'TSINV' and prid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where packing='Gallon' and Status<>'TSINV' and prid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where packing='Drum' and Status<>'TSINV' and prid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                
            opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Dubbi' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2  where packing='Quarter' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Gallon' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Drum' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                
            decimal openingDubbi = OpeningDubbi + FilledDubbiQTY - opening_saletaxDubbi ;
            decimal openingQuarter = OpeningQuarter + FilledQuarterQTY - opening_saletaxQuarter ;
            decimal openingGallon = OpeningGallon + FilledGallonQTY  - opening_saletaxGallon;
            decimal openingDrum = OpeningDrum + FilledDrumQTY -  opening_saletaxDrum;

            decimal opening_Dubbi = openingDubbi;
            decimal opening_Quarter = openingQuarter;
            decimal opening_Gallon = openingGallon;
            decimal opening_Drum = openingDrum;

            foreach (DateTime day in EachDay(StartDate, Enddate))
            {
                string description = "";
                decimal FilledDubbi = 0;
                decimal FilledQuarter =0;
                decimal FilledGallon = 0;
                decimal FilledDrum = 0;

                decimal[] batchserial = _context.Database.SqlQuery<decimal>("select tbl_BatchFillingMaster.Id from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where ProductID=" + item + " and Fillingdate = '" + day.Date.ToString("yyyy-MM-dd") + "' Group by tbl_BatchFillingMaster.Id").ToArray();
                for(int i=0;i<batchserial.Count();i++)
                {
                    FilledDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDubbiQTY),0) from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where tbl_BatchFillingMaster.Id=" + batchserial[i] + " and ProductID=" + item + " and Fillingdate = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    FilledQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledQuarterQTY),0) from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where tbl_BatchFillingMaster.Id=" + batchserial[i] + " and ProductID=" + item + " and Fillingdate = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    FilledGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledGallonQTY),0) from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where tbl_BatchFillingMaster.Id=" + batchserial[i] + " and ProductID=" + item + " and Fillingdate = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    FilledDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDrumQTY),0) from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where tbl_BatchFillingMaster.Id=" + batchserial[i] + " and ProductID=" + item + " and Fillingdate = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

                    string invid = _context.Database.SqlQuery<string>("select top(1) batchn from tbl_BatchFillingBatches  where Sr=" + batchserial[i] + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    description = "Batch Filling # " + invid;
                    openingDubbi = openingDubbi + FilledDubbi;
                    openingQuarter = openingQuarter + FilledQuarter;
                    openingGallon = openingGallon + FilledGallon;
                    openingDrum = openingDrum + FilledDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + FilledDubbi + "," + FilledQuarter + "," + FilledGallon + "," + FilledDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }

                batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsm.title ='TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.OrderID=" + batchserial[i] + " and packing='Dubbi' and Status='TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.OrderID=" + batchserial[i] + " and packing='Quarter' and Status='TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.OrderID=" + batchserial[i] + " and packing='Gallon' and Status='TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.OrderID=" + batchserial[i] + " and packing='Drum' and Status='TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    description = "Sale Inv # " + batchserial[i];
                    openingDubbi = openingDubbi - opening_saletaxDubbi;
                    openingQuarter = openingQuarter - opening_saletaxQuarter;
                    openingGallon = openingGallon - opening_saletaxGallon;
                    openingDrum = openingDrum - opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }

                batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Wastage') AND (sampledetail2.pid = " + item + ") and (sampledetail2.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(sampledetail2.qty),0) FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Wastage') and packing='Dubbi' AND (sampledetail2.pid = " + item + ") AND (sampledetail2.invid = '" + batchserial[i] + "')").FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(sampledetail2.qty),0) FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Wastage') and packing='Quarter' AND (sampledetail2.pid = " + item + ") AND (sampledetail2.invid = '" + batchserial[i] + "')").FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(sampledetail2.qty),0) FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Wastage') and packing='Gallon' AND (sampledetail2.pid = " + item + ") AND (sampledetail2.invid = '" + batchserial[i] + "')").FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(sampledetail2.qty),0) FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Wastage') and packing='Drum' AND (sampledetail2.pid = " + item + ") AND (sampledetail2.invid = '" + batchserial[i] + "')").FirstOrDefault();
                    description = "Wastage Inv # " + batchserial[i];
                    openingDubbi = openingDubbi - opening_saletaxDubbi;
                    openingQuarter = openingQuarter - opening_saletaxQuarter;
                    openingGallon = openingGallon - opening_saletaxGallon;
                    openingDrum = openingDrum - opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }

                batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Damage') AND (sampledetail2.pid = " + item + ") and (sampledetail2.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {
                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(sampledetail2.qty),0) FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Damage') and packing='Dubbi' AND (sampledetail2.pid = " + item + ") AND (sampledetail2.invid = '" + batchserial[i] + "')").FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(sampledetail2.qty),0) FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Damage') and packing='Quarter' AND (sampledetail2.pid = " + item + ") AND (sampledetail2.invid = '" + batchserial[i] + "')").FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(sampledetail2.qty),0) FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Damage') and packing='Gallon' AND (sampledetail2.pid = " + item + ") AND (sampledetail2.invid = '" + batchserial[i] + "')").FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(sampledetail2.qty),0) FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Damage') and packing='Drum' AND (sampledetail2.pid = " + item + ") AND (sampledetail2.invid = '" + batchserial[i] + "')").FirstOrDefault();
                    description = "Damage Inv # " + batchserial[i];
                    openingDubbi = openingDubbi - opening_saletaxDubbi;
                    openingQuarter = openingQuarter - opening_saletaxQuarter;
                    openingGallon = openingGallon - opening_saletaxGallon;
                    openingDrum = openingDrum - opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }

                batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where Status<>'TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
                for (int i = 0; i < batchserial.Count(); i++)
                {

                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.OrderID=" + batchserial[i] + " and packing='Dubbi' and Status<>'TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.OrderID=" + batchserial[i] + " and packing='Quarter' and Status<>'TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.OrderID=" + batchserial[i] + " and packing='Gallon' and Status<>'TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsdetail.OrderID=" + batchserial[i] + " and packing='Drum' and Status<>'TSINV' and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
                    description = "Sale Resturn Inv # " + batchserial[i];
                    openingDubbi = openingDubbi + opening_saletaxDubbi;
                    openingQuarter = openingQuarter + opening_saletaxQuarter;
                    openingGallon = openingGallon + opening_saletaxGallon;
                    openingDrum = openingDrum + opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }

            }
        }
        public ActionResult FinalReport(string itemsize, string item, string itemname, string s_date, string e_date,
            decimal dubbi, decimal quarter, decimal gallon, decimal drum)
        {
            string strqry = "";

            if (itemsize == "1")
                strqry = "select ID, Date, Description, DabbiIN, DabbiOUT, DabbiBAL from ItemLedger_finished where DabbiIN!=0 OR DabbiOUT!=0";
            if (itemsize == "2")
                strqry = "select ID, Date, Description, QuarterIN as DabbiIN, QuarterOUT as DabbiOUT, QuarterBAL as DabbiBAL from ItemLedger_finished where QuarterIN!=0 OR QuarterOUT!=0";
            if (itemsize == "3")
                strqry = "select ID, Date, Description, GallonIN as DabbiIN, GallonOUT as DabbiOUT, GallonBAL as DabbiBAL from ItemLedger_finished where GallonIN!=0 OR GallonOUT!=0";
            if (itemsize == "4")
                strqry = "select ID, Date, Description, DrumIN as DabbiIN, DrumOUT as DabbiOUT, DrumBAL as DabbiBAL from ItemLedger_finished where DrumIN!=0 OR DrumOUT!=0";

            var item_ledger = _context.Database.SqlQuery<ItemLedger_finished>(strqry).ToList();
            ViewBag.StartDate = Convert.ToDateTime(s_date).ToString("yyyy-MM-dd");
            ViewBag.EndDate = Convert.ToDateTime(e_date).ToString("yyyy-MM-dd");

            if (itemsize == "1")
                ViewBag.OpeningDubbi = dubbi;
            if (itemsize == "2")
                ViewBag.OpeningDubbi = quarter;
            if (itemsize == "3")
                ViewBag.OpeningDubbi = gallon;
            if (itemsize == "4")
                ViewBag.OpeningDubbi = drum;

            if (itemsize == "1")
                ViewBag.itemname = item + " (Dubbi)";
            if (itemsize == "2")
                ViewBag.itemname = item + " (Quarter)";
            if (itemsize == "3")
                ViewBag.itemname = item + " (Gallon)";
            if (itemsize == "4")
                ViewBag.itemname = item + " (Drum)";

            return View(item_ledger);
        }

        public ActionResult FinishedGoodsIndex()
        {
            var list = _context.Database.SqlQuery<Region>("select * from region");
            var Branch = _context.Database.SqlQuery<Branch>("select id,name from Branch").ToList();
            ViewBag.Branch = Branch;
            return View(list);
        }
        public ActionResult FinishedGoodsSearch()
        {
            var StartDate = Convert.ToDateTime(Request["s_date"]);
            var Enddate = Convert.ToDateTime(Request["e_date"]);
            var region = Request["region"];
            var branchid = Request["branch"];
            var region_id = Request["region"];
            var str = "";
            var str_b = "";
            var query = "";
            if (!string.IsNullOrEmpty(region) && !string.IsNullOrEmpty(branchid) )
            {
                str = " AND regionid =" + region;
                str_b = " AND branchid =" + branchid;
                //query = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore + InDubbiBefore - OutDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore + InQuarterBefore - OutQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore + InGallonBefore - OutQuarterBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore + InDrumBefore - OutQuarterBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter + InDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter + InQuarterAfter AS StkInQuarter , BatchFillingGallonAfter + SaleReturnGallonAfter + InGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter + InDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter + OutDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter + OutQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter + OutGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter + OutDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID) AND (regionid =" + region_id + ")) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID) AND (regionid =" + region_id + ")) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID) AND (regionid =" + region_id + ")) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID) AND (regionid =" + region_id + ")) AS OpeningDrum, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Dubbi') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS InDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Dubbi')AND (ToRegion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' )) AS InDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Quarter') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS InQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Quarter') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' )) AS InQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Gallon') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS InGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Gallon') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' )) AS InGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Drum') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS InDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Drum') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' )) AS InDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Dubbi') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS OutDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Dubbi')AND (Fromregion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' )) AS OutDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Quarter') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS OutQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Quarter') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' )) AS OutQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Gallon') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS OutGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Gallon') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' )) AS OutGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Drum') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS OutDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (size = 'Drum') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' )) AS OutDrumAfter, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.RegionId =" + region_id + ") AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId =" + region_id + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.RegionId =" + region_id + ") AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId =" + region_id + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.RegionId =" + region_id + ") AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId =" + region_id + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.RegionId =" + region_id + ") AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId =" + region_id + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.RegionId =" + region_id + ") AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) AND (RegionId =" + region_id + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.RegionId =" + region_id + ") AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) AND (RegionId =" + region_id + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.RegionId =" + region_id + ") AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) AND (RegionId =" + region_id + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.RegionId =" + region_id + ") AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) AND (RegionId =" + region_id + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.RegionId =" + region_id + ") AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId =" + region_id + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.RegionId =" + region_id + ") AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId =" + region_id + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.RegionId =" + region_id + ") AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId =" + region_id + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.RegionId =" + region_id + ") AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId =" + region_id + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (sampledetail2.packing = 'Dubbi') AND (sampledetail2.pid = Product.ProductID) AND (samplem2.regionid =" + region_id + ") AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(sampledetail2_7.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_7 INNER JOIN samplem2 AS samplem2_7 ON sampledetail2_7.invid = samplem2_7.invid WHERE (sampledetail2_7.packing = 'Dubbi') AND (sampledetail2_7.pid = Product.ProductID) AND (samplem2_7.regionid =" + region_id + ") AND (sampledetail2_7.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(sampledetail2_6.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_6 INNER JOIN samplem2 AS samplem2_6 ON sampledetail2_6.invid = samplem2_6.invid WHERE (sampledetail2_6.packing = 'Quarter') AND (sampledetail2_6.pid = Product.ProductID) AND (samplem2_6.regionid =" + region_id + ") AND (sampledetail2_6.date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(sampledetail2_5.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_5 INNER JOIN samplem2 AS samplem2_5 ON sampledetail2_5.invid = samplem2_5.invid WHERE (sampledetail2_5.packing = 'Quarter') AND (sampledetail2_5.pid = Product.ProductID) AND (samplem2_5.regionid =" + region_id + ") AND (sampledetail2_5.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(sampledetail2_4.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 INNER JOIN samplem2 AS samplem2_4 ON sampledetail2_4.invid = samplem2_4.invid WHERE (sampledetail2_4.packing = 'Gallon') AND (sampledetail2_4.pid = Product.ProductID) AND (samplem2_4.regionid =" + region_id + ") AND (sampledetail2_4.date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(sampledetail2_3.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 INNER JOIN samplem2 AS samplem2_3 ON sampledetail2_3.invid = samplem2_3.invid WHERE (sampledetail2_3.packing = 'Gallon') AND (sampledetail2_3.pid = Product.ProductID) AND (samplem2_3.regionid =" + region_id + ") AND (sampledetail2_3.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(sampledetail2_2.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 INNER JOIN samplem2 AS samplem2_2 ON sampledetail2_2.invid = samplem2_2.invid WHERE (sampledetail2_2.packing = 'Drum') AND (sampledetail2_2.pid = Product.ProductID) AND (samplem2_2.regionid =" + region_id + ") AND (sampledetail2_2.date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(sampledetail2_1.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 INNER JOIN samplem2 AS samplem2_1 ON sampledetail2_1.invid = samplem2_1.invid WHERE (sampledetail2_1.packing = 'Drum') AND (sampledetail2_1.pid = Product.ProductID) AND (samplem2_1.regionid =" + region_id + ") AND (sampledetail2_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";
                //Add the stock Distibution1 table in this
                //query = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore + InDubbiBefore - OutDubbiBefore - StockDistDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore + InQuarterBefore - OutQuarterBefore -StockDistQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore + InGallonBefore - OutGallonBefore - StockDistGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore + InDrumBefore - OutDrumBefore -StockDistDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter + InDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter + InQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter + InGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter + InDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter + OutDubbiAfter + StockDistDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter + OutQuarterAfter + StockDistQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter + OutGallonAfter + StockDistGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter + OutDrumAfter + StockDistDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID) AND (regionid =" + region_id + ")) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID) AND (regionid =" + region_id + ")) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID) AND (regionid =" + region_id + ")) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID) AND (regionid =" + region_id + ")) AS OpeningDrum, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Dubbi') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId =" + region_id + ") AND (sd.date < '" + Request["s_date"] + "')) AS StockDistDubbiBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Quarter') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId =" + region_id + ") AND (sd.date < '" + Request["s_date"] + "')) AS StockDistQuarterBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Gallon') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId =" + region_id + ") AND (sd.date < '" + Request["s_date"] + "')) AS StockDistGallonBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Drum') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId =" + region_id + ") AND (sd.date < '" + Request["s_date"] + "')) AS StockDistDrumBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Dubbi') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId =" + region_id + ") AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistDubbiAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Quarter') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId =" + region_id + ") AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistQuarterAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Gallon') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId =" + region_id + ") AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistGallonAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Drum') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId =" + region_id + ") AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Dubbi') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS InDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Dubbi') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Quarter') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS InQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Quarter') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Gallon') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS InGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Gallon') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Drum') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS InDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Drum') AND (ToRegion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Dubbi') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS OutDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Dubbi') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Quarter') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS OutQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Quarter') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Gallon') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS OutGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Gallon') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Drum') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS OutDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = Product.ProductID) AND (SIZE = 'Drum') AND (Fromregion=" + region_id + ") AND (FinishTransferM.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutDrumAfter, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId =" + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.RegionId =" + region_id + ") AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId =" + region_id + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.RegionId =" + region_id + ") AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId =" + region_id + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.RegionId =" + region_id + ") AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId =" + region_id + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.RegionId =" + region_id + ") AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId =" + region_id + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.RegionId =" + region_id + ") AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) AND (RegionId =" + region_id + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.RegionId =" + region_id + ") AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) AND (RegionId =" + region_id + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.RegionId =" + region_id + ") AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) AND (RegionId =" + region_id + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.RegionId =" + region_id + ") AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) AND (RegionId =" + region_id + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.RegionId =" + region_id + ") AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId =" + region_id + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.RegionId =" + region_id + ") AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId =" + region_id + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.RegionId =" + region_id + ") AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId =" + region_id + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.RegionId =" + region_id + ") AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId =" + region_id + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (sampledetail2.packing = 'Dubbi') AND (sampledetail2.pid = Product.ProductID) AND (samplem2.regionid =" + region_id + ") AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(sampledetail2_7.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_7 INNER JOIN samplem2 AS samplem2_7 ON sampledetail2_7.invid = samplem2_7.invid WHERE (sampledetail2_7.packing = 'Dubbi') AND (sampledetail2_7.pid = Product.ProductID) AND (samplem2_7.regionid =" + region_id + ") AND (sampledetail2_7.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(sampledetail2_6.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_6 INNER JOIN samplem2 AS samplem2_6 ON sampledetail2_6.invid = samplem2_6.invid WHERE (sampledetail2_6.packing = 'Quarter') AND (sampledetail2_6.pid = Product.ProductID) AND (samplem2_6.regionid =" + region_id + ") AND (sampledetail2_6.date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(sampledetail2_5.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_5 INNER JOIN samplem2 AS samplem2_5 ON sampledetail2_5.invid = samplem2_5.invid WHERE (sampledetail2_5.packing = 'Quarter') AND (sampledetail2_5.pid = Product.ProductID) AND (samplem2_5.regionid =" + region_id + ") AND (sampledetail2_5.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(sampledetail2_4.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 INNER JOIN samplem2 AS samplem2_4 ON sampledetail2_4.invid = samplem2_4.invid WHERE (sampledetail2_4.packing = 'Gallon') AND (sampledetail2_4.pid = Product.ProductID) AND (samplem2_4.regionid =" + region_id + ") AND (sampledetail2_4.date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(sampledetail2_3.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 INNER JOIN samplem2 AS samplem2_3 ON sampledetail2_3.invid = samplem2_3.invid WHERE (sampledetail2_3.packing = 'Gallon') AND (sampledetail2_3.pid = Product.ProductID) AND (samplem2_3.regionid =" + region_id + ") AND (sampledetail2_3.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(sampledetail2_2.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 INNER JOIN samplem2 AS samplem2_2 ON sampledetail2_2.invid = samplem2_2.invid WHERE (sampledetail2_2.packing = 'Drum') AND (sampledetail2_2.pid = Product.ProductID) AND (samplem2_2.regionid =" + region_id + ") AND (sampledetail2_2.date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(sampledetail2_1.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 INNER JOIN samplem2 AS samplem2_1 ON sampledetail2_1.invid = samplem2_1.invid WHERE (sampledetail2_1.packing = 'Drum') AND (sampledetail2_1.pid = Product.ProductID) AND (samplem2_1.regionid =" + region_id + ") AND (sampledetail2_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";
                //query = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore + InDubbiBefore - OutDubbiBefore + InDubbiBefore1 - OutDubbiBefore1 - StockDistDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore + InQuarterBefore - OutQuarterBefore + InQuarterBefore1 - OutQuarterBefore1 - StockDistQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore + InGallonBefore - OutGallonBefore + InGallonBefore1 - OutGallonBefore1 - StockDistGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore + InDrumBefore - OutDrumBefore + InDrumBefore1 - OutDrumBefore1 - StockDistDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter + InDubbiAfter + InDubbiAfter1 AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter + InQuarterAfter + InQuarterAfter1 AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter + InGallonAfter + InGallonAfter1 AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter + InDrumAfter + InDrumAfter1 AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter + OutDubbiAfter + OutDubbiAfter1 + StockDistDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter + OutQuarterAfter + OutQuarterAfter1 + StockDistQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter + OutGallonAfter + OutGallonAfter1 + StockDistGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter + OutDrumAfter + OutDrumAfter1 + StockDistDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID) AND (regionid = " + region_id + ") AND (branchid = " + branchid + ")) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID) AND (regionid = " + region_id + ") AND (branchid = " + branchid + ")) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID) AND (regionid = " + region_id + ") AND (branchid = " + branchid + ")) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID) AND (regionid = " + region_id + ") AND (branchid = " + branchid + ")) AS OpeningDrum, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN StockDistribution AS sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Dubbi') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId = " + region_id + ") AND (sd.date < '" + Request["s_date"] + "')) AS StockDistDubbiBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN StockDistribution AS sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Quarter') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId = " + region_id + ") AND (sd.date < '" + Request["s_date"] + "')) AS StockDistQuarterBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN StockDistribution AS sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Gallon') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId = " + region_id + ") AND (sd.date < '" + Request["s_date"] + "')) AS StockDistGallonBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN StockDistribution AS sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Drum') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId = " + region_id + ") AND (sd.date < '" + Request["s_date"] + "')) AS StockDistDrumBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN StockDistribution AS sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Dubbi') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId = " + region_id + ") AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistDubbiAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN StockDistribution AS sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Quarter') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId = " + region_id + ") AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistQuarterAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN StockDistribution AS sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Gallon') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId = " + region_id + ") AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistGallonAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 AS sdd1 INNER JOIN StockDistribution AS sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Drum') AND (sdd1.pid = Product.ProductID) AND (sd.RegionId = " + region_id + ") AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistDrumAfter, (SELECT ISNULL(SUM(FinishTransferDetail.qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail ON FinishTransferM.invid = FinishTransferDetail.invid WHERE (FinishTransferDetail.pid = Product.ProductID) AND (FinishTransferDetail.size = 'Dubbi') AND (FinishTransferM.ToRegion = " + region_id + ") AND (FinishTransferM.date < '" + Request["s_date"] + "')) AS InDubbiBefore, (SELECT ISNULL(SUM(FinishTransferDetail_15.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_15 INNER JOIN FinishTransferDetail AS FinishTransferDetail_15 ON FinishTransferM_15.invid = FinishTransferDetail_15.invid WHERE (FinishTransferDetail_15.pid = Product.ProductID) AND (FinishTransferDetail_15.size = 'Dubbi') AND (FinishTransferM_15.ToRegion = " + region_id + ") AND (FinishTransferM_15.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InDubbiAfter, (SELECT ISNULL(SUM(FinishTransferDetail_14.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_14 INNER JOIN FinishTransferDetail AS FinishTransferDetail_14 ON FinishTransferM_14.invid = FinishTransferDetail_14.invid WHERE (FinishTransferDetail_14.pid = Product.ProductID) AND (FinishTransferDetail_14.size = 'Quarter') AND (FinishTransferM_14.ToRegion = " + region_id + ") AND (FinishTransferM_14.date < '" + Request["s_date"] + "')) AS InQuarterBefore, (SELECT ISNULL(SUM(FinishTransferDetail_13.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_13 INNER JOIN FinishTransferDetail AS FinishTransferDetail_13 ON FinishTransferM_13.invid = FinishTransferDetail_13.invid WHERE (FinishTransferDetail_13.pid = Product.ProductID) AND (FinishTransferDetail_13.size = 'Quarter') AND (FinishTransferM_13.ToRegion = " + region_id + ") AND (FinishTransferM_13.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InQuarterAfter, (SELECT ISNULL(SUM(FinishTransferDetail_12.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_12 INNER JOIN FinishTransferDetail AS FinishTransferDetail_12 ON FinishTransferM_12.invid = FinishTransferDetail_12.invid WHERE (FinishTransferDetail_12.pid = Product.ProductID) AND (FinishTransferDetail_12.size = 'Gallon') AND (FinishTransferM_12.ToRegion = " + region_id + ") AND (FinishTransferM_12.date < '" + Request["s_date"] + "')) AS InGallonBefore, (SELECT ISNULL(SUM(FinishTransferDetail_11.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_11 INNER JOIN FinishTransferDetail AS FinishTransferDetail_11 ON FinishTransferM_11.invid = FinishTransferDetail_11.invid WHERE (FinishTransferDetail_11.pid = Product.ProductID) AND (FinishTransferDetail_11.size = 'Gallon') AND (FinishTransferM_11.ToRegion = " + region_id + ") AND (FinishTransferM_11.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InGallonAfter, (SELECT ISNULL(SUM(FinishTransferDetail_10.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_10 INNER JOIN FinishTransferDetail AS FinishTransferDetail_10 ON FinishTransferM_10.invid = FinishTransferDetail_10.invid WHERE (FinishTransferDetail_10.pid = Product.ProductID) AND (FinishTransferDetail_10.size = 'Drum') AND (FinishTransferM_10.ToRegion = " + region_id + ") AND (FinishTransferM_10.date < '" + Request["s_date"] + "')) AS InDrumBefore, (SELECT ISNULL(SUM(FinishTransferDetail_9.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_9 INNER JOIN FinishTransferDetail AS FinishTransferDetail_9 ON FinishTransferM_9.invid = FinishTransferDetail_9.invid WHERE (FinishTransferDetail_9.pid = Product.ProductID) AND (FinishTransferDetail_9.size = 'Drum') AND (FinishTransferM_9.ToRegion = " + region_id + ") AND (FinishTransferM_9.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InDrumAfter, (SELECT ISNULL(SUM(FinishTransferDetail_8.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_8 INNER JOIN FinishTransferDetail AS FinishTransferDetail_8 ON FinishTransferM_8.invid = FinishTransferDetail_8.invid WHERE (FinishTransferDetail_8.pid = Product.ProductID) AND (FinishTransferDetail_8.size = 'Dubbi') AND (FinishTransferM_8.Fromregion = " + region_id + ") AND (FinishTransferM_8.date < '" + Request["s_date"] + "')) AS OutDubbiBefore, (SELECT ISNULL(SUM(FinishTransferDetail_7.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_7 INNER JOIN FinishTransferDetail AS FinishTransferDetail_7 ON FinishTransferM_7.invid = FinishTransferDetail_7.invid WHERE (FinishTransferDetail_7.pid = Product.ProductID) AND (FinishTransferDetail_7.size = 'Dubbi') AND (FinishTransferM_7.Fromregion = " + region_id + ") AND (FinishTransferM_7.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutDubbiAfter, (SELECT ISNULL(SUM(FinishTransferDetail_6.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_6 INNER JOIN FinishTransferDetail AS FinishTransferDetail_6 ON FinishTransferM_6.invid = FinishTransferDetail_6.invid WHERE (FinishTransferDetail_6.pid = Product.ProductID) AND (FinishTransferDetail_6.size = 'Quarter') AND (FinishTransferM_6.Fromregion = " + region_id + ") AND (FinishTransferM_6.date < '" + Request["s_date"] + "')) AS OutQuarterBefore, (SELECT ISNULL(SUM(FinishTransferDetail_5.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_5 INNER JOIN FinishTransferDetail AS FinishTransferDetail_5 ON FinishTransferM_5.invid = FinishTransferDetail_5.invid WHERE (FinishTransferDetail_5.pid = Product.ProductID) AND (FinishTransferDetail_5.size = 'Quarter') AND (FinishTransferM_5.Fromregion = " + region_id + ") AND (FinishTransferM_5.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutQuarterAfter, (SELECT ISNULL(SUM(FinishTransferDetail_4.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_4 INNER JOIN FinishTransferDetail AS FinishTransferDetail_4 ON FinishTransferM_4.invid = FinishTransferDetail_4.invid WHERE (FinishTransferDetail_4.pid = Product.ProductID) AND (FinishTransferDetail_4.size = 'Gallon') AND (FinishTransferM_4.Fromregion = " + region_id + ") AND (FinishTransferM_4.date < '" + Request["s_date"] + "')) AS OutGallonBefore, (SELECT ISNULL(SUM(FinishTransferDetail_3.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_3 INNER JOIN FinishTransferDetail AS FinishTransferDetail_3 ON FinishTransferM_3.invid = FinishTransferDetail_3.invid WHERE (FinishTransferDetail_3.pid = Product.ProductID) AND (FinishTransferDetail_3.size = 'Gallon') AND (FinishTransferM_3.Fromregion = " + region_id + ") AND (FinishTransferM_3.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutGallonAfter, (SELECT ISNULL(SUM(FinishTransferDetail_2.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_2 INNER JOIN FinishTransferDetail AS FinishTransferDetail_2 ON FinishTransferM_2.invid = FinishTransferDetail_2.invid WHERE (FinishTransferDetail_2.pid = Product.ProductID) AND (FinishTransferDetail_2.size = 'Drum') AND (FinishTransferM_2.Fromregion = " + region_id + ") AND (FinishTransferM_2.date < '" + Request["s_date"] + "')) AS OutDrumBefore, (SELECT ISNULL(SUM(FinishTransferDetail_1.qty), 0) AS Expr1 FROM FinishTransferM AS FinishTransferM_1 INNER JOIN FinishTransferDetail AS FinishTransferDetail_1 ON FinishTransferM_1.invid = FinishTransferDetail_1.invid WHERE (FinishTransferDetail_1.pid = Product.ProductID) AND (FinishTransferDetail_1.size = 'Drum') AND (FinishTransferM_1.Fromregion = " + region_id + ") AND (FinishTransferM_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutDrumAfter, (SELECT ISNULL(SUM(BranchTransferDetail.qty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail ON BranchTransferM.invid = BranchTransferDetail.invid WHERE (BranchTransferDetail.pid = Product.ProductID) AND (BranchTransferDetail.size = 'Dubbi') AND (BranchTransferM.Tobranch = " + branchid + ") AND (BranchTransferM.date < '" + Request["s_date"] + "')) AS InDubbiBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_15.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_15 INNER JOIN BranchTransferDetail AS BranchTransferDetail_15 ON BranchTransferM_15.invid = BranchTransferDetail_15.invid WHERE (BranchTransferDetail_15.pid = Product.ProductID) AND (BranchTransferDetail_15.size = 'Dubbi') AND (BranchTransferM_15.Tobranch = " + branchid + ") AND (BranchTransferM_15.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InDubbiAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_14.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_14 INNER JOIN BranchTransferDetail AS BranchTransferDetail_14 ON BranchTransferM_14.invid = BranchTransferDetail_14.invid WHERE (BranchTransferDetail_14.pid = Product.ProductID) AND (BranchTransferDetail_14.size = 'Quarter') AND (BranchTransferM_14.Tobranch = " + branchid + ") AND (BranchTransferM_14.date < '" + Request["s_date"] + "')) AS InQuarterBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_13.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_13 INNER JOIN BranchTransferDetail AS BranchTransferDetail_13 ON BranchTransferM_13.invid = BranchTransferDetail_13.invid WHERE (BranchTransferDetail_13.pid = Product.ProductID) AND (BranchTransferDetail_13.size = 'Quarter') AND (BranchTransferM_13.Tobranch = " + branchid + ") AND (BranchTransferM_13.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InQuarterAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_12.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_12 INNER JOIN BranchTransferDetail AS BranchTransferDetail_12 ON BranchTransferM_12.invid = BranchTransferDetail_12.invid WHERE (BranchTransferDetail_12.pid = Product.ProductID) AND (BranchTransferDetail_12.size = 'Gallon') AND (BranchTransferM_12.Tobranch = " + branchid + ") AND (BranchTransferM_12.date < '" + Request["s_date"] + "')) AS InGallonBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_11.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_11 INNER JOIN BranchTransferDetail AS BranchTransferDetail_11 ON BranchTransferM_11.invid = BranchTransferDetail_11.invid WHERE (BranchTransferDetail_11.pid = Product.ProductID) AND (BranchTransferDetail_11.size = 'Gallon') AND (BranchTransferM_11.Tobranch = " + branchid + ") AND (BranchTransferM_11.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InGallonAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_10.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_10 INNER JOIN BranchTransferDetail AS BranchTransferDetail_10 ON BranchTransferM_10.invid = BranchTransferDetail_10.invid WHERE (BranchTransferDetail_10.pid = Product.ProductID) AND (BranchTransferDetail_10.size = 'Drum') AND (BranchTransferM_10.Tobranch = " + branchid + ") AND (BranchTransferM_10.date < '" + Request["s_date"] + "')) AS InDrumBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_9.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_9 INNER JOIN BranchTransferDetail AS BranchTransferDetail_9 ON BranchTransferM_9.invid = BranchTransferDetail_9.invid WHERE (BranchTransferDetail_9.pid = Product.ProductID) AND (BranchTransferDetail_9.size = 'Drum') AND (BranchTransferM_9.Tobranch = " + branchid + ") AND (BranchTransferM_9.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS InDrumAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_8.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_8 INNER JOIN BranchTransferDetail AS BranchTransferDetail_8 ON BranchTransferM_8.invid = BranchTransferDetail_8.invid WHERE (BranchTransferDetail_8.pid = Product.ProductID) AND (BranchTransferDetail_8.size = 'Dubbi') AND (BranchTransferM_8.Frombranch = " + branchid + ") AND (BranchTransferM_8.date < '" + Request["s_date"] + "')) AS OutDubbiBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_7.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_7 INNER JOIN BranchTransferDetail AS BranchTransferDetail_7 ON BranchTransferM_7.invid = BranchTransferDetail_7.invid WHERE (BranchTransferDetail_7.pid = Product.ProductID) AND (BranchTransferDetail_7.size = 'Dubbi') AND (BranchTransferM_7.Frombranch = " + branchid + ") AND (BranchTransferM_7.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutDubbiAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_6.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_6 INNER JOIN BranchTransferDetail AS BranchTransferDetail_6 ON BranchTransferM_6.invid = BranchTransferDetail_6.invid WHERE (BranchTransferDetail_6.pid = Product.ProductID) AND (BranchTransferDetail_6.size = 'Quarter') AND (BranchTransferM_6.Frombranch = " + branchid + ") AND (BranchTransferM_6.date < '" + Request["s_date"] + "')) AS OutQuarterBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_5.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_5 INNER JOIN BranchTransferDetail AS BranchTransferDetail_5 ON BranchTransferM_5.invid = BranchTransferDetail_5.invid WHERE (BranchTransferDetail_5.pid = Product.ProductID) AND (BranchTransferDetail_5.size = 'Quarter') AND (BranchTransferM_5.Frombranch = " + branchid + ") AND (BranchTransferM_5.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutQuarterAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_4.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_4 INNER JOIN BranchTransferDetail AS BranchTransferDetail_4 ON BranchTransferM_4.invid = BranchTransferDetail_4.invid WHERE (BranchTransferDetail_4.pid = Product.ProductID) AND (BranchTransferDetail_4.size = 'Gallon') AND (BranchTransferM_4.Frombranch = " + branchid + ") AND (BranchTransferM_4.date < '" + Request["s_date"] + "')) AS OutGallonBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_3.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_3 INNER JOIN BranchTransferDetail AS BranchTransferDetail_3 ON BranchTransferM_3.invid = BranchTransferDetail_3.invid WHERE (BranchTransferDetail_3.pid = Product.ProductID) AND (BranchTransferDetail_3.size = 'Gallon') AND (BranchTransferM_3.Frombranch = " + branchid + ") AND (BranchTransferM_3.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutGallonAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_2.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_2 INNER JOIN BranchTransferDetail AS BranchTransferDetail_2 ON BranchTransferM_2.invid = BranchTransferDetail_2.invid WHERE (BranchTransferDetail_2.pid = Product.ProductID) AND (BranchTransferDetail_2.size = 'Drum') AND (BranchTransferM_2.Frombranch = " + branchid + ") AND (BranchTransferM_2.date < '" + Request["s_date"] + "')) AS OutDrumBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_1.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_1 INNER JOIN BranchTransferDetail AS BranchTransferDetail_1 ON BranchTransferM_1.invid = BranchTransferDetail_1.invid WHERE (BranchTransferDetail_1.pid = Product.ProductID) AND (BranchTransferDetail_1.size = 'Drum') AND (BranchTransferM_1.Frombranch = " + branchid + ") AND (BranchTransferM_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS OutDrumAfter1, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (RegionId = " + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId = " + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (RegionId = " + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId = " + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (RegionId = " + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId = " + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (RegionId = " + region_id + ") AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (RegionId = " + region_id + ") AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.RegionId = " + region_id + ") AND (srsm.BranchId = " + branchid + ") AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId = " + region_id + ") AND (BranchId=" + branchid + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.RegionId = " + region_id + ") AND (srsm_4.BranchId = " + branchid + ") AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId = " + region_id + ") AND (BranchId = " + branchid + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.RegionId = " + region_id + ") AND (srsm_3.BranchId = " + branchid + ") AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId = " + region_id + ") AND (BrandID = " + branchid + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.RegionId = " + region_id + ") AND (srsm_2.BranchId = " + branchid + ") AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (RegionId = " + region_id + ") AND (BranchId = " + branchid + ") AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.RegionId = " + region_id + ") AND (srsm_5.BranchId = " + branchid + ") AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) AND (RegionId = " + region_id + ") AND (BranchId = " + branchid + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.RegionId = " + region_id + ") AND (srsm_4.BranchId = " + branchid + ") AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) AND (RegionId = " + region_id + ") AND (BranchId = " + branchid + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.RegionId = " + region_id + ") AND (srsm_3.BranchId = " + branchid + ") AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) AND (RegionId = " + region_id + ") AND (BranchId = " + branchid + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.RegionId = " + region_id + ") AND (srsm_2.BranchId = " + branchid + ") AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) AND (RegionId = " + region_id + ") AND (BranchId = " + branchid + ") AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.RegionId = " + region_id + ") AND (orderm.BranchId = " + branchid + ") AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId = " + region_id + ") AND (orderm_1.BranchId = " + branchid + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.RegionId = " + region_id + ") AND (orderm_4.BranchId = " + branchid + ") AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId = " + region_id + ") AND (orderm_1.BranchId = " + branchid + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.RegionId = " + region_id + ") AND (orderm_3.BranchId = " + branchid + ") AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId = " + region_id + ") AND (orderm_1.BranchId = " + branchid + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.RegionId = " + region_id + ")AND (orderm_2.BranchId = " + branchid + ") AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.RegionId = " + region_id + ") AND (orderm_1.BranchId = " + branchid + ") AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (sampledetail2.packing = 'Dubbi') AND (sampledetail2.pid = Product.ProductID) AND (samplem2.regionid = " + region_id + ") AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(sampledetail2_7.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_7 INNER JOIN samplem2 AS samplem2_7 ON sampledetail2_7.invid = samplem2_7.invid WHERE (sampledetail2_7.packing = 'Dubbi') AND (sampledetail2_7.pid = Product.ProductID) AND (samplem2_7.regionid = " + region_id + ") AND (sampledetail2_7.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(sampledetail2_6.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_6 INNER JOIN samplem2 AS samplem2_6 ON sampledetail2_6.invid = samplem2_6.invid WHERE (sampledetail2_6.packing = 'Quarter') AND (sampledetail2_6.pid = Product.ProductID) AND (samplem2_6.regionid = " + region_id + ") AND (sampledetail2_6.date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(sampledetail2_5.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_5 INNER JOIN samplem2 AS samplem2_5 ON sampledetail2_5.invid = samplem2_5.invid WHERE (sampledetail2_5.packing = 'Quarter') AND (sampledetail2_5.pid = Product.ProductID) AND (samplem2_5.regionid = " + region_id + ") AND (sampledetail2_5.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(sampledetail2_4.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 INNER JOIN samplem2 AS samplem2_4 ON sampledetail2_4.invid = samplem2_4.invid WHERE (sampledetail2_4.packing = 'Gallon') AND (sampledetail2_4.pid = Product.ProductID) AND (samplem2_4.regionid = " + region_id + ") AND (sampledetail2_4.date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(sampledetail2_3.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 INNER JOIN samplem2 AS samplem2_3 ON sampledetail2_3.invid = samplem2_3.invid WHERE (sampledetail2_3.packing = 'Gallon') AND (sampledetail2_3.pid = Product.ProductID) AND (samplem2_3.regionid = " + region_id + ") AND (sampledetail2_3.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(sampledetail2_2.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 INNER JOIN samplem2 AS samplem2_2 ON sampledetail2_2.invid = samplem2_2.invid WHERE (sampledetail2_2.packing = 'Drum') AND (sampledetail2_2.pid = Product.ProductID) AND (samplem2_2.regionid = " + region_id + ") AND (sampledetail2_2.date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(sampledetail2_1.qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 INNER JOIN samplem2 AS samplem2_1 ON sampledetail2_1.invid = samplem2_1.invid WHERE (sampledetail2_1.packing = 'Drum') AND (sampledetail2_1.pid = Product.ProductID) AND (samplem2_1.regionid = " + region_id + ") AND (sampledetail2_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";
                query = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore + InDubbiBefore1 - OutDubbiBefore1 AS StkOpenDubbi, OpeningQuarter + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore + InQuarterBefore1 - OutQuarterBefore1 AS StkOpenQuarter, OpeningGallon + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore + InGallonBefore1 - OutGallonBefore1 AS StkOpenGallon, OpeningDrum + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore + InDrumBefore1 - OutDrumBefore1 AS StkOpenDrum, SaleReturnDubbiAfter + InDubbiAfter1 AS StkInDubbi, SaleReturnQuarterAfter + InQuarterAfter1 AS StkInQuarter, SaleReturnGallonAfter + InGallonAfter1 AS StkInGallon, SaleReturnDrumAfter + InDrumAfter1 AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter + OutDubbiAfter1 AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter + OutQuarterAfter1 AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter + OutGallonAfter1 AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter + OutDrumAfter1 AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID) AND (regionid='" + region_id + "') AND (branchid = '" + branchid + "')) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID) AND (regionid='" + region_id + "') AND (branchid = '" + branchid + "')) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID) AND (regionid='" + region_id + "') AND (branchid = '" + branchid + "')) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID) AND (regionid='" + region_id + "') AND (branchid = '" + branchid + "')) AS OpeningDrum, (SELECT ISNULL(SUM(BranchTransferDetail.rqty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail ON BranchTransferM.invid = BranchTransferDetail.invid WHERE (BranchTransferDetail.pid = Product.ProductID) AND (BranchTransferDetail.size = 'Dubbi') AND (BranchTransferM.Tobranch = '" + branchid + "') AND (BranchTransferM.status = 'Received') AND (BranchTransferM.date < '" + StartDate + "')) AS InDubbiBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_15.rqty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_15 INNER JOIN BranchTransferDetail AS BranchTransferDetail_15 ON BranchTransferM_15.invid = BranchTransferDetail_15.invid WHERE (BranchTransferDetail_15.pid = Product.ProductID) AND (BranchTransferDetail_15.size = 'Dubbi') AND (BranchTransferM_15.Tobranch = '" + branchid + "') AND (BranchTransferM_15.status = 'Received') AND (BranchTransferM_15.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS InDubbiAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_14.rqty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_14 INNER JOIN BranchTransferDetail AS BranchTransferDetail_14 ON BranchTransferM_14.invid = BranchTransferDetail_14.invid WHERE (BranchTransferDetail_14.pid = Product.ProductID) AND (BranchTransferDetail_14.size = 'Quarter') AND (BranchTransferM_14.Tobranch = '" + branchid + "') AND (BranchTransferM_14.status = 'Received') AND (BranchTransferM_14.date < '" + StartDate + "')) AS InQuarterBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_13.rqty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_13 INNER JOIN BranchTransferDetail AS BranchTransferDetail_13 ON BranchTransferM_13.invid = BranchTransferDetail_13.invid WHERE (BranchTransferDetail_13.pid = Product.ProductID) AND (BranchTransferDetail_13.size = 'Quarter') AND (BranchTransferM_13.Tobranch = '" + branchid + "') AND (BranchTransferM_13.status = 'Received') AND (BranchTransferM_13.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS InQuarterAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_12.rqty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_12 INNER JOIN BranchTransferDetail AS BranchTransferDetail_12 ON BranchTransferM_12.invid = BranchTransferDetail_12.invid WHERE (BranchTransferDetail_12.pid = Product.ProductID) AND (BranchTransferDetail_12.size = 'Gallon') AND (BranchTransferM_12.Tobranch = '" + branchid + "') AND (BranchTransferM_12.status = 'Received') AND (BranchTransferM_12.date < '" + StartDate + "')) AS InGallonBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_11.rqty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_11 INNER JOIN BranchTransferDetail AS BranchTransferDetail_11 ON BranchTransferM_11.invid = BranchTransferDetail_11.invid WHERE (BranchTransferDetail_11.pid = Product.ProductID) AND (BranchTransferDetail_11.size = 'Gallon') AND (BranchTransferM_11.Tobranch = '" + branchid + "') AND (BranchTransferM_11.status = 'Received') AND (BranchTransferM_11.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS InGallonAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_10.rqty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_10 INNER JOIN BranchTransferDetail AS BranchTransferDetail_10 ON BranchTransferM_10.invid = BranchTransferDetail_10.invid WHERE (BranchTransferDetail_10.pid = Product.ProductID) AND (BranchTransferDetail_10.size = 'Drum') AND (BranchTransferM_10.Tobranch = '" + branchid + "') AND (BranchTransferM_10.status = 'Received') AND (BranchTransferM_10.date < '" + StartDate + "')) AS InDrumBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_9.rqty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_9 INNER JOIN BranchTransferDetail AS BranchTransferDetail_9 ON BranchTransferM_9.invid = BranchTransferDetail_9.invid WHERE (BranchTransferDetail_9.pid = Product.ProductID) AND (BranchTransferDetail_9.size = 'Drum') AND (BranchTransferM_9.Tobranch = '" + branchid + "')AND (BranchTransferM_9.status = 'Received') AND (BranchTransferM_9.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS InDrumAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_8.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_8 INNER JOIN BranchTransferDetail AS BranchTransferDetail_8 ON BranchTransferM_8.invid = BranchTransferDetail_8.invid WHERE (BranchTransferDetail_8.pid = Product.ProductID) AND (BranchTransferDetail_8.size = 'Dubbi') AND (BranchTransferM_8.Frombranch = '" + branchid + "') AND (BranchTransferM_8.date < '" + StartDate + "')) AS OutDubbiBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_7.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_7 INNER JOIN BranchTransferDetail AS BranchTransferDetail_7 ON BranchTransferM_7.invid = BranchTransferDetail_7.invid WHERE (BranchTransferDetail_7.pid = Product.ProductID) AND (BranchTransferDetail_7.size = 'Dubbi') AND (BranchTransferM_7.Frombranch = '" + branchid + "') AND (BranchTransferM_7.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS OutDubbiAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_6.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_6 INNER JOIN BranchTransferDetail AS BranchTransferDetail_6 ON BranchTransferM_6.invid = BranchTransferDetail_6.invid WHERE (BranchTransferDetail_6.pid = Product.ProductID) AND (BranchTransferDetail_6.size = 'Quarter') AND (BranchTransferM_6.Frombranch = '" + branchid + "') AND (BranchTransferM_6.date < '" + StartDate + "')) AS OutQuarterBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_5.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_5 INNER JOIN BranchTransferDetail AS BranchTransferDetail_5 ON BranchTransferM_5.invid = BranchTransferDetail_5.invid WHERE (BranchTransferDetail_5.pid = Product.ProductID) AND (BranchTransferDetail_5.size = 'Quarter') AND (BranchTransferM_5.Frombranch = '" + branchid + "') AND (BranchTransferM_5.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS OutQuarterAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_4.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_4 INNER JOIN BranchTransferDetail AS BranchTransferDetail_4 ON BranchTransferM_4.invid = BranchTransferDetail_4.invid WHERE (BranchTransferDetail_4.pid = Product.ProductID) AND (BranchTransferDetail_4.size = 'Gallon') AND (BranchTransferM_4.Frombranch = '" + branchid + "') AND (BranchTransferM_4.date < '" + StartDate + "')) AS OutGallonBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_3.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_3 INNER JOIN BranchTransferDetail AS BranchTransferDetail_3 ON BranchTransferM_3.invid = BranchTransferDetail_3.invid WHERE (BranchTransferDetail_3.pid = Product.ProductID) AND (BranchTransferDetail_3.size = 'Gallon') AND (BranchTransferM_3.Frombranch = '" + branchid + "') AND (BranchTransferM_3.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS OutGallonAfter1, (SELECT ISNULL(SUM(BranchTransferDetail_2.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_2 INNER JOIN BranchTransferDetail AS BranchTransferDetail_2 ON BranchTransferM_2.invid = BranchTransferDetail_2.invid WHERE (BranchTransferDetail_2.pid = Product.ProductID) AND (BranchTransferDetail_2.size = 'Drum') AND (BranchTransferM_2.Frombranch = '" + branchid + "') AND (BranchTransferM_2.date < '" + StartDate + "')) AS OutDrumBefore1, (SELECT ISNULL(SUM(BranchTransferDetail_1.qty), 0) AS Expr1 FROM BranchTransferM AS BranchTransferM_1 INNER JOIN BranchTransferDetail AS BranchTransferDetail_1 ON BranchTransferM_1.invid = BranchTransferDetail_1.invid WHERE (BranchTransferDetail_1.pid = Product.ProductID) AND (BranchTransferDetail_1.size = 'Drum') AND (BranchTransferM_1.Frombranch = '" + branchid + "') AND (BranchTransferM_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS OutDrumAfter1, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.regionid='" + region_id + "') AND (srsm.BranchId = '" + branchid + "') AND (srsm.date < '" + StartDate + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (title = srsdetail_6.Status) AND (regionid='" + region_id + "') AND (BranchId = '" + branchid + "') AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.regionid='" + region_id + "') AND (srsm_4.BranchId = '" + branchid + "') AND (srsm_4.date < '" + StartDate + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (title = srsdetail_6.Status) AND (regionid='" + region_id + "') AND (BranchId = '" + branchid + "') AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.regionid='" + region_id + "') AND (srsm_3.BranchId = '" + branchid + "') AND (srsm_3.date < '" + StartDate + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (title = srsdetail_6.Status) AND (regionid='" + region_id + "') AND (Product.BrandID = '" + branchid + "') AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.regionid='" + region_id + "') AND (srsm_2.BranchId = '" + branchid + "') AND (srsm_2.date < '" + StartDate + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (title = srsdetail_6.Status) AND (regionid='" + region_id + "') AND (BranchId = '" + branchid + "') AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.regionid='" + region_id + "') AND (srsm_5.BranchId = '" + branchid + "') AND (srsm_5.date < '" + StartDate + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (title = srsdetail_9.Status) AND (regionid='" + region_id + "') AND (BranchId = '" + branchid + "') AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.regionid='" + region_id + "') AND (srsm_4.BranchId = '" + branchid + "') AND (srsm_4.date < '" + StartDate + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (title = srsdetail_8.Status) AND (regionid='" + region_id + "') AND (BranchId = '" + branchid + "') AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.regionid='" + region_id + "') AND (srsm_3.BranchId = '" + branchid + "') AND (srsm_3.date < '" + StartDate + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (title = srsdetail_7.Status) AND (regionid='" + region_id + "') AND (BranchId = '" + branchid + "') AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.regionid='" + region_id + "') AND (srsm_2.BranchId = '" + branchid + "') AND (srsm_2.date < '" + StartDate + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + StartDate + "' AND '" + Enddate + "') AND (title = srsdetail_1.Status) AND (regionid='" + region_id + "') AND (BranchId = '" + branchid + "') AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.regionid='" + region_id + "') AND (orderm.BranchId = '" + branchid + "') AND (orderm.date < '" + StartDate + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.regionid='" + region_id + "') AND (orderm_1.BranchId = '" + branchid + "') AND (orderm_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.regionid='" + region_id + "') AND (orderm_4.BranchId = '" + branchid + "') AND (orderm_4.date < '" + StartDate + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.regionid='" + region_id + "') AND (orderm_1.BranchId = '" + branchid + "') AND (orderm_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.regionid='" + region_id + "') AND (orderm_3.BranchId = '" + branchid + "') AND (orderm_3.date < '" + StartDate + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.regionid='" + region_id + "') AND (orderm_1.BranchId = '" + branchid + "') AND (orderm_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.regionid='" + region_id + "') AND (orderm_2.BranchId = '" + branchid + "') AND (orderm_2.date < '" + StartDate + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.regionid='" + region_id + "') AND (orderm_1.BranchId = '" + branchid + "') AND (orderm_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(StockdamageDetail.qty), 0) AS Expr1 FROM StockdamageDetail INNER JOIN StockdamageM ON StockdamageDetail.invid = StockdamageM.invid WHERE (StockdamageDetail.packing = 'Dubbi') AND (StockdamageDetail.pid = Product.ProductID) AND (StockdamageM.branchid = '" + branchid + "') AND (StockdamageDetail.date < '" + StartDate + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(StockdamageDetail_7.qty), 0) AS Expr1 FROM StockdamageDetail AS StockdamageDetail_7 INNER JOIN StockdamageM AS StockdamageM_7 ON StockdamageDetail_7.invid = StockdamageM_7.invid WHERE (StockdamageDetail_7.packing = 'Dubbi') AND (StockdamageDetail_7.pid = Product.ProductID) AND (StockdamageM_7.branchid = '" + branchid + "') AND (StockdamageDetail_7.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(StockdamageDetail_6.qty), 0) AS Expr1 FROM StockdamageDetail AS StockdamageDetail_6 INNER JOIN StockdamageM AS StockdamageM_6 ON StockdamageDetail_6.invid = StockdamageM_6.invid WHERE (StockdamageDetail_6.packing = 'Quarter') AND (StockdamageDetail_6.pid = Product.ProductID) AND (StockdamageM_6.branchid = '" + branchid + "') AND (StockdamageDetail_6.date < '" + StartDate + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(StockdamageDetail_5.qty), 0) AS Expr1 FROM StockdamageDetail AS StockdamageDetail_5 INNER JOIN StockdamageM AS StockdamageM_5 ON StockdamageDetail_5.invid = StockdamageM_5.invid WHERE (StockdamageDetail_5.packing = 'Quarter') AND (StockdamageDetail_5.pid = Product.ProductID) AND (StockdamageM_5.branchid = '" + branchid + "') AND (StockdamageDetail_5.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(StockdamageDetail_4.qty), 0) AS Expr1 FROM StockdamageDetail AS StockdamageDetail_4 INNER JOIN StockdamageM AS StockdamageM_4 ON StockdamageDetail_4.invid = StockdamageM_4.invid WHERE (StockdamageDetail_4.packing = 'Gallon') AND (StockdamageDetail_4.pid = Product.ProductID) AND (StockdamageM_4.branchid = '" + branchid + "') AND (StockdamageDetail_4.date < '" + StartDate + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(StockdamageDetail_3.qty), 0) AS Expr1 FROM StockdamageDetail AS StockdamageDetail_3 INNER JOIN StockdamageM AS StockdamageM_3 ON StockdamageDetail_3.invid = StockdamageM_3.invid WHERE (StockdamageDetail_3.packing = 'Gallon') AND (StockdamageDetail_3.pid = Product.ProductID) AND (StockdamageM_3.branchid = '" + branchid + "') AND (StockdamageDetail_3.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(StockdamageDetail_2.qty), 0) AS Expr1 FROM StockdamageDetail AS StockdamageDetail_2 INNER JOIN StockdamageM AS StockdamageM_2 ON StockdamageDetail_2.invid = StockdamageM_2.invid WHERE (StockdamageDetail_2.packing = 'Drum') AND (StockdamageDetail_2.pid = Product.ProductID) AND (StockdamageM_2.branchid = '" + branchid + "') AND (StockdamageDetail_2.date < '" + StartDate + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(StockdamageDetail_1.qty), 0) AS Expr1 FROM StockdamageDetail AS StockdamageDetail_1 INNER JOIN StockdamageM AS StockdamageM_1 ON StockdamageDetail_1.invid = StockdamageM_1.invid WHERE (StockdamageDetail_1.packing = 'Drum') AND (StockdamageDetail_1.pid = Product.ProductID) AND (StockdamageM_1.branchid = '" + branchid + "') AND (StockdamageDetail_1.date BETWEEN '" + StartDate + "' AND '" + Enddate + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";

            }
            else
            {
                // query = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID " + str + " )) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID " + str + " )) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID " + str + " )) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID " + str + " )) AS OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) " + str + " AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) " + str + " AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) " + str + " AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) " + str + " AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) " + str + " AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) " + str + " AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) " + str + " AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) " + str + " AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) " + str + " AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) " + str + " AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) " + str + " AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) " + str + " AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Quarter') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Quarter') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Gallon') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Gallon') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Drum') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Drum') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";
                //Add the stock Distibution1 table in thi
                query = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore - StockDistDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore - StockDistQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore - StockDistGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore - StockDistDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter + StockDistDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter + StockDistQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter + StockDistGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter + StockDistDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID " + str + ")) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID " + str + ")) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID " + str + ")) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID " + str + ")) AS OpeningDrum, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Dubbi') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date < '" + Request["s_date"] + "')) AS StockDistDubbiBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Quarter') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date < '" + Request["s_date"] + "')) AS StockDistQuarterBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Gallon') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date < '" + Request["s_date"] + "')) AS StockDistGallonBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Drum') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date < '" + Request["s_date"] + "')) AS StockDistDrumBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Dubbi') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistDubbiAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Quarter') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistQuarterAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Gallon') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistGallonAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Drum') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistDrumAfter, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) " + str + " AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) " + str + " AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) " + str + " AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) " + str + " AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) " + str + " AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) " + str + " AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) " + str + " AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) " + str + " AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) " + str + " AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) " + str + " AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) " + str + " AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) " + str + " AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Quarter') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Quarter') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Gallon') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Gallon') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Drum') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Drum') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";
            }

            #region  old querys

            //var str = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon,StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 order by ProductName";
            //var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon,StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status NOT IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 order by ProductName").ToList();

            //var str = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon,StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 order by ProductName";
            //var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon,StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status  IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV','WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' and '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 order by ProductName").ToList();

            // var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, ( SELECT ISNULL(SUM(T.Expr1),0) AS TotalQuantity FROM( SELECT DISTINCT srsm_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T ) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, ( SELECT ISNULL(SUM(T.Expr1), 0) AS TotalQuantity FROM( SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T ) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, ( SELECT ISNULL(SUM(T.Expr1), 0) AS TotalQuantity FROM( SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T ) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, ( SELECT ISNULL(SUM(T.Expr1), 0) AS TotalQuantity FROM( SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T ) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();
            //var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, ( SELECT ISNULL(SUM(T.Expr1),0) AS TotalQuantity FROM( SELECT DISTINCT srsm_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND srsm_1.title=srsdetail_1.Status AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T ) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, ( SELECT ISNULL(SUM(T.Expr1), 0) AS TotalQuantity FROM( SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND srsm_1.title=srsdetail_1.Status AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T ) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, ( SELECT ISNULL(SUM(T.Expr1), 0) AS TotalQuantity FROM( SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND srsm_1.title=srsdetail_1.Status AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T ) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, ( SELECT ISNULL(SUM(T.Expr1), 0) AS TotalQuantity FROM( SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND srsm_1.title=srsdetail_1.Status AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T ) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();
            // var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(srsdetail_1.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_3) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_2) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_1) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();
            // var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (Select ISNULL(Sum(T.Expr1),0) From ( SELECT distinct srsdetail_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (Select ISNULL(Sum(T.Expr1),0) From ( SELECT distinct srsdetail_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (Select ISNULL(Sum(T.Expr1),0) From ( SELECT distinct srsdetail_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (Select ISNULL(Sum(T.Expr1),0) From ( SELECT distinct srsdetail_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_3) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_2) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_1) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();
            // var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (Select ISNULL(Sum(T.Expr1),0) From ( SELECT distinct srsdetail_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (Select ISNULL(Sum(T.Expr1),0) From ( SELECT distinct srsdetail_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (Select ISNULL(Sum(T.Expr1),0) From ( SELECT distinct srsdetail_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (Select ISNULL(Sum(T.Expr1),0) From ( SELECT distinct srsdetail_1.OrderID,srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsm_1.title IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsm_1.title IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_3) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsm_1.title IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_2) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsm_1.title IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_1) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();
            //  var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Dubbi') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsm_1.title IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_4) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Quarter') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsm_1.title IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_3) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Gallon') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsm_1.title IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_2) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS TotalQuantity FROM (SELECT DISTINCT srsm_1.OrderID, srsdetail_1.qty AS Expr1 FROM srsdetail AS srsdetail_1 INNER JOIN srsm AS srsm_1 ON srsdetail_1.OrderID = srsm_1.OrderID WHERE (srsdetail_1.packing = 'Drum') AND (srsdetail_1.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsm_1.title IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_1.prid = Product.ProductID) AND (srsm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS T_1) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();
            // var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty),0) FROM srsdetail WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND OrderID IN (Select orderid from srsm where date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' AND (title = Status) AND title IN ('SINV', 'TSINV', 'WTSINV') )) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty),0) FROM srsdetail WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND OrderID IN (Select orderid from srsm where date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' AND (title = Status) AND title IN ('SINV', 'TSINV', 'WTSINV') )) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty),0) FROM srsdetail WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND OrderID IN (Select orderid from srsm where date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' AND (title = Status) AND title IN ('SINV', 'TSINV', 'WTSINV') )) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty),0) FROM srsdetail WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND OrderID IN (Select orderid from srsm where date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "' AND (title = Status) AND title IN ('SINV', 'TSINV', 'WTSINV') )) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();


            //   var str1 = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion where pid=Product.ProductID) AS OpeningDubbi, OpeningQuarter + (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion where pid=Product.ProductID) AS OpeningQuarter, OpeningGallon + (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion where pid=Product.ProductID) AS OpeningGallon, OpeningDrum + (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion where pid=Product.ProductID) AS OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";
            // var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi, OpeningQuarter, OpeningGallon, OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();


            //without region
            // var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion where pid=Product.ProductID) AS OpeningDubbi, OpeningQuarter + (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion where pid=Product.ProductID) AS OpeningQuarter, OpeningGallon + (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion where pid=Product.ProductID) AS OpeningGallon, OpeningDrum + (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion where pid=Product.ProductID) AS OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();

            //var str1 = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID  " + str + " )) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID  " + str + " )) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID  " + str + " )) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID  " + str + " )) AS OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID)  " + str + "  AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)  " + str + "  AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID)  " + str + "  AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)  " + str + "  AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID)  " + str + "  AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)  " + str + "  AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID)  " + str + "  AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)  " + str + "  AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID)  " + str + "  AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status)  " + str + "  AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID)  " + str + "  AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status)  " + str + "  AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID)  " + str + "  AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status)  " + str + "  AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID)  " + str + "  AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status)  " + str + "  AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID)  " + str + "  AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status)  " + str + "  AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID)  " + str + "  AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status)  " + str + "  AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID)  " + str + "  AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status)  " + str + "  AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID)  " + str + "  AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status)  " + str + "  AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID)  " + str + "  AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID)  " + str + "  AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID)  " + str + "  AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID)  " + str + "  AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID)  " + str + "  AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID)  " + str + "  AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID)  " + str + "  AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID)  " + str + "  AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";
            // var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>("SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID  "+ str +" )) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID  "+ str +" )) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID  "+ str +" )) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID  "+ str +" )) AS OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID)  "+ str +"  AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)  "+ str +"  AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID)  "+ str +"  AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)  "+ str +"  AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID)  "+ str +"  AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)  "+ str +"  AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID)  "+ str +"  AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID)  "+ str +"  AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID)  "+ str +"  AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status)  "+ str +"  AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID)  "+ str +"  AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status)  "+ str +"  AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID)  "+ str +"  AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status)  "+ str +"  AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID)  "+ str +"  AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status)  "+ str +"  AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID)  "+ str +"  AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status)  "+ str +"  AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID)  "+ str +"  AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status)  "+ str +"  AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID)  "+ str +"  AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status)  "+ str +"  AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID)  "+ str +"  AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status)  "+ str +"  AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID)  "+ str +"  AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID)  "+ str +"  AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID)  "+ str +"  AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID)  "+ str +"  AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID)  "+ str +"  AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID)  "+ str +"  AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID)  "+ str +"  AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID)  "+ str +"  AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_4 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Quarter') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_3 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Gallon') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_2 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM sampledetail2 AS sampledetail2_1 WHERE (packing = 'Drum') AND (pid = Product.ProductID) AND (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName").ToList();
            #endregion
           // var str1 = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID " + str + " )) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID " + str + " )) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID " + str + " )) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID " + str + " )) AS OpeningDrum, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) " + str + " AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) " + str + " AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) " + str + " AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) " + str + " AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) " + str + " AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) " + str + " AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) " + str + " AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) " + str + " AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) " + str + " AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) " + str + " AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) " + str + " AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) " + str + " AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Quarter') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Quarter') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Gallon') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Gallon') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Drum') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Drum') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";
            var str1 = "SELECT ProductID, ProductName, StkOpenDubbi, StkOpenQuarter, StkOpenGallon, StkOpenDrum, StkInDubbi, StkInQuarter, StkInGallon, StkInDrum, StkOutDubbi, StkOutQuarter, StkOutGallon, StkOutDrum, StkOpenDubbi + StkInDubbi - StkOutDubbi AS StkDubbi, StkOpenQuarter + StkInQuarter - StkOutQuarter AS StkQuarter, StkOpenGallon + StkInGallon - StkOutGallon AS StkGallon, StkOpenDrum + StkInDrum - StkOutDrum AS StkDrum FROM (SELECT ProductID, ProductName, OpeningDubbi + BatchFillingDubbiBefore + SaleReturnDubbiBefore - SaleDubbiBefore - SaleTwoDubbiBefore - DemageDubbiBefore - StockDistDubbiBefore AS StkOpenDubbi, OpeningQuarter + BatchFillingQuarterBefore + SaleReturnQuarterBefore - SaleQuarterBefore - SaleTwoQuarterBefore - DemageQuarterBefore - StockDistQuarterBefore AS StkOpenQuarter, OpeningGallon + BatchFillingGallonBefore + SaleReturnGallonBefore - SaleGallonBefore - SaleTwoGallonBefore - DemageGallonBefore - StockDistGallonBefore AS StkOpenGallon, OpeningDrum + BatchFillingDrumBefore + SaleReturnDrumBefore - SaleDrumBefore - SaleTwoDrumBefore - DemageDrumBefore - StockDistDrumBefore AS StkOpenDrum, BatchFillingDubbiAfter + SaleReturnDubbiAfter AS StkInDubbi, BatchFillingQuarterAfter + SaleReturnQuarterAfter AS StkInQuarter, BatchFillingGallonAfter + SaleReturnGallonAfter AS StkInGallon, BatchFillingDrumAfter + SaleReturnDrumAfter AS StkInDrum, SaleDubbiAfter + SaleTwoDubbiAfter + DemageDubbiAfter + StockDistDubbiAfter AS StkOutDubbi, SaleQuarterAfter + SaleTwoQuarterAfter + DemageQuarterAfter + StockDistQuarterAfter AS StkOutQuarter, SaleGallonAfter + SaleTwoGallonAfter + DemageGallonAfter + StockDistGallonAfter AS StkOutGallon, SaleDrumAfter + SaleTwoDrumAfter + DemageDrumAfter + StockDistDrumAfter AS StkOutDrum FROM (SELECT ProductID, ProductName, (SELECT ISNULL(SUM(dubi_o), 0) AS Expr1 FROM ProductFinishedRegion WHERE (pid = Product.ProductID " + str + ")) AS OpeningDubbi, (SELECT ISNULL(SUM(quarter_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_3 WHERE (pid = Product.ProductID " + str + ")) AS OpeningQuarter, (SELECT ISNULL(SUM(gallon_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_2 WHERE (pid = Product.ProductID " + str + ")) AS OpeningGallon, (SELECT ISNULL(SUM(drum_o), 0) AS Expr1 FROM ProductFinishedRegion AS ProductFinishedRegion_1 WHERE (pid = Product.ProductID " + str + ")) AS OpeningDrum, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Dubbi') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date < '" + Request["s_date"] + "')) AS StockDistDubbiBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Quarter') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date < '" + Request["s_date"] + "')) AS StockDistQuarterBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Gallon') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date < '" + Request["s_date"] + "')) AS StockDistGallonBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Drum') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date < '" + Request["s_date"] + "')) AS StockDistDrumBefore, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Dubbi') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistDubbiAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Quarter') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistQuarterAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Gallon') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistGallonAfter, (SELECT ISNULL(SUM(sdd1.qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd ON sdd1.invid = sd.invid WHERE (sdd1.packing = 'Drum') AND (sdd1.pid = Product.ProductID) " + str + " AND (sd.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS StockDistDrumAfter, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDubbiBefore, (SELECT ISNULL(SUM(FilledDubbiQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDubbiAfter, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingQuarterBefore, (SELECT ISNULL(SUM(FilledQuarterQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingQuarterAfter, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingGallonBefore, (SELECT ISNULL(SUM(FilledGallonQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingGallonAfter, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_2 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate < '" + Request["s_date"] + "')) AS BatchFillingDrumBefore, (SELECT ISNULL(SUM(FilledDrumQTY), 0) AS Expr1 FROM tbl_BatchFillingMaster AS tbl_BatchFillingMaster_1 WHERE (ColorID = Product.ProductID) " + str + " AND (Fillingdate BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS BatchFillingDrumAfter, (SELECT ISNULL(SUM(srsdetail.qty), 0) AS Expr1 FROM srsdetail INNER JOIN srsm ON srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title WHERE (srsdetail.packing = 'Dubbi') AND (srsdetail.Status IN ('SRINV', 'TSRINV')) AND (srsdetail.prid = Product.ProductID) " + str + " AND (srsm.date < '" + Request["s_date"] + "')) AS SaleReturnDubbiBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Dubbi') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T) AS SaleReturnDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_4.prid = Product.ProductID) " + str + " AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleReturnQuarterBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Quarter') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_7) AS SaleReturnQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_3.prid = Product.ProductID) " + str + " AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleReturnGallonBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Gallon') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_6) AS SaleReturnGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SRINV', 'TSRINV')) AND (srsdetail_2.prid = Product.ProductID) " + str + " AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleReturnDrumBefore, (SELECT ISNULL(SUM(Expr1), 0) AS Expr1 FROM (SELECT DISTINCT OrderID, qty AS Expr1 FROM srsdetail AS srsdetail_6 WHERE (Status IN ('SRINV', 'TSRINV')) AND (packing = 'Drum') AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_6 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_6.Status) " + str + " AND (title IN ('SRINV', 'TSRINV'))))) AS T_5) AS SaleReturnDrumAfter, (SELECT ISNULL(SUM(srsdetail_5.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_5 INNER JOIN srsm AS srsm_5 ON srsdetail_5.OrderID = srsm_5.OrderID AND srsdetail_5.Status = srsm_5.title WHERE (srsdetail_5.packing = 'Dubbi') AND (srsdetail_5.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_5.prid = Product.ProductID) " + str + " AND (srsm_5.date < '" + Request["s_date"] + "')) AS SaleDubbiBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_9 WHERE (packing = 'Dubbi') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_9 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_9.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDubbiAfter, (SELECT ISNULL(SUM(srsdetail_4.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_4 INNER JOIN srsm AS srsm_4 ON srsdetail_4.OrderID = srsm_4.OrderID AND srsdetail_4.Status = srsm_4.title WHERE (srsdetail_4.packing = 'Quarter') AND (srsdetail_4.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_4.prid = Product.ProductID) " + str + " AND (srsm_4.date < '" + Request["s_date"] + "')) AS SaleQuarterBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_8 WHERE (packing = 'Quarter') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_8 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_8.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleQuarterAfter, (SELECT ISNULL(SUM(srsdetail_3.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_3 INNER JOIN srsm AS srsm_3 ON srsdetail_3.OrderID = srsm_3.OrderID AND srsdetail_3.Status = srsm_3.title WHERE (srsdetail_3.packing = 'Gallon') AND (srsdetail_3.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_3.prid = Product.ProductID) " + str + " AND (srsm_3.date < '" + Request["s_date"] + "')) AS SaleGallonBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_7 WHERE (packing = 'Gallon') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_7 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_7.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleGallonAfter, (SELECT ISNULL(SUM(srsdetail_2.qty), 0) AS Expr1 FROM srsdetail AS srsdetail_2 INNER JOIN srsm AS srsm_2 ON srsdetail_2.OrderID = srsm_2.OrderID AND srsdetail_2.Status = srsm_2.title WHERE (srsdetail_2.packing = 'Drum') AND (srsdetail_2.Status IN ('SINV', 'TSINV', 'WTSINV')) AND (srsdetail_2.prid = Product.ProductID) " + str + " AND (srsm_2.date < '" + Request["s_date"] + "')) AS SaleDrumBefore, (SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM srsdetail AS srsdetail_1 WHERE (packing = 'Drum') AND (Status IN ('SINV', 'TSINV', 'WTSINV')) AND (prid = Product.ProductID) AND (OrderID IN (SELECT OrderID FROM srsm AS srsm_1 WHERE (date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "') AND (title = srsdetail_1.Status) " + str + " AND (title IN ('SINV', 'TSINV', 'WTSINV'))))) AS SaleDrumAfter, (SELECT ISNULL(SUM(Orderdetail.qty), 0) AS Expr1 FROM Orderdetail INNER JOIN orderm ON Orderdetail.OrderID = orderm.OrderID WHERE (Orderdetail.packing = 'Dubbi') AND (Orderdetail.prid = Product.ProductID) " + str + " AND (orderm.date < '" + Request["s_date"] + "')) AS SaleTwoDubbiBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Dubbi') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDubbiAfter, (SELECT ISNULL(SUM(Orderdetail_4.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_4 INNER JOIN orderm AS orderm_4 ON Orderdetail_4.OrderID = orderm_4.OrderID WHERE (Orderdetail_4.packing = 'Quarter') AND (Orderdetail_4.prid = Product.ProductID) " + str + " AND (orderm_4.date < '" + Request["s_date"] + "')) AS SaleTwoQuarterBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Quarter') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoQuarterAfter, (SELECT ISNULL(SUM(Orderdetail_3.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_3 INNER JOIN orderm AS orderm_3 ON Orderdetail_3.OrderID = orderm_3.OrderID WHERE (Orderdetail_3.packing = 'Gallon') AND (Orderdetail_3.prid = Product.ProductID) " + str + " AND (orderm_3.date < '" + Request["s_date"] + "')) AS SaleTwoGallonBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Gallon') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoGallonAfter, (SELECT ISNULL(SUM(Orderdetail_2.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_2 INNER JOIN orderm AS orderm_2 ON Orderdetail_2.OrderID = orderm_2.OrderID WHERE (Orderdetail_2.packing = 'Drum') AND (Orderdetail_2.prid = Product.ProductID) " + str + " AND (orderm_2.date < '" + Request["s_date"] + "')) AS SaleTwoDrumBefore, (SELECT ISNULL(SUM(Orderdetail_1.qty), 0) AS Expr1 FROM Orderdetail AS Orderdetail_1 INNER JOIN orderm AS orderm_1 ON Orderdetail_1.OrderID = orderm_1.OrderID WHERE (Orderdetail_1.packing = 'Drum') AND (Orderdetail_1.prid = Product.ProductID) " + str + " AND (orderm_1.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS SaleTwoDrumAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDubbiBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Dubbi') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDubbiAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Quarter') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageQuarterBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Quarter') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageQuarterAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Gallon') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageGallonBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Gallon') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageGallonAfter, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Drum') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date < '" + Request["s_date"] + "')) AS DemageDrumBefore, (SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid WHERE (packing = 'Drum') AND (pid = Product.ProductID) " + str + " AND (sampledetail2.date BETWEEN '" + Request["s_date"] + "' AND '" + Request["e_date"] + "')) AS DemageDrumAfter FROM Product WHERE (CategoryID IN (SELECT CategoryID FROM Categories WHERE (RawProductCheck = 0)))) AS derivedtbl_1) AS derivedtbl_2 ORDER BY ProductName";

            var item_ledger = _context.Database.SqlQuery<FinishedGoodsQuery2>(query).ToList();
            var stockvalue = _context.Database.SqlQuery<stockvalue>("SElect ColorID,ColorName, SUM(((Dubbi*COST) + dubbi_pac)/FilledDubbiQTY)/COUNT(ColorID) AS dubbi, SUM(((Quarter * COST) + Quarter_pac)/FilledQuarterQTY)/COUNT(ColorID) AS Quarter, SUM(((Gallon * COST) + Gallon_pac)/FilledGallonQTY)/COUNT(ColorID) AS Gallon, SUM(((Drum * COST) + Drum_pac)/FilledDrumQTY)/COUNT(ColorID) AS Drum From (Select FilledDubbiQTY * FilledDubbiWeight AS Dubbi,ColorID,ColorName, CASE WHEN ISNULL(FilledDubbiQTY, 0) = 0 THEN 1 ELSE FilledDubbiQTY END AS FilledDubbiQTY, FilledQuarterQTY * FilledQuarterWeight AS Quarter, CASE WHEN ISNULL(FilledQuarterQTY, 0) = 0 THEN 1 ELSE FilledQuarterQTY END FilledQuarterQTY, FilledGallonQTY * FilledGallonWeight AS Gallon, CASE WHEN ISNULL(FilledGallonQTY, 0) = 0 THEN 1 ELSE FilledGallonQTY END AS FilledGallonQTY, FilledDrumQTY * FilledDrumWeight AS Drum, CASE WHEN ISNULL(FilledDrumQTY, 0) = 0 THEN 1 ELSE FilledDrumQTY END AS FilledDrumQTY, (SELECT isnull(SUM(cost),0) FROM tbl_BatchFillingBatches WHERE (sr = m.Id)) AS COST, (SELECT isnull(SUM(Total),0) FROM tbl_BatchFillingDetail where (type='Dubbi') AND (sr = m.Id)) AS dubbi_pac, (SELECT isnull(SUM(Total),0) FROM tbl_BatchFillingDetail where (type='Quarter') AND (sr = m.Id)) AS Quarter_pac, (SELECT isnull(SUM(Total),0) FROM tbl_BatchFillingDetail where (type='Gallon') AND (sr = m.Id)) AS Gallon_pac, (SELECT isnull(SUM(Total),0) FROM tbl_BatchFillingDetail where (type='Drum') AND (sr = m.Id)) AS Drum_pac FROM tbl_BatchFillingMaster m ) AS table1 group by ColorID,ColorName order by ColorID").ToList();



            ViewBag.StartDate = Convert.ToDateTime(StartDate).ToString("yyyy-MM-dd");
            ViewBag.EndDate = Convert.ToDateTime(Enddate).ToString("yyyy-MM-dd");
            ViewBag.stockvalue = stockvalue.ToList();


            return View(item_ledger);
        }
        public ActionResult FinishedItemLedgerIndex()
        {
            var pro_listsss = _context.Database.SqlQuery<Products>("select ProductName,ProductID,UnitPrice,ReorderLevel,vattax,CategoryID,[desc],Active from Product where CategoryID in (select CategoryID from Categories where RawProductCheck=0)").ToList();
            var regions = _context.Database.SqlQuery<Region>("select * from region").ToList();
            var Branch = _context.Database.SqlQuery<Branch>("select id,name from Branch").ToList();
            ViewBag.Region = regions;
            ViewBag.Branch = Branch;
            return View(pro_listsss);
        }   
        public ActionResult FinishedItemLedgerSearch(string itemsize, string item, string s_date, string e_date)
        {
            _context.Database.ExecuteSqlCommand("truncate table ItemLedger_finished");
            var StartDate = Convert.ToDateTime(Request["s_date"]);
            var Enddate = Convert.ToDateTime(Request["e_date"]);

            var region = Request["region"];
            var branch = Request["branch"];
            var str = "";
            var str1 = "";
            //decimal TransferDubbiQTY = 0;
            //decimal TransferQuarterQTY = 0;
            //decimal TransferGallonQTY = 0;
            //decimal TransferDrumQTY = 0;

            #region ----- Opening Calcutate-------------
            //opening qty
            decimal OpeningDubbi   =  _context.Database.SqlQuery<decimal>("select ISNULL(SUM(dubi_o), 0) AS Expr1    FROM   ProductFinishedRegion where pid=" + item + " AND regionId=" + region + " AND branchid= " + branch + " ").FirstOrDefault();
            decimal OpeningQuarter =  _context.Database.SqlQuery<decimal>("select ISNULL(SUM(quarter_o), 0) AS Expr1 FROM   ProductFinishedRegion where pid=" + item + " AND regionId=" + region + " AND branchid= " + branch + "").FirstOrDefault();
            decimal OpeningGallon  =  _context.Database.SqlQuery<decimal>("select ISNULL(SUM(gallon_o), 0) AS Expr1  FROM   ProductFinishedRegion where pid=" + item + " AND regionId=" + region + " AND branchid= " + branch + "").FirstOrDefault();
            decimal OpeningDrum    =  _context.Database.SqlQuery<decimal>("select ISNULL(SUM(drum_o), 0) AS Expr1    FROM   ProductFinishedRegion where pid=" + item + " AND regionId=" + region + " AND branchid= " + branch + "").FirstOrDefault();

            if (!string.IsNullOrEmpty(branch))
            {
                str1 = " AND branchid=" + branch;
                //branch Transfer
                OpeningDubbi   = OpeningDubbi   + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(rqty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Dubbi') AND status='Received'     AND (ToBranch=" + branch + ") AND (BranchTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
                OpeningQuarter = OpeningQuarter + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(rqty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Quarter') AND status='Received'   AND (ToBranch=" + branch + ") AND (BranchTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
                OpeningGallon  = OpeningGallon  + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(rqty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Gallon') AND status='Received'   AND (ToBranch=" + branch + ") AND (BranchTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
                OpeningDrum    = OpeningDrum    + _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(rqty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Drum') AND status='Received'     AND (ToBranch=" + branch + ") AND (BranchTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
                   
                OpeningDubbi   = OpeningDubbi   - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Dubbi')   AND (Frombranch=" + branch + ") AND (BranchTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
                OpeningQuarter = OpeningQuarter - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Quarter') AND (Frombranch=" + branch + ") AND (BranchTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
                OpeningGallon  = OpeningGallon  - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Gallon')  AND (Frombranch=" + branch + ") AND (BranchTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
                OpeningDrum    = OpeningDrum    - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Drum')    AND (Frombranch=" + branch + ") AND (BranchTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();

            }
          
            string item_name = _context.Database.SqlQuery<string>("select ProductName from Product where ProductID=" + item.Trim()).FirstOrDefault();


            //if (!string.IsNullOrEmpty(region))
            //{
            //    str = " AND regionid=" + region;

            //    TransferDubbiQTY   = TransferDubbiQTY   +  _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Dubbi')   AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            //    TransferQuarterQTY = TransferQuarterQTY +  _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Quarter') AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            //    TransferGallonQTY  = TransferGallonQTY  +  _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Gallon')  AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            //    TransferDrumQTY    = TransferDrumQTY    +  _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Drum')    AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();

            //    TransferDubbiQTY   = TransferDubbiQTY   - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Dubbi')   AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            //    TransferQuarterQTY = TransferQuarterQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Quarter') AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            //    TransferGallonQTY  = TransferGallonQTY  - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Gallon')  AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            //    TransferDrumQTY    = TransferDrumQTY    - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Drum')    AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();

            //}
            //opening
            // decimal OpeningDubbi = _context.Database.SqlQuery<decimal>("select OpeningDubbi from Product where ProductID=" + item).FirstOrDefault();
            // decimal OpeningQuarter = _context.Database.SqlQuery<decimal>("select OpeningQuarter from Product where ProductID=" + item).FirstOrDefault();
            //decimal OpeningGallon = _context.Database.SqlQuery<decimal>("select OpeningGallon from Product where ProductID=" + item).FirstOrDefault();
            // decimal OpeningDrum = _context.Database.SqlQuery<decimal>("select OpeningDrum from Product where ProductID=" + item).FirstOrDefault();



            ////stock Distribution Before
            //TransferDubbiQTY   = TransferDubbiQTY   - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Dubbi')   " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            //TransferQuarterQTY = TransferQuarterQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Quarter') " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            //TransferGallonQTY  = TransferGallonQTY  - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Gallon')  " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
            //TransferDrumQTY    = TransferDrumQTY    - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Drum')    " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();



            ////BatchFillingBefore
            //decimal FilledDubbiQTY   = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDubbiQTY),0) from tbl_BatchFillingMaster    where ColorID=" + item + " " + str + "  and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //decimal FilledQuarterQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledQuarterQTY),0) from tbl_BatchFillingMaster  where ColorID=" + item + " " + str + "  and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //decimal FilledGallonQTY  = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledGallonQTY),0) from tbl_BatchFillingMaster   where ColorID=" + item + " " + str + "  and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //decimal FilledDrumQTY    = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDrumQTY),0) from tbl_BatchFillingMaster     where ColorID=" + item + " " + str + "  and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

            //SaleReturnBefore
            decimal opening_saletaxDubbi   = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Dubbi'   and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + " " + str1 + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Quarter' and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + " " + str1 + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_saletaxGallon  = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Gallon'  and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + " " + str1 + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            decimal opening_saletaxDrum    = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Drum'    and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + " " + str1 + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

            //SaleBefore
            opening_saletaxDubbi   = opening_saletaxDubbi   - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Dubbi' and Status in ('SINV','TSINV','WTSINV')   and prid=" + item + " " + str + " " + str1 + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Quarter' and Status in ('SINV','TSINV','WTSINV') and prid=" + item + " " + str + " " + str1 + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxGallon  = opening_saletaxGallon  - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Gallon' and Status in ('SINV','TSINV','WTSINV')  and prid=" + item + " " + str + " " + str1 + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxDrum    = opening_saletaxDrum    - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Drum' and Status in ('SINV','TSINV','WTSINV')    and prid=" + item + " " + str + " " + str1 + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

            //SaleTwoBefore
            opening_saletaxDubbi   = opening_saletaxDubbi   - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Dubbi'   and prid=" + item + " " + str + " " + str1 + " and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Quarter' and prid=" + item + " " + str + " " + str1 + " and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxGallon  = opening_saletaxGallon  - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Gallon'  and prid=" + item + " " + str + " " + str1 + " and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            opening_saletaxDrum    = opening_saletaxDrum    - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Drum'    and prid=" + item + " " + str + " " + str1 + " and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

            //DemageBefore
            //opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Dubbi' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2  where packing='Quarter' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Gallon' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Drum' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

            //opening_saletaxDubbi   = opening_saletaxDubbi   - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid where packing='Dubbi'    and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid  where packing='Quarter' and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //opening_saletaxGallon  = opening_saletaxGallon  - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid where packing='Gallon'   and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
            //opening_saletaxDrum    = opening_saletaxDrum    - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid where packing='Drum'     and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

            //decimal openingDubbi = OpeningDubbi + FilledDubbiQTY + opening_saletaxDubbi;
            //decimal openingQuarter = OpeningQuarter + FilledQuarterQTY + opening_saletaxQuarter;
            //decimal openingGallon = OpeningGallon + FilledGallonQTY + opening_saletaxGallon;
            //decimal openingDrum = OpeningDrum + FilledDrumQTY + opening_saletaxDrum;
            
            decimal openingDubbi = OpeningDubbi  + opening_saletaxDubbi;
            decimal openingQuarter = OpeningQuarter  + opening_saletaxQuarter;
            decimal openingGallon = OpeningGallon  + opening_saletaxGallon;
            decimal openingDrum = OpeningDrum  + opening_saletaxDrum;

            decimal opening_Dubbi = openingDubbi;
            decimal opening_Quarter = openingQuarter;
            decimal opening_Gallon = openingGallon;
            decimal opening_Drum = openingDrum;

            #endregion 


            foreach (DateTime day in EachDay(StartDate, Enddate))
            {
                string description = "";
                decimal FilledDubbi = 0;
                decimal FilledQuarter = 0;
                decimal FilledGallon = 0;
                decimal FilledDrum = 0;

                //SaleReturn IN SRINV
                decimal[] batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('SRINV') and srsdetail.prid=" + item + "  " + str + " " + str1 + " and srsm.date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
                for (int i = 0; i < batchserial.Distinct().Count(); i++)
                {
                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Dubbi'   and Status in ('SRINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('SRINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Gallon'  and Status in ('SRINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Drum'    and Status in ('SRINV') and prid=" + item).FirstOrDefault();
                    description = "Sale Return Inv # " + batchserial[i];
                    openingDubbi = openingDubbi + opening_saletaxDubbi;
                    openingQuarter = openingQuarter + opening_saletaxQuarter;
                    openingGallon = openingGallon + opening_saletaxGallon;
                    openingDrum = openingDrum + opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }
                //SaleReturn IN TSRINV
                batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('TSRINV') and srsdetail.prid=" + item + " " + str + " " + str1 + "  and srsm.date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
                for (int i = 0; i < batchserial.Distinct().Count(); i++)
                {
                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
                    description = "Sale Return Inv # " + batchserial[i];
                    openingDubbi = openingDubbi + opening_saletaxDubbi;
                    openingQuarter = openingQuarter + opening_saletaxQuarter;
                    openingGallon = openingGallon + opening_saletaxGallon;
                    openingDrum = openingDrum + opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }

                //Sale SINV
                batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('SINV') and prid=" + item + " " + str + "" + str1 + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
                for (int i = 0; i < batchserial.Distinct().Count(); i++)
                {

                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('SINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('SINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('SINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('SINV') and prid=" + item).FirstOrDefault();
                    description = "Sale Inv # " + batchserial[i];
                    openingDubbi = openingDubbi - opening_saletaxDubbi;
                    openingQuarter = openingQuarter - opening_saletaxQuarter;
                    openingGallon = openingGallon - opening_saletaxGallon;
                    openingDrum = openingDrum - opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }
                //Sale TSINV
                batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('TSINV') and prid=" + item + " " + str + "" + str1 + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
                for (int i = 0; i < batchserial.Distinct().Count(); i++)
                {

                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
                    description = "Sale Inv # " + batchserial[i];
                    openingDubbi = openingDubbi - opening_saletaxDubbi;
                    openingQuarter = openingQuarter - opening_saletaxQuarter;
                    openingGallon = openingGallon - opening_saletaxGallon;
                    openingDrum = openingDrum - opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }
                //Sale WTSINV
                batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('WTSINV') and prid=" + item + " " + str + "" + str1 + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
                for (int i = 0; i < batchserial.Distinct().Count(); i++)
                {

                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
                    description = "Sale Inv # " + batchserial[i];
                    openingDubbi = openingDubbi - opening_saletaxDubbi;
                    openingQuarter = openingQuarter - opening_saletaxQuarter;
                    openingGallon = openingGallon - opening_saletaxGallon;
                    openingDrum = openingDrum - opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }

                //SaleTwoBefore
                batchserial = _context.Database.SqlQuery<decimal>("select orderm.OrderID from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID where prid=" + item + " " + str + "" + str1 + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by orderm.OrderID").ToArray();
                for (int i = 0; i < batchserial.Distinct().Count(); i++)
                {
                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail      where OrderID=" + batchserial[i] + " and packing='Dubbi' and prid=" + item).FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail    where OrderID=" + batchserial[i] + " and packing='Quarter' and prid=" + item).FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail     where OrderID=" + batchserial[i] + " and packing='Gallon' and prid=" + item).FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail       where OrderID=" + batchserial[i] + " and packing='Drum' and prid=" + item).FirstOrDefault();
                    description = "Sale Inv # " + batchserial[i];
                    openingDubbi = openingDubbi - opening_saletaxDubbi;
                    openingQuarter = openingQuarter - opening_saletaxQuarter;
                    openingGallon = openingGallon - opening_saletaxGallon;
                    openingDrum = openingDrum - opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }
                // Branch transfer IN
                batchserial = _context.Database.SqlQuery<decimal>("SELECT BranchTransferM.invid FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " ) AND status='Received'  AND (ToBranch=" + branch + ") AND (BranchTransferM.date = '" + day.Date.ToString("yyy-MM-dd") + "')  group by BranchTransferM.invid").ToArray();
                for (int i = 0; i < batchserial.Distinct().Count(); i++)
                {
                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(rqty),0) from BranchTransferDetail where invid=" + batchserial[i] + " and size='Dubbi'   and pid=" + item).FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(rqty),0) from BranchTransferDetail where invid=" + batchserial[i] + " and size='Quarter' and pid=" + item).FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(rqty),0) from BranchTransferDetail where invid=" + batchserial[i] + " and size='Gallon'  and pid=" + item).FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(rqty),0) from BranchTransferDetail where invid=" + batchserial[i] + " and size='Drum'    and pid=" + item).FirstOrDefault();
                    description = "Branch Transfer IN Inv # " + batchserial[i];
                    openingDubbi = openingDubbi + opening_saletaxDubbi;
                    openingQuarter = openingQuarter + opening_saletaxQuarter;
                    openingGallon = openingGallon + opening_saletaxGallon;
                    openingDrum = openingDrum + opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }

                //Branch transfer Out
                batchserial = _context.Database.SqlQuery<decimal>("SELECT BranchTransferM.invid FROM BranchTransferM INNER JOIN BranchTransferDetail on BranchTransferM.invid=BranchTransferDetail.invid WHERE (pid = " + item + " )   AND (FromBranch=" + branch + ") AND (BranchTransferM.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by BranchTransferM.invid").ToArray();
                for (int i = 0; i < batchserial.Distinct().Count(); i++)
                {
                    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from BranchTransferDetail where invid=" + batchserial[i] + " and size='Dubbi'   and pid=" + item).FirstOrDefault();
                    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from BranchTransferDetail where invid=" + batchserial[i] + " and size='Quarter' and pid=" + item).FirstOrDefault();
                    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from BranchTransferDetail where invid=" + batchserial[i] + " and size='Gallon'  and pid=" + item).FirstOrDefault();
                    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from BranchTransferDetail where invid=" + batchserial[i] + " and size='Drum'    and pid=" + item).FirstOrDefault();
                    description = "Branch Transfer Out Inv # " + batchserial[i];
                    openingDubbi = openingDubbi - opening_saletaxDubbi;
                    openingQuarter = openingQuarter - opening_saletaxQuarter;
                    openingGallon = openingGallon - opening_saletaxGallon;
                    openingDrum = openingDrum - opening_saletaxDrum;
                    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                }

                #region   ------Comment ----





                ////BatchFilling IN
                //decimal[] batchserial = _context.Database.SqlQuery<decimal>("select tbl_BatchFillingMaster.Id from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where ProductID=" + item + "  " + str + " and Fillingdate = '" + day.Date.ToString("yyyy-MM-dd") + "' Group by tbl_BatchFillingMaster.Id").ToArray();
                //for (int i = 0; i < batchserial.Distinct().Count(); i++)
                //{
                //    FilledDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDubbiQTY),0) from tbl_BatchFillingMaster     where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();
                //    FilledQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledQuarterQTY),0) from tbl_BatchFillingMaster where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();
                //    FilledGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledGallonQTY),0) from tbl_BatchFillingMaster   where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();
                //    FilledDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDrumQTY),0) from tbl_BatchFillingMaster       where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();

                //    string invid = _context.Database.SqlQuery<string>("select top(1) batchn from tbl_BatchFillingBatches  where Sr=" + batchserial[i] + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

                //    description = "Batch Filling # " + invid;
                //    openingDubbi = openingDubbi + FilledDubbi;
                //    openingQuarter = openingQuarter + FilledQuarter;
                //    openingGallon = openingGallon + FilledGallon;
                //    openingDrum = openingDrum + FilledDrum;
                //    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + FilledDubbi + "," + FilledQuarter + "," + FilledGallon + "," + FilledDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                //}




                ////DemageBefore
                //batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Wastage') AND (sampledetail2.pid = " + item + ") " + str + " and (sampledetail2.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid").ToArray();
                //for (int i = 0; i < batchserial.Distinct().Count(); i++)
                //{
                //    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2     WHERE packing='Dubbi' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
                //    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2   WHERE packing='Quarter' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
                //    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2    WHERE packing='Gallon' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
                //    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2      WHERE packing='Drum' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
                //    description = "Wastage Inv # " + batchserial[i];
                //    openingDubbi = openingDubbi - opening_saletaxDubbi;
                //    openingQuarter = openingQuarter - opening_saletaxQuarter;
                //    openingGallon = openingGallon - opening_saletaxGallon;
                //    openingDrum = openingDrum - opening_saletaxDrum;
                //    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                //}

                //batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status <> 'Wastage') AND (sampledetail2.pid = " + item + ") " + str + " and (sampledetail2.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid").ToArray();
                //for (int i = 0; i < batchserial.Distinct().Count(); i++)
                //{
                //    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2     WHERE packing='Dubbi' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
                //    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2   WHERE packing='Quarter' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
                //    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2    WHERE packing='Gallon' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
                //    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2      WHERE packing='Drum' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
                //    description = "Damage Inv # " + batchserial[i];
                //    openingDubbi = openingDubbi - opening_saletaxDubbi;
                //    openingQuarter = openingQuarter - opening_saletaxQuarter;
                //    openingGallon = openingGallon - opening_saletaxGallon;
                //    openingDrum = openingDrum - opening_saletaxDrum;
                //    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                //}



                ////Stock Region transfer IN
                //batchserial = _context.Database.SqlQuery<decimal>("SELECT FinishTransferM.invid FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + ")  AND (ToRegion=" + region + ") AND (FinishTransferM.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by FinishTransferM.invid").ToArray();
                //for (int i = 0; i < batchserial.Distinct().Count(); i++)
                //{
                //    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail      where invid=" + batchserial[i] + " and size='Dubbi' and pid=" + item).FirstOrDefault();
                //    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail    where invid=" + batchserial[i] + " and size='Quarter' and pid=" + item).FirstOrDefault();
                //    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail     where invid=" + batchserial[i] + " and size='Gallon' and pid=" + item).FirstOrDefault();
                //    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail       where invid=" + batchserial[i] + " and size='Drum' and pid=" + item).FirstOrDefault();
                //    description = "Transfer IN Inv # " + batchserial[i];
                //    openingDubbi = openingDubbi + opening_saletaxDubbi;
                //    openingQuarter = openingQuarter + opening_saletaxQuarter;
                //    openingGallon = openingGallon + opening_saletaxGallon;
                //    openingDrum = openingDrum + opening_saletaxDrum;
                //    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                //}
                ////Stock Region transfer Out
                //batchserial = _context.Database.SqlQuery<decimal>("SELECT FinishTransferM.invid FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + ")  AND (FromRegion=" + region + ") AND (FinishTransferM.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by FinishTransferM.invid").ToArray();
                //for (int i = 0; i < batchserial.Distinct().Count(); i++)
                //{
                //    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail      where invid=" + batchserial[i] + " and size='Dubbi' and pid=" + item).FirstOrDefault();
                //    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail    where invid=" + batchserial[i] + " and size='Quarter' and pid=" + item).FirstOrDefault();
                //    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail     where invid=" + batchserial[i] + " and size='Gallon' and pid=" + item).FirstOrDefault();
                //    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail       where invid=" + batchserial[i] + " and size='Drum' and pid=" + item).FirstOrDefault();
                //    description = "Transfer Out Inv # " + batchserial[i];
                //    openingDubbi = openingDubbi - opening_saletaxDubbi;
                //    openingQuarter = openingQuarter - opening_saletaxQuarter;
                //    openingGallon = openingGallon - opening_saletaxGallon;
                //    openingDrum = openingDrum - opening_saletaxDrum;
                //    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                //}



                ////StockDistibution Out
                //batchserial = _context.Database.SqlQuery<decimal>("SELECT sd.invid  FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " )  " + str + " AND (sd.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by sd.invid").ToArray();
                //for (int i = 0; i < batchserial.Distinct().Count(); i++)
                //{
                //    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1      where invid=" + batchserial[i] + " and packing='Dubbi' and pid=" + item).FirstOrDefault();
                //    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1    where invid=" + batchserial[i] + " and packing='Quarter' and pid=" + item).FirstOrDefault();
                //    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1     where invid=" + batchserial[i] + " and packing='Gallon' and pid=" + item).FirstOrDefault();
                //    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1       where invid=" + batchserial[i] + " and packing='Drum' and pid=" + item).FirstOrDefault();
                //    description = "Stock Distibution  Inv # " + batchserial[i];
                //    openingDubbi = openingDubbi - opening_saletaxDubbi;
                //    openingQuarter = openingQuarter - opening_saletaxQuarter;
                //    openingGallon = openingGallon - opening_saletaxGallon;
                //    openingDrum = openingDrum - opening_saletaxDrum;
                //    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
                //}
                #endregion


            }
            string strqry = "";

            if (itemsize == "1")
                strqry = "select ID, Date, Description, DabbiIN, DabbiOUT, DabbiBAL from ItemLedger_finished where DabbiIN!=0 OR DabbiOUT!=0";
            if (itemsize == "2")
                strqry = "select ID, Date, Description, QuarterIN as DabbiIN, QuarterOUT as DabbiOUT, QuarterBAL as DabbiBAL from ItemLedger_finished where QuarterIN!=0 OR QuarterOUT!=0";
            if (itemsize == "3")
                strqry = "select ID, Date, Description, GallonIN as DabbiIN, GallonOUT as DabbiOUT, GallonBAL as DabbiBAL from ItemLedger_finished where GallonIN!=0 OR GallonOUT!=0";
            if (itemsize == "4")
                strqry = "select ID, Date, Description, DrumIN as DabbiIN, DrumOUT as DabbiOUT, DrumBAL as DabbiBAL from ItemLedger_finished where DrumIN!=0 OR DrumOUT!=0";

            var item_ledger = _context.Database.SqlQuery<ItemLedger_finished>(strqry).ToList();
            ViewBag.StartDate = Convert.ToDateTime(s_date).ToString("yyyy-MM-dd");
            ViewBag.EndDate = Convert.ToDateTime(e_date).ToString("yyyy-MM-dd");

            if (itemsize == "1")
                ViewBag.OpeningDubbi = opening_Dubbi;
            if (itemsize == "2")
                ViewBag.OpeningDubbi = opening_Quarter;
            if (itemsize == "3")
                ViewBag.OpeningDubbi = opening_Gallon;
            if (itemsize == "4")
                ViewBag.OpeningDubbi = opening_Drum;

            if (itemsize == "1")
                ViewBag.itemname = item_name + " (Dubbi)";
            if (itemsize == "2")
                ViewBag.itemname = item_name + " (Quarter)";
            if (itemsize == "3")
                ViewBag.itemname = item_name + " (Gallon)";
            if (itemsize == "4")
                ViewBag.itemname = item_name + " (Drum)";

            return View(item_ledger);
        }

        public IEnumerable<DateTime> EachDay(DateTime from, DateTime thru)
        {
            for (var day = from.Date; day.Date <= thru.Date; day = day.AddDays(1))
                yield return day;
        }

    }
}




//public ActionResult FinishedItemLedgerSearch(string itemsize, string item, string s_date, string e_date)
//{
//    _context.Database.ExecuteSqlCommand("truncate table ItemLedger_finished");
//    var StartDate = Convert.ToDateTime(Request["s_date"]);
//    var Enddate = Convert.ToDateTime(Request["e_date"]);

//    var region = Request["region"];
//    var branch = Request["branch"];
//    var str = "";
//    decimal TransferDubbiQTY = 0;
//    decimal TransferQuarterQTY = 0;
//    decimal TransferGallonQTY = 0;
//    decimal TransferDrumQTY = 0;
//    if (region != "0")
//    {
//        str = " AND regionid=" + region;

//        TransferDubbiQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Dubbi')   AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferQuarterQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Quarter') AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferGallonQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Gallon')  AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferDrumQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Drum')    AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();

//        TransferDubbiQTY = TransferDubbiQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Dubbi')   AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferQuarterQTY = TransferQuarterQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Quarter') AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferGallonQTY = TransferGallonQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Gallon')  AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferDrumQTY = TransferDrumQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Drum')    AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();




//    }

//    //opening
//    // decimal OpeningDubbi = _context.Database.SqlQuery<decimal>("select OpeningDubbi from Product where ProductID=" + item).FirstOrDefault();
//    // decimal OpeningQuarter = _context.Database.SqlQuery<decimal>("select OpeningQuarter from Product where ProductID=" + item).FirstOrDefault();
//    //decimal OpeningGallon = _context.Database.SqlQuery<decimal>("select OpeningGallon from Product where ProductID=" + item).FirstOrDefault();
//    // decimal OpeningDrum = _context.Database.SqlQuery<decimal>("select OpeningDrum from Product where ProductID=" + item).FirstOrDefault();


//    string item_name = _context.Database.SqlQuery<string>("select ProductName from Product where ProductID=" + item.Trim()).FirstOrDefault();

//    //stock Distribution Before
//    TransferDubbiQTY = TransferDubbiQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Dubbi')   " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//    TransferQuarterQTY = TransferQuarterQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Quarter') " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//    TransferGallonQTY = TransferGallonQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Gallon')  " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//    TransferDrumQTY = TransferDrumQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Drum')    " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();


//    decimal OpeningDubbi = TransferDubbiQTY + _context.Database.SqlQuery<decimal>("select ISNULL(SUM(dubi_o), 0) AS Expr1    FROM   ProductFinishedRegion where pid=" + item + " " + str + "  ").FirstOrDefault();
//    decimal OpeningQuarter = TransferQuarterQTY + _context.Database.SqlQuery<decimal>("select ISNULL(SUM(quarter_o), 0) AS Expr1 FROM   ProductFinishedRegion where pid=" + item + " " + str + "  ").FirstOrDefault();
//    decimal OpeningGallon = TransferGallonQTY + _context.Database.SqlQuery<decimal>("select ISNULL(SUM(gallon_o), 0) AS Expr1  FROM   ProductFinishedRegion where pid=" + item + " " + str + "  ").FirstOrDefault();
//    decimal OpeningDrum = TransferDrumQTY + _context.Database.SqlQuery<decimal>("select ISNULL(SUM(drum_o), 0) AS Expr1   FROM   ProductFinishedRegion where pid=" + item + " " + str + "  ").FirstOrDefault();

//    //BatchFillingBefore
//    decimal FilledDubbiQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDubbiQTY),0) from tbl_BatchFillingMaster      where ColorID=" + item + " " + str + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal FilledQuarterQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledQuarterQTY),0) from tbl_BatchFillingMaster  where ColorID=" + item + " " + str + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal FilledGallonQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledGallonQTY),0) from tbl_BatchFillingMaster    where ColorID=" + item + " " + str + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal FilledDrumQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDrumQTY),0) from tbl_BatchFillingMaster        where ColorID=" + item + " " + str + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    //SaleReturnBefore
//    decimal opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Dubbi' and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Quarter' and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title  where packing='Gallon' and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Drum' and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    //SaleBefore
//    opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Dubbi' and Status in ('SINV','TSINV','WTSINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Quarter' and Status in ('SINV','TSINV','WTSINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Gallon' and Status in ('SINV','TSINV','WTSINV') and prid=" + item + " " + str + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Drum' and Status in ('SINV','TSINV','WTSINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    //SaleTwoBefore
//    opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Dubbi' and prid=" + item + " " + str + " and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Quarter' and prid=" + item + "  " + str + " and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Gallon' and prid=" + item + " " + str + "  and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Drum' and prid=" + item + " " + str + "  and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    //DemageBefore
//    //opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Dubbi' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    //opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2  where packing='Quarter' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    //opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Gallon' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    //opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Drum' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid where packing='Dubbi' and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid  where packing='Quarter' and pid=" + item + " " + str + "  and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid where packing='Gallon' and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid where packing='Drum' and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    decimal openingDubbi = OpeningDubbi + FilledDubbiQTY + opening_saletaxDubbi;
//    decimal openingQuarter = OpeningQuarter + FilledQuarterQTY + opening_saletaxQuarter;
//    decimal openingGallon = OpeningGallon + FilledGallonQTY + opening_saletaxGallon;
//    decimal openingDrum = OpeningDrum + FilledDrumQTY + opening_saletaxDrum;

//    decimal opening_Dubbi = openingDubbi;
//    decimal opening_Quarter = openingQuarter;
//    decimal opening_Gallon = openingGallon;
//    decimal opening_Drum = openingDrum;

//    foreach (DateTime day in EachDay(StartDate, Enddate))
//    {
//        string description = "";
//        decimal FilledDubbi = 0;
//        decimal FilledQuarter = 0;
//        decimal FilledGallon = 0;
//        decimal FilledDrum = 0;

//        //BatchFilling IN
//        decimal[] batchserial = _context.Database.SqlQuery<decimal>("select tbl_BatchFillingMaster.Id from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where ProductID=" + item + "  " + str + " and Fillingdate = '" + day.Date.ToString("yyyy-MM-dd") + "' Group by tbl_BatchFillingMaster.Id").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            FilledDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDubbiQTY),0) from tbl_BatchFillingMaster     where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();
//            FilledQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledQuarterQTY),0) from tbl_BatchFillingMaster where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();
//            FilledGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledGallonQTY),0) from tbl_BatchFillingMaster   where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();
//            FilledDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDrumQTY),0) from tbl_BatchFillingMaster       where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();

//            string invid = _context.Database.SqlQuery<string>("select top(1) batchn from tbl_BatchFillingBatches  where Sr=" + batchserial[i] + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//            description = "Batch Filling # " + invid;
//            openingDubbi = openingDubbi + FilledDubbi;
//            openingQuarter = openingQuarter + FilledQuarter;
//            openingGallon = openingGallon + FilledGallon;
//            openingDrum = openingDrum + FilledDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + FilledDubbi + "," + FilledQuarter + "," + FilledGallon + "," + FilledDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }



//        //SaleReturn IN SRINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('SRINV') and srsdetail.prid=" + item + "  " + str + " and srsm.date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('SRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('SRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('SRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('SRINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Return Inv # " + batchserial[i];
//            openingDubbi = openingDubbi + opening_saletaxDubbi;
//            openingQuarter = openingQuarter + opening_saletaxQuarter;
//            openingGallon = openingGallon + opening_saletaxGallon;
//            openingDrum = openingDrum + opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }
//        //SaleReturn IN TSRINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('TSRINV') and srsdetail.prid=" + item + " " + str + "  and srsm.date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Return Inv # " + batchserial[i];
//            openingDubbi = openingDubbi + opening_saletaxDubbi;
//            openingQuarter = openingQuarter + opening_saletaxQuarter;
//            openingGallon = openingGallon + opening_saletaxGallon;
//            openingDrum = openingDrum + opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }




//        //Sale SINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('SINV') and prid=" + item + " " + str + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {

//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('SINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('SINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('SINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('SINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }
//        //Sale TSINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('TSINV') and prid=" + item + " " + str + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {

//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }
//        //Sale WTSINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('WTSINV') and prid=" + item + " " + str + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {

//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }




//        //DemageBefore
//        batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Wastage') AND (sampledetail2.pid = " + item + ") " + str + " and (sampledetail2.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2     WHERE packing='Dubbi' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2   WHERE packing='Quarter' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2    WHERE packing='Gallon' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2      WHERE packing='Drum' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            description = "Wastage Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }

//        batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status <> 'Wastage') AND (sampledetail2.pid = " + item + ") " + str + " and (sampledetail2.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2     WHERE packing='Dubbi' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2   WHERE packing='Quarter' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2    WHERE packing='Gallon' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2      WHERE packing='Drum' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            description = "Damage Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }


//        //SaleTwoBefore
//        batchserial = _context.Database.SqlQuery<decimal>("select orderm.OrderID from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID where prid=" + item + " " + str + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by orderm.OrderID").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail      where OrderID=" + batchserial[i] + " and packing='Dubbi' and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail    where OrderID=" + batchserial[i] + " and packing='Quarter' and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail     where OrderID=" + batchserial[i] + " and packing='Gallon' and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail       where OrderID=" + batchserial[i] + " and packing='Drum' and prid=" + item).FirstOrDefault();
//            description = "Sale Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }

//        //transfer IN
//        batchserial = _context.Database.SqlQuery<decimal>("SELECT FinishTransferM.invid FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + ")  AND (ToRegion=" + region + ") AND (FinishTransferM.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by FinishTransferM.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail      where invid=" + batchserial[i] + " and size='Dubbi' and pid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail    where invid=" + batchserial[i] + " and size='Quarter' and pid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail     where invid=" + batchserial[i] + " and size='Gallon' and pid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail       where invid=" + batchserial[i] + " and size='Drum' and pid=" + item).FirstOrDefault();
//            description = "Transfer IN Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }
//        //transfer Out
//        batchserial = _context.Database.SqlQuery<decimal>("SELECT FinishTransferM.invid FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + ")  AND (FromRegion=" + region + ") AND (FinishTransferM.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by FinishTransferM.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail      where invid=" + batchserial[i] + " and size='Dubbi' and pid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail    where invid=" + batchserial[i] + " and size='Quarter' and pid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail     where invid=" + batchserial[i] + " and size='Gallon' and pid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail       where invid=" + batchserial[i] + " and size='Drum' and pid=" + item).FirstOrDefault();
//            description = "Transfer Out Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }


//        //StockDistibution Out
//        batchserial = _context.Database.SqlQuery<decimal>("SELECT sd.invid  FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " )  " + str + " AND (sd.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by sd.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1      where invid=" + batchserial[i] + " and packing='Dubbi' and pid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1    where invid=" + batchserial[i] + " and packing='Quarter' and pid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1     where invid=" + batchserial[i] + " and packing='Gallon' and pid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1       where invid=" + batchserial[i] + " and packing='Drum' and pid=" + item).FirstOrDefault();
//            description = "Stock Distibution  Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }




//    }
//    string strqry = "";

//    if (itemsize == "1")
//        strqry = "select ID, Date, Description, DabbiIN, DabbiOUT, DabbiBAL from ItemLedger_finished where DabbiIN!=0 OR DabbiOUT!=0";
//    if (itemsize == "2")
//        strqry = "select ID, Date, Description, QuarterIN as DabbiIN, QuarterOUT as DabbiOUT, QuarterBAL as DabbiBAL from ItemLedger_finished where QuarterIN!=0 OR QuarterOUT!=0";
//    if (itemsize == "3")
//        strqry = "select ID, Date, Description, GallonIN as DabbiIN, GallonOUT as DabbiOUT, GallonBAL as DabbiBAL from ItemLedger_finished where GallonIN!=0 OR GallonOUT!=0";
//    if (itemsize == "4")
//        strqry = "select ID, Date, Description, DrumIN as DabbiIN, DrumOUT as DabbiOUT, DrumBAL as DabbiBAL from ItemLedger_finished where DrumIN!=0 OR DrumOUT!=0";

//    var item_ledger = _context.Database.SqlQuery<ItemLedger_finished>(strqry).ToList();
//    ViewBag.StartDate = Convert.ToDateTime(s_date).ToString("yyyy-MM-dd");
//    ViewBag.EndDate = Convert.ToDateTime(e_date).ToString("yyyy-MM-dd");

//    if (itemsize == "1")
//        ViewBag.OpeningDubbi = opening_Dubbi;
//    if (itemsize == "2")
//        ViewBag.OpeningDubbi = opening_Quarter;
//    if (itemsize == "3")
//        ViewBag.OpeningDubbi = opening_Gallon;
//    if (itemsize == "4")
//        ViewBag.OpeningDubbi = opening_Drum;

//    if (itemsize == "1")
//        ViewBag.itemname = item_name + " (Dubbi)";
//    if (itemsize == "2")
//        ViewBag.itemname = item_name + " (Quarter)";
//    if (itemsize == "3")
//        ViewBag.itemname = item_name + " (Gallon)";
//    if (itemsize == "4")
//        ViewBag.itemname = item_name + " (Drum)";

//    return View(item_ledger);
//}

//public ActionResult FinishedItemLedgerSearch(string itemsize, string item, string s_date, string e_date)
//{
//    _context.Database.ExecuteSqlCommand("truncate table ItemLedger_finished");
//    var StartDate = Convert.ToDateTime(Request["s_date"]);
//    var Enddate = Convert.ToDateTime(Request["e_date"]);

//    var region = Request["region"];
//    var str = "";
//    decimal TransferDubbiQTY = 0;
//    decimal TransferQuarterQTY = 0;
//    decimal TransferGallonQTY = 0;
//    decimal TransferDrumQTY = 0;
//    if (region != "0")
//    {
//        str = " AND regionid=" + region;

//        TransferDubbiQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Dubbi')   AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferQuarterQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Quarter') AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferGallonQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Gallon')  AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferDrumQTY = _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Drum')    AND (ToRegion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();

//        TransferDubbiQTY = TransferDubbiQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Dubbi')   AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferQuarterQTY = TransferQuarterQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Quarter') AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferGallonQTY = TransferGallonQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Gallon')  AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//        TransferDrumQTY = TransferDrumQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + " ) AND (size = 'Drum')    AND (Fromregion=" + region + ") AND (FinishTransferM.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();




//    }

//    //opening
//    // decimal OpeningDubbi = _context.Database.SqlQuery<decimal>("select OpeningDubbi from Product where ProductID=" + item).FirstOrDefault();
//    // decimal OpeningQuarter = _context.Database.SqlQuery<decimal>("select OpeningQuarter from Product where ProductID=" + item).FirstOrDefault();
//    //decimal OpeningGallon = _context.Database.SqlQuery<decimal>("select OpeningGallon from Product where ProductID=" + item).FirstOrDefault();
//    // decimal OpeningDrum = _context.Database.SqlQuery<decimal>("select OpeningDrum from Product where ProductID=" + item).FirstOrDefault();


//    string item_name = _context.Database.SqlQuery<string>("select ProductName from Product where ProductID=" + item.Trim()).FirstOrDefault();

//    //stock Distribution Before
//    TransferDubbiQTY = TransferDubbiQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Dubbi')   " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//    TransferQuarterQTY = TransferQuarterQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Quarter') " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//    TransferGallonQTY = TransferGallonQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Gallon')  " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();
//    TransferDrumQTY = TransferDrumQTY - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(qty), 0) AS Expr1 FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " ) AND (packing = 'Drum')    " + str + " AND (sd.date < '" + StartDate.ToString("yyyy-MM-dd") + "')").FirstOrDefault();


//    decimal OpeningDubbi = TransferDubbiQTY + _context.Database.SqlQuery<decimal>("select ISNULL(SUM(dubi_o), 0) AS Expr1    FROM   ProductFinishedRegion where pid=" + item + " " + str + "  ").FirstOrDefault();
//    decimal OpeningQuarter = TransferQuarterQTY + _context.Database.SqlQuery<decimal>("select ISNULL(SUM(quarter_o), 0) AS Expr1 FROM   ProductFinishedRegion where pid=" + item + " " + str + "  ").FirstOrDefault();
//    decimal OpeningGallon = TransferGallonQTY + _context.Database.SqlQuery<decimal>("select ISNULL(SUM(gallon_o), 0) AS Expr1  FROM   ProductFinishedRegion where pid=" + item + " " + str + "  ").FirstOrDefault();
//    decimal OpeningDrum = TransferDrumQTY + _context.Database.SqlQuery<decimal>("select ISNULL(SUM(drum_o), 0) AS Expr1   FROM   ProductFinishedRegion where pid=" + item + " " + str + "  ").FirstOrDefault();

//    //BatchFillingBefore
//    decimal FilledDubbiQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDubbiQTY),0) from tbl_BatchFillingMaster      where ColorID=" + item + " " + str + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal FilledQuarterQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledQuarterQTY),0) from tbl_BatchFillingMaster  where ColorID=" + item + " " + str + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal FilledGallonQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledGallonQTY),0) from tbl_BatchFillingMaster    where ColorID=" + item + " " + str + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal FilledDrumQTY = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDrumQTY),0) from tbl_BatchFillingMaster        where ColorID=" + item + " " + str + " and Fillingdate < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    //SaleReturnBefore
//    decimal opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Dubbi' and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Quarter' and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title  where packing='Gallon' and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    decimal opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Drum' and Status  in ('SRINV','TSRINV') and prid=" + item + " " + str + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    //SaleBefore
//    opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Dubbi' and Status in ('SINV','TSINV','WTSINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Quarter' and Status in ('SINV','TSINV','WTSINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Gallon' and Status in ('SINV','TSINV','WTSINV') and prid=" + item + " " + str + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID AND srsdetail.Status = srsm.title   where packing='Drum' and Status in ('SINV','TSINV','WTSINV') and prid=" + item + " " + str + " and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    //SaleTwoBefore
//    opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Dubbi' and prid=" + item + " " + str + " and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Quarter' and prid=" + item + "  " + str + " and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Gallon' and prid=" + item + " " + str + "  and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID   where Orderdetail.packing='Drum' and prid=" + item + " " + str + "  and orderm.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    //DemageBefore
//    //opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Dubbi' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    //opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2  where packing='Quarter' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    //opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Gallon' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    //opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from sampledetail2 where packing='Drum' and pid=" + item + "  and date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    opening_saletaxDubbi = opening_saletaxDubbi - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid where packing='Dubbi' and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxQuarter = opening_saletaxQuarter - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid  where packing='Quarter' and pid=" + item + " " + str + "  and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxGallon = opening_saletaxGallon - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid where packing='Gallon' and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();
//    opening_saletaxDrum = opening_saletaxDrum - _context.Database.SqlQuery<decimal>("SELECT ISNULL(SUM(sampledetail2.qty), 0) AS Expr1 FROM sampledetail2 INNER JOIN samplem2 ON sampledetail2.invid = samplem2.invid where packing='Drum' and pid=" + item + " " + str + " and sampledetail2.date < '" + StartDate.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//    decimal openingDubbi = OpeningDubbi + FilledDubbiQTY + opening_saletaxDubbi;
//    decimal openingQuarter = OpeningQuarter + FilledQuarterQTY + opening_saletaxQuarter;
//    decimal openingGallon = OpeningGallon + FilledGallonQTY + opening_saletaxGallon;
//    decimal openingDrum = OpeningDrum + FilledDrumQTY + opening_saletaxDrum;

//    decimal opening_Dubbi = openingDubbi;
//    decimal opening_Quarter = openingQuarter;
//    decimal opening_Gallon = openingGallon;
//    decimal opening_Drum = openingDrum;

//    foreach (DateTime day in EachDay(StartDate, Enddate))
//    {
//        string description = "";
//        decimal FilledDubbi = 0;
//        decimal FilledQuarter = 0;
//        decimal FilledGallon = 0;
//        decimal FilledDrum = 0;

//        //BatchFilling IN
//        decimal[] batchserial = _context.Database.SqlQuery<decimal>("select tbl_BatchFillingMaster.Id from tbl_BatchFillingMaster INNER JOIN Product ON Product.ProductName = tbl_BatchFillingMaster.ColorName  where ProductID=" + item + "  " + str + " and Fillingdate = '" + day.Date.ToString("yyyy-MM-dd") + "' Group by tbl_BatchFillingMaster.Id").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            FilledDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDubbiQTY),0) from tbl_BatchFillingMaster     where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();
//            FilledQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledQuarterQTY),0) from tbl_BatchFillingMaster where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();
//            FilledGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledGallonQTY),0) from tbl_BatchFillingMaster   where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();
//            FilledDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(FilledDrumQTY),0) from tbl_BatchFillingMaster       where ColorID=" + item + " and Id = " + batchserial[i]).FirstOrDefault();

//            string invid = _context.Database.SqlQuery<string>("select top(1) batchn from tbl_BatchFillingBatches  where Sr=" + batchserial[i] + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "'").FirstOrDefault();

//            description = "Batch Filling # " + invid;
//            openingDubbi = openingDubbi + FilledDubbi;
//            openingQuarter = openingQuarter + FilledQuarter;
//            openingGallon = openingGallon + FilledGallon;
//            openingDrum = openingDrum + FilledDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + FilledDubbi + "," + FilledQuarter + "," + FilledGallon + "," + FilledDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }

//        //SaleReturn IN
//        // batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('SRINV','TSRINV') and srsdetail.prid=" + item + "  and srsm.date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
//        //batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID   where srsm.title in ('SRINV','TSRINV') and srsdetail.prid=" + item + "  and srsm.date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
//        //for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        //{
//        //    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('SRINV','TSRINV') and prid=" + item).FirstOrDefault();
//        //    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('SRINV','TSRINV') and prid=" + item).FirstOrDefault();
//        //    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('SRINV','TSRINV') and prid=" + item).FirstOrDefault();
//        //    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('SRINV','TSRINV') and prid=" + item).FirstOrDefault();
//        //    description = "Sale Return Inv # " + batchserial[i];
//        //    openingDubbi = openingDubbi + opening_saletaxDubbi;
//        //    openingQuarter = openingQuarter + opening_saletaxQuarter;
//        //    openingGallon = openingGallon + opening_saletaxGallon;
//        //    openingDrum = openingDrum + opening_saletaxDrum;
//        //    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        //}
//        //SaleReturn IN SRINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('SRINV') and srsdetail.prid=" + item + "  " + str + " and srsm.date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('SRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('SRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('SRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('SRINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Return Inv # " + batchserial[i];
//            openingDubbi = openingDubbi + opening_saletaxDubbi;
//            openingQuarter = openingQuarter + opening_saletaxQuarter;
//            openingGallon = openingGallon + opening_saletaxGallon;
//            openingDrum = openingDrum + opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }
//        //SaleReturn IN TSRINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('TSRINV') and srsdetail.prid=" + item + " " + str + "  and srsm.date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('TSRINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Return Inv # " + batchserial[i];
//            openingDubbi = openingDubbi + opening_saletaxDubbi;
//            openingQuarter = openingQuarter + opening_saletaxQuarter;
//            openingGallon = openingGallon + opening_saletaxGallon;
//            openingDrum = openingDrum + opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }


//        //Sale
//        //batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('SINV','TSINV','WTSINV') and prid=" + item + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
//        //for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        //{

//        //    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('SINV','TSINV','WTSINV') and prid=" + item).FirstOrDefault();
//        //    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('SINV','TSINV','WTSINV') and prid=" + item).FirstOrDefault();
//        //    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('SINV','TSINV','WTSINV') and prid=" + item).FirstOrDefault();
//        //    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('SINV','TSINV','WTSINV') and prid=" + item).FirstOrDefault();
//        //    description = "Sale Inv # " + batchserial[i];
//        //    openingDubbi = openingDubbi - opening_saletaxDubbi;
//        //    openingQuarter = openingQuarter - opening_saletaxQuarter;
//        //    openingGallon = openingGallon - opening_saletaxGallon;
//        //    openingDrum = openingDrum - opening_saletaxDrum;
//        //    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        //}


//        //Sale SINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('SINV') and prid=" + item + " " + str + " and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {

//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('SINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('SINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('SINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('SINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }
//        //Sale TSINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('TSINV') and prid=" + item + " " + str + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {

//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('TSINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }
//        //Sale WTSINV
//        batchserial = _context.Database.SqlQuery<decimal>("select srsm.OrderID from srsdetail Inner Join srsm on srsdetail.OrderID = srsm.OrderID where srsm.title in ('WTSINV') and prid=" + item + " " + str + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by srsm.OrderID,srsm.title").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {

//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail    where OrderID=" + batchserial[i] + " and packing='Dubbi' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail  where OrderID=" + batchserial[i] + " and packing='Quarter' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail   where OrderID=" + batchserial[i] + " and packing='Gallon' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from srsdetail     where OrderID=" + batchserial[i] + " and packing='Drum' and Status in ('WTSINV') and prid=" + item).FirstOrDefault();
//            description = "Sale Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }




//        //DemageBefore
//        batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Wastage') AND (sampledetail2.pid = " + item + ") " + str + " and (sampledetail2.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2     WHERE packing='Dubbi' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2   WHERE packing='Quarter' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2    WHERE packing='Gallon' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2      WHERE packing='Drum' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            description = "Wastage Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }

//        batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status <> 'Wastage') AND (sampledetail2.pid = " + item + ") " + str + " and (sampledetail2.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2     WHERE packing='Dubbi' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2   WHERE packing='Quarter' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2    WHERE packing='Gallon' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2      WHERE packing='Drum' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//            description = "Damage Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }


//        //batchserial = _context.Database.SqlQuery<decimal>("SELECT sampledetail2.invid FROM samplem2 INNER JOIN sampledetail2 ON samplem2.invid = sampledetail2.invid WHERE (samplem2.status = 'Consumption') AND (sampledetail2.pid = " + item + ") and (sampledetail2.date = '" + day.Date.ToString("yyyy-MM-dd") + "') GROUP BY sampledetail2.invid").ToArray();
//        //for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        //{
//        //    opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2     WHERE packing='Dubbi' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//        //    opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2   WHERE packing='Quarter' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//        //    opening_saletaxGallon = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2    WHERE packing='Gallon' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//        //    opening_saletaxDrum = _context.Database.SqlQuery<decimal>("SELECT isnull(sum(qty),0) FROM sampledetail2      WHERE packing='Drum' AND (pid = " + item + ") AND (invid = '" + batchserial[i] + "')").FirstOrDefault();
//        //    description = "Consumption Inv # " + batchserial[i];
//        //    openingDubbi = openingDubbi - opening_saletaxDubbi;
//        //    openingQuarter = openingQuarter - opening_saletaxQuarter;
//        //    openingGallon = openingGallon - opening_saletaxGallon;
//        //    openingDrum = openingDrum - opening_saletaxDrum;
//        //    _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        //}
//        //SaleTwoBefore
//        batchserial = _context.Database.SqlQuery<decimal>("select orderm.OrderID from Orderdetail Inner Join orderm on Orderdetail.OrderID = orderm.OrderID where prid=" + item + " " + str + "  and date = '" + day.Date.ToString("yyyy-MM-dd") + "' group by orderm.OrderID").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail      where OrderID=" + batchserial[i] + " and packing='Dubbi' and prid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail    where OrderID=" + batchserial[i] + " and packing='Quarter' and prid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail     where OrderID=" + batchserial[i] + " and packing='Gallon' and prid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from Orderdetail       where OrderID=" + batchserial[i] + " and packing='Drum' and prid=" + item).FirstOrDefault();
//            description = "Sale Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }

//        //transfer IN
//        batchserial = _context.Database.SqlQuery<decimal>("SELECT FinishTransferM.invid FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + ")  AND (ToRegion=" + region + ") AND (FinishTransferM.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by FinishTransferM.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail      where invid=" + batchserial[i] + " and size='Dubbi' and pid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail    where invid=" + batchserial[i] + " and size='Quarter' and pid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail     where invid=" + batchserial[i] + " and size='Gallon' and pid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail       where invid=" + batchserial[i] + " and size='Drum' and pid=" + item).FirstOrDefault();
//            description = "Transfer IN Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "'," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + ",0,0,0,0," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }
//        //transfer Out
//        batchserial = _context.Database.SqlQuery<decimal>("SELECT FinishTransferM.invid FROM FinishTransferM INNER JOIN FinishTransferDetail on FinishTransferM.invid=FinishTransferDetail.invid WHERE (pid = " + item + ")  AND (FromRegion=" + region + ") AND (FinishTransferM.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by FinishTransferM.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail      where invid=" + batchserial[i] + " and size='Dubbi' and pid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail    where invid=" + batchserial[i] + " and size='Quarter' and pid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail     where invid=" + batchserial[i] + " and size='Gallon' and pid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from FinishTransferDetail       where invid=" + batchserial[i] + " and size='Drum' and pid=" + item).FirstOrDefault();
//            description = "Transfer Out Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }


//        //StockDistibution Out
//        batchserial = _context.Database.SqlQuery<decimal>("SELECT sd.invid  FROM StockDistributionDetail1 sdd1 INNER JOIN StockDistribution sd on sd.invid=sdd1.invid WHERE (pid = " + item + " )  " + str + " AND (sd.date = '" + day.Date.ToString("yyyy-MM-dd") + "')  group by sd.invid").ToArray();
//        for (int i = 0; i < batchserial.Distinct().Count(); i++)
//        {
//            opening_saletaxDubbi = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1      where invid=" + batchserial[i] + " and packing='Dubbi' and pid=" + item).FirstOrDefault();
//            opening_saletaxQuarter = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1    where invid=" + batchserial[i] + " and packing='Quarter' and pid=" + item).FirstOrDefault();
//            opening_saletaxGallon = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1     where invid=" + batchserial[i] + " and packing='Gallon' and pid=" + item).FirstOrDefault();
//            opening_saletaxDrum = _context.Database.SqlQuery<decimal>("select isnull(sum(qty),0) from StockDistributionDetail1       where invid=" + batchserial[i] + " and packing='Drum' and pid=" + item).FirstOrDefault();
//            description = "Stock Distibution  Inv # " + batchserial[i];
//            openingDubbi = openingDubbi - opening_saletaxDubbi;
//            openingQuarter = openingQuarter - opening_saletaxQuarter;
//            openingGallon = openingGallon - opening_saletaxGallon;
//            openingDrum = openingDrum - opening_saletaxDrum;
//            _context.Database.ExecuteSqlCommand("INSERT INTO ItemLedger_finished (Date,Description,DabbiIN,QuarterIN,GallonIN,DrumIN,DabbiOUT,QuarterOUT,GallonOUT,DrumOUT,DabbiBAL,QuarterBAL,GallonBAL,DrumBAL) VALUES ('" + day.Date.ToString("yyyy-MM-dd") + "','" + description + "',0,0,0,0," + opening_saletaxDubbi + "," + opening_saletaxQuarter + "," + opening_saletaxGallon + "," + opening_saletaxDrum + "," + openingDubbi + "," + openingQuarter + "," + openingGallon + "," + openingDrum + ")");
//        }




//    }
//    string strqry = "";

//    if (itemsize == "1")
//        strqry = "select ID, Date, Description, DabbiIN, DabbiOUT, DabbiBAL from ItemLedger_finished where DabbiIN!=0 OR DabbiOUT!=0";
//    if (itemsize == "2")
//        strqry = "select ID, Date, Description, QuarterIN as DabbiIN, QuarterOUT as DabbiOUT, QuarterBAL as DabbiBAL from ItemLedger_finished where QuarterIN!=0 OR QuarterOUT!=0";
//    if (itemsize == "3")
//        strqry = "select ID, Date, Description, GallonIN as DabbiIN, GallonOUT as DabbiOUT, GallonBAL as DabbiBAL from ItemLedger_finished where GallonIN!=0 OR GallonOUT!=0";
//    if (itemsize == "4")
//        strqry = "select ID, Date, Description, DrumIN as DabbiIN, DrumOUT as DabbiOUT, DrumBAL as DabbiBAL from ItemLedger_finished where DrumIN!=0 OR DrumOUT!=0";

//    var item_ledger = _context.Database.SqlQuery<ItemLedger_finished>(strqry).ToList();
//    ViewBag.StartDate = Convert.ToDateTime(s_date).ToString("yyyy-MM-dd");
//    ViewBag.EndDate = Convert.ToDateTime(e_date).ToString("yyyy-MM-dd");

//    if (itemsize == "1")
//        ViewBag.OpeningDubbi = opening_Dubbi;
//    if (itemsize == "2")
//        ViewBag.OpeningDubbi = opening_Quarter;
//    if (itemsize == "3")
//        ViewBag.OpeningDubbi = opening_Gallon;
//    if (itemsize == "4")
//        ViewBag.OpeningDubbi = opening_Drum;

//    if (itemsize == "1")
//        ViewBag.itemname = item_name + " (Dubbi)";
//    if (itemsize == "2")
//        ViewBag.itemname = item_name + " (Quarter)";
//    if (itemsize == "3")
//        ViewBag.itemname = item_name + " (Gallon)";
//    if (itemsize == "4")
//        ViewBag.itemname = item_name + " (Drum)";

//    return View(item_ledger);
//}